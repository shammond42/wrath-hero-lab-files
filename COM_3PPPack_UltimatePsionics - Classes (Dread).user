<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="cHelpPU2" name="Dread" compset="Class" uniqueness="unique">
    <fieldval field="srcPageNum" value="40"/>
    <fieldval field="srcBookInf" value="Ultimate Psionics"/>
    <fieldval field="cHDSides" value="8"/>
    <fieldval field="cAbbr" value="Dre"/>
    <fieldval field="cSpecSing" value="Terror"/>
    <fieldval field="cPsiSPowNm" value="Talents"/>
    <fieldval field="cPsiSPowMa" value="2"/>
    <fieldval field="cSCRNumDce" value="3"/>
    <fieldval field="cSCRDceSiz" value="6"/>
    <fieldval field="cSCRMult" value="10"/>
    <fieldval field="cSkills" value="6"/>
    <arrayval field="cBonFtTot" index="16" value="4"/>
    <arrayval field="cPsiPPTot" index="0" value="1"/>
    <arrayval field="cPsiPPTot" index="1" value="2"/>
    <arrayval field="cPsiPPTot" index="2" value="4"/>
    <arrayval field="cPsiPPTot" index="3" value="6"/>
    <arrayval field="cPsiPPTot" index="4" value="8"/>
    <arrayval field="cPsiPPTot" index="5" value="12"/>
    <arrayval field="cPsiPPTot" index="6" value="16"/>
    <arrayval field="cPsiPPTot" index="7" value="20"/>
    <arrayval field="cPsiPPTot" index="8" value="24"/>
    <arrayval field="cPsiPPTot" index="9" value="28"/>
    <arrayval field="cPsiPPTot" index="10" value="36"/>
    <arrayval field="cPsiPPTot" index="11" value="44"/>
    <arrayval field="cPsiPPTot" index="12" value="52"/>
    <arrayval field="cPsiPPTot" index="13" value="60"/>
    <arrayval field="cPsiPPTot" index="14" value="68"/>
    <arrayval field="cPsiPPTot" index="15" value="80"/>
    <arrayval field="cPsiPPTot" index="16" value="92"/>
    <arrayval field="cPsiPPTot" index="17" value="104"/>
    <arrayval field="cPsiPPTot" index="18" value="116"/>
    <arrayval field="cPsiPPTot" index="19" value="128"/>
    <arrayval field="cPsiPowTot" index="0" value="1"/>
    <arrayval field="cPsiPowTot" index="1" value="2"/>
    <arrayval field="cPsiPowTot" index="2" value="3"/>
    <arrayval field="cPsiPowTot" index="3" value="4"/>
    <arrayval field="cPsiPowTot" index="4" value="5"/>
    <arrayval field="cPsiPowTot" index="5" value="6"/>
    <arrayval field="cPsiPowTot" index="6" value="7"/>
    <arrayval field="cPsiPowTot" index="7" value="8"/>
    <arrayval field="cPsiPowTot" index="8" value="9"/>
    <arrayval field="cPsiPowTot" index="9" value="10"/>
    <arrayval field="cPsiPowTot" index="10" value="11"/>
    <arrayval field="cPsiPowTot" index="11" value="12"/>
    <arrayval field="cPsiPowTot" index="12" value="13"/>
    <arrayval field="cPsiPowTot" index="13" value="14"/>
    <arrayval field="cPsiPowTot" index="14" value="15"/>
    <arrayval field="cPsiPowTot" index="15" value="16"/>
    <arrayval field="cPsiPowTot" index="16" value="17"/>
    <arrayval field="cPsiPowTot" index="17" value="18"/>
    <arrayval field="cPsiPowTot" index="18" value="19"/>
    <arrayval field="cPsiPowTot" index="19" value="20"/>
    <arrayval field="cPsiLevTot" index="0" value="1"/>
    <arrayval field="cPsiLevTot" index="1" value="1"/>
    <arrayval field="cPsiLevTot" index="2" value="1"/>
    <arrayval field="cPsiLevTot" index="3" value="2"/>
    <arrayval field="cPsiLevTot" index="4" value="2"/>
    <arrayval field="cPsiLevTot" index="5" value="2"/>
    <arrayval field="cPsiLevTot" index="6" value="3"/>
    <arrayval field="cPsiLevTot" index="7" value="3"/>
    <arrayval field="cPsiLevTot" index="8" value="3"/>
    <arrayval field="cPsiLevTot" index="9" value="4"/>
    <arrayval field="cPsiLevTot" index="10" value="4"/>
    <arrayval field="cPsiLevTot" index="11" value="4"/>
    <arrayval field="cPsiLevTot" index="12" value="5"/>
    <arrayval field="cPsiLevTot" index="13" value="5"/>
    <arrayval field="cPsiLevTot" index="14" value="5"/>
    <arrayval field="cPsiLevTot" index="15" value="6"/>
    <arrayval field="cPsiLevTot" index="16" value="6"/>
    <arrayval field="cPsiLevTot" index="17" value="6"/>
    <arrayval field="cPsiLevTot" index="18" value="6"/>
    <arrayval field="cPsiLevTot" index="19" value="6"/>
    <arrayval field="cCustTot" index="1" value="1"/>
    <arrayval field="cCustTot" index="3" value="2"/>
    <arrayval field="cCustTot" index="5" value="3"/>
    <arrayval field="cCustTot" index="7" value="4"/>
    <arrayval field="cCustTot" index="9" value="5"/>
    <arrayval field="cCustTot" index="11" value="6"/>
    <arrayval field="cCustTot" index="13" value="7"/>
    <arrayval field="cCustTot" index="15" value="8"/>
    <arrayval field="cCustTot" index="17" value="9"/>
    <arrayval field="cCustTot" index="19" value="10"/>
    <arrayval field="cBonFtTot" index="4" value="1"/>
    <arrayval field="cBonFtTot" index="8" value="2"/>
    <arrayval field="cBonFtTot" index="12" value="3"/>
    <usesource source="pPsiUn"/>
    <tag group="Classes" tag="Dread" name="Dread"/>
    <tag group="Psionics" tag="Class"/>
    <tag group="cAttack" tag="Medium"/>
    <tag group="cRef" tag="Good"/>
    <tag group="cWill" tag="Good"/>
    <tag group="cFort" tag="Poor"/>
    <tag group="fInclude" tag="fPUAddTerr"/>
    <tag group="fInclude" tag="fPUDisFear"/>
    <tag group="fInclude" tag="fPUExTerr"/>
    <tag group="fInclude" tag="fPUFearMas"/>
    <tag group="fInclude" tag="fPUMultCon"/>
    <tag group="fInclude" tag="fPUOpeDoor"/>
    <tag group="fInclude" tag="fPUTouTerr"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skPUAhypno"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skClimb"/>
    <tag group="ClassSkill" tag="Craft"/>
    <tag group="ClassSkill" tag="skEscape"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skPUKnwPsi"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skStealth"/>
    <tag group="ClassSkill" tag="Profession"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClassSkill" tag="skSpellcr"/>
    <tag group="ClassSkill" tag="skSwim"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fWepMart"></bootstrap>
    <bootstrap thing="fArmLight"></bootstrap>
    <bootstrap thing="fSimple"></bootstrap>
    <bootstrap thing="cPUFearIns">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUDevaTou">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUTerrors">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPUChanTer">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUAuraFea">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUImmFear">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cPUShaTwin">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPUTwinFea">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPUTwinFea">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPUShaTwin">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPUShaTwin">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPUFearInc">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <link linkage="psiattr" thing="aCHA"/>
    </thing>
  <thing id="cPUDread" name="Dread" description="Most creatures must learn to deal with fear in some fashion. For some, it is confronting and overcoming their fears. For others, it is always running away. For the dread, it is using her fear as a weapon, it is understanding how fear works and manipulating the fears of others in unusual and devastating ways. The dread is the master of fear and terror.\n\n{b}Role:{/b} A dread is an opponent on the battlefield who can turn the bravest of enemies into a sniveling coward with but a touch. Combining moderate manifesting ability with destructive melee attacks, the dread is a dangerous opponent to ignore. Out of combat, the dread uses fear and intimidation to manipulate or bully others into the path she deems best.\n\n{b}Alignment:{/b} Any." compset="ClassLevel" maxlimit="20">
    <usesource source="pPsiUn"/>
    <tag group="ClassType" tag="Normal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cHelpPU2"></bootstrap>
    <link linkage="helper" thing="cHelpPU2"/>
    </thing>
  <thing id="cPUFearIns" name="Fearsome Insight" description="The dread&apos;s connection to the fears and the subconscious grows and she gains a greater understanding of the mental faculties which regulate fear. This translates into an insight bonus to Intimidate equal to half her class level (minimum +1)." compset="ClSpecial" summary="1/2 level (Minimum 1) Insight bonus to Intimidate.">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Intimidate bonus equal to 1/2 level
      field[abValue].value += maximum(round(field[xTotalLev].value/2,0,-1),1)

      #applybonus[BonInsight,hero.childfound[skIntim],field[abValue].value]]]></eval>
    </thing>
  <thing id="cPUDevaTou" name="Devastating Touch" description="A dread is able to channel psionic energy from fear and nightmares into a touch that causes pain. To use this ability, a dread must make a melee touch attack as a standard action on a living target. If the attack hits, it deals 1d6 points of damage plus 1 point per class level. The dread does not add his Strength modifier to the damage of this attack." compset="ClSpecial">
    <fieldval field="abValue3" value="6"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abDuration" tag="Instant"/>
    <tag group="abRange" tag="Touch"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="wCritMin" tag="20"/>
    <tag group="wCritMult" tag="2"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="IsWeapon" tag="wTouch"/>
    <tag group="Helper" tag="NoSelect"/>
    <eval phase="Final" priority="10000"><![CDATA[
      ~ If we've been Disabled, hide the weapon and get out
      If (tagis[Helper.SpcDisable] = 1) Then
        perform assign[Hide.Weapon]
        done
      Endif
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ abValue  - Holds the number of dice
      ~ abValue3 - Holds the dice size
      ~ abValue2 - Holds the Plus Damage
      field[abValue].value += field[xCount].value
      field[abValue2].value += field[xTotalLev].value

      ~ Build damage dice and plus value
      field[abText].text = field[abValue].value & "d" & field[abValue3].value & signed(field[abValue2].value)

      ~ Fill in the fixed melee damage
      field[wFixDamage].text = field[abText].text]]></eval>
    </thing>
  <thing id="cPUTerrors" name="Terror" description="Beginning at 2nd level, a dread learns to harness the power of fear in a variety of ways called terrors. Using a terror is a swift action. Some terrors are channelled through his devastating touch class feature. These terrors charge a dread&apos;s touch (and later his weapon) until his next successful attack that round.\n\nSome terrors can be augmented by spending power points, similar to manifesting powers, to increase their effect. When augmenting his terrors with power points, the dread cannot spend more power points than his manifester level on any single use of a terror.\n\nA dread can use his terrors a total number of times per day equal to his dread level + his Charisma modifier.\n\n{b}Note:{/b} Use the counter here to set the number of extra Power Points you are using to activate your Terrors.  In example for &apos;Horrible Strike&apos; if you want to increase the damage by an additional 1d6 set the counter here to two. Then when you activate the Horrible Strike terror the correct dice will be added to the Devastating Touch ability. These power points are NOT removed from your power point total listed on the Psionics tab." compset="ClSpecial" summary="Harness fear in a variety of ways called terrors.">
    <fieldval field="actIncrNam" value="PP"/>
    <fieldval field="actUserMin" value="0"/>
    <tag group="ChargeAttr" tag="aCHA"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="Helper" tag="UserAdjust"/>
    <tag group="User" tag="HideActChk"/>
    <tag group="User" tag="NoActSign"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="LvNamePar" tag="IncAction"/>
    <eval phase="PreLevel" priority="10050"><![CDATA[
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If we are still using Cha to calc terrors get out now!
      doneif (tagis[ChargeAttr.aCHA] = 1)

      perform pulltags[ChargeAttr.?,StandardDC]

      foreach pick in hero from BaseCustSp where "abCategory.PUTerror & StandardDC.?"
        perform eachpick.delete[StandardDC.?]
        perform eachpick.pushtags[StandardDC.?]
      nexteach

      ~ We ourself don't have a DC so remove tag
      perform delete[StandardDC.?]]]></eval>
    <eval phase="PostLevel" priority="500" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      field[actUserMax].value = field[xTotalLev].value]]></eval>
    <eval phase="PostLevel" priority="9000" index="3"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Set amount of Power Points in use into abValue
      field[abValue].value += field[actUser].value]]></eval>
    </thing>
  <thing id="cPUAuraFea" name="Aura of Fear" description="At 3rd level, a dread radiates a palpably daunting aura that causes all enemies within 10 feet to take a -4 penalty on saving throws against fear effects. Creatures that are normally immune to fear lose that immunity while within 10 feet of a dread with this ability. This ability functions only while the dread remains conscious, not if she is unconscious or dead." compset="ClSpecial" summary="Penalty to saving throws vs fear and creatures lose immunity to fear ability.">
    <fieldval field="abRange" value="10"/>
    <fieldval field="abValue" value="-4"/>
    <tag group="abAction" tag="Constant"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="LvNamePar" tag="AppValue"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="LvNamePar" tag="SignAppVal"/>
    </thing>
  <thing id="cPUChanTer" name="Channel Terror" description="At 3rd level, the dread learns how to channel her terrors through any melee weapon she is holding or through her devastating touch class feature, even if using devastating touch as a ranged attack (such as through the mindlock terror). If channeling a terror through a weapon, it does not gain the benefits of the devastating touch ability." compset="ClSpecial" summary="Channel your terrors into a melee weapon or devastating touch.">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPUImmFear" name="Immersed in Fear" description="At 7th level, the dread gains immunity to fear (psionic or otherwise). This ability functions whether the dread is conscious or unconscious, but not when she is dead." compset="ClSpecial" summary="Immunity to fear (psionic or otherwise).">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="xImmFear">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Dread >= 7 & !AbReplace.cPUImmFear]]></containerreq>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Change the fear immunity over to be super natural
      perform hero.childfound[xImmFear].tagreplace[AbilType.?,AbilType.Super]]]></eval>
    </thing>
  <thing id="cPUShaTwin" name="Shadow Twin" description="A dread of 11th level is able to draw forth a replica of herself formed from fears and nightmares. The shadow twin appears at a location chosen by the dread that is within 30 ft. and lasts for one round per class level. The dread and this shadow twin are, for all intents and purposes, one person - including only having one round&apos;s worth of actions to use between the two, sharing attacks of opportunity, sharing a single pool of hit points and power points, and having access to all of the same abilities and daily uses of those abilities. If the shadow twin is damaged or healed, the dread takes the damage or healing, and vice versa. If both the dread and the shadow twin are affected by the same area of effect, damage is only counted once.\n\nIf the shadow twin attacks, it uses the dread&apos;s attack values. The shadow twin can threaten squares and has all the same equipment as the dread, but charged items or items with limited uses per day have their uses shared between the two. Any permanent magic items are also active on the shadow twin.\n\nThe shadow twin can allow the dread to flank an enemy, make attacks of opportunity he wouldn&apos;t normally be able to do, extend the range for a power or mindlock, or just scout ahead.\n\nEffects, both beneficial and detrimental, that affect the dread also affect the shadow twin, and vice versa. The shadow twin must stay within 30 ft. of the dread or the effect immediately ends.\n\nA dread can use shadow twin a number of times per day equal to his Charisma modifier.\n\nAt 15th level, the shadow twin must stay within 100 ft. of the dread before the effect ends.\n\nAt 19th level, the shadow twin must stay within 400 ft. of the dread before the effect ends." compset="ClSpecial" summary="Form shadowy replica of yourself from fears and nightmares.">
    <fieldval field="abRange" value="30"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="DayRound"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      var range as number

      ~ Set range values
      if (field[xIndex].value = 1) then
        range  = 30
      elseif (field[xIndex].value = 2) then
        range  = 100
      elseif (field[xIndex].value = 3) then
        range  = 400
      endif

      ~ Set the list name
      field[listname].text = field[thingname].text & " (" & range & " ft)"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set range values
      If (field[xCount].value = 2) Then
        field[abValue].value += 70
      Elseif (field[xCount].value = 3) Then
        field[abValue].value += 370
      Endif]]></eval>
    </thing>
  <thing id="cPUTwinFea" name="Twin Fear" description="When a dread of at least 11th level has a shadow twin active, if any creature within 30 ft. of the dread or the shadow twin suffers from the shaken, frightened, or panicked condition at the start of the dread&apos;s turn, the shadow twin uses a separate action pool instead of sharing the round&apos;s actions with the dread for that round. This means that it and the dread could both make attacks in the same round.\n\nAt 15th level, if any creature within 30 ft. of the dread or shadow twin suffers from the frightened or panicked condition, the shadow twin is treated as if under the affect of the form of doom power. Unlike other effects, the dread is not also under this effect." compset="ClSpecial" summary="If panicked or frightened creature, Shadow Twin gains own action pool.">
    <fieldval field="abRange" value="30"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      var action as string
      ~ Set range values
      if (field[xIndex].value = 1) then
        action = "own action"
      elseif (field[xIndex].value = 2) then
        action  = "form of doom"
      endif

      ~ Set the list name
      field[listname].text = field[thingname].text & " (" & action & ")"

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set range values
      if (field[xCount].value = 1) then
        field[abText].text = "own action"
      elseif (field[xCount].value = 2) then
        field[abText].text  = "form of doom"
        perform assign[DescInfo.puForDoom6]
      endif]]></eval>
    </thing>
  <thing id="cPUFearInc" name="Fear Incarnate" description="At 20th level the dread no longer acts as a simple conduit between the realm of nightmares and the Material Plane, but becomes the embodiment of nightmares. The dread&apos;s type changes to Outsider (native), he gains DR 10/psionic, and he gains the ability to turn ethereal at will. In addition, the dread can use the nightmare form terror at will, even if he does not already have it. Using nightmare form no longer consumes a use of his terrors for the day." compset="ClSpecial" summary="Gain DR 10/psionic and become a outsider (native).">
    <fieldval field="abValue" value="10"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abDuration" tag="Constant"/>
    <tag group="abRange" tag="Personal"/>
    <tag group="abAction" tag="None"/>
    <bootstrap thing="tpOutsider">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Dread >= 20 & !AbReplace.cPUFearInc]]></containerreq>
      </bootstrap>
    <bootstrap thing="stNative">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.Dread >= 20 & !AbReplace.cPUFearInc]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="505"><![CDATA[
      call foctoclass

      doneif (state.isfocus = 0)

      var level as number

      if (focus.tagis[component.Configure] <> 0) then
        level = focus.field[cfgLevel].value
      else
        level = focus.field[cTotalLev].value
        endif

      doneif (level < tagvalue[ClSpecWhen.?])

      ~ don't do this if the Perfect Self ability is replaced
      doneif (hero.tagis[AbReplace.cPUFearInc] <> 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      perform hero.assign[TypeAndAug.tpOutsider]]]>
      <before name="Override Type"/>
      </eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Add our damage reduction
      #applydr[xxDRPsi, field[abValue].value]]]></eval>
    </thing>
  <thing id="cPUTerChaT" name="Chase Terror" description="Whenever an adjacent foe that is shaken, frightened, or panicked attempts to take a 5-foot step away from the dread, the dread can, as an immediate action, take a 5-foot step so long as the dread ends up adjacent to the foe that triggered this ability." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    </thing>
  <thing id="cPUTerConN" name="Concealed Nightmare" description="The dread gains a shroud of materializing fears around her while using the nightmare form terror, giving her concealment (20% miss chance). The dread must be at least 14th level and have the Nightmare Form terror to select this option. This terror is used when Nightmare Form is activated and does not take a separate use of terrors to activate." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="PreAttr" priority="1000"><![CDATA[
      ~ If we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If Concealed Nightmare, Improved is present then get out now!
      doneif (hero.tagis[Ability.cPUTerCon2] = 1)
      ~ If Nightmare Form not active get out now!
      doneif (hero.tagis[Activated.cPUTerNFor] = 0)

      ~Activate Concealment condition
      perform hero.assign[Condition.pstConceal]]]></eval>
    <prereq message="Dread level 14 or higher required for this Terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 14)]]></validate>
      </prereq>
    <prereq message="Nightmare Form terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerNFor] <> 0)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerCon2" name="Concealed Nightmare, Improved" description="While using the Nightmare Form terror, the dread gains total concealment (50% miss chance). The dread must have the Nightmare Form and Concealed Nightmare terrors to select this option. This terror is used when Nightmare Form is activated and does not take a separate use of terrors to activate." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="PreAttr" priority="1000"><![CDATA[
      ~ If we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If Nightmare Form not active get out now!
      doneif (hero.tagis[Activated.cPUTerNFor] = 0)

      ~Activate Total Concealment condition
      perform hero.assign[Condition.pstConcTot]]]></eval>
    <prereq message="Nightmare Form terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerNFor] <> 0)]]></validate>
      </prereq>
    <prereq message="Conceale Nightmare Form terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerConN] <> 0)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerCons" name="Consuming Nightmare" description="The dread&apos;s next attack infects the target with nightmare so overwhelming it threatens to strike the creature dead. The target must make a Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier) or die. If the target succeeds, it becomes immune to this terror for 24 hours. This is a mind-affecting fear death effect. The dread must be at least 16th level to select this option." compset="CustomSpec" summary="Kill target if they fail a WillSave." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="User" tag="Activation"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 16 or higher required for this Terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 16)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerFeaI" name="Fear Incarnate" description="The dread&apos;s connection to the realm of nightmares and her understanding of the fears of others gives her a terrible insight into how to shake people&apos;s faith in themselves, granting her a bonus to Intimidate equal to her class level while using the nightmare form terror. The dread must be at least 12th level and have the Nightmare Form terror to select this option." compset="CustomSpec" summary="Intimidate bonus while in Nightmare Form." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If Nightmare Form not active get out now!
      doneif (hero.tagis[Activated.cPUTerNFor] = 0)

      ~ Bonus to intimidate equal to level
      #skillbonus[skIntim] += field[xTotalLev].value]]></eval>
    <prereq message="Dread level 12 or higher required for this Terror.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 12)]]></validate>
      </prereq>
    <prereq message="Nightmare Form terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerNFor] <> 0)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerHaSt" name="Haunting Steps" description="The dread&apos;s attack slows the target (as the spell) for 1 round per dread level unless she makes a successful Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier). The dread must be at least 8th level to select this option." compset="CustomSpec" summary="Slow target if fails Will Save." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="User" tag="Activation"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 8 or higher required for this Terror.">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 8)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerHorS" name="Horrible Strike" description="The dread&apos;s attack deals an extra 1d6 points of damage as she empowers her attacks through her connection to the region of nightmares. For every 2 power points spent, this damage increases by 1d6. The dread must be at least 4th level to select this option." compset="CustomSpec" summary="Bonus 1d6 (+1d6/2pp spent) damage with attacks." uniqueness="useronce">
    <fieldval field="abValue" value="1"/>
    <usesource source="pPsiUn"/>
    <tag group="abCategory" tag="PUTerror"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="User" tag="Activation"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not active get out now! &
      doneif (field[abilActive].value = 0)

      ~ Increase dice by 1d6 per 2PP spent
      field[abValue].value += round(#value[cPUTerrors]/2,0,-1)

      ~ Increase Devastating Touch dice damage
      #value[cPUDevaTou] += field[abValue].value]]></eval>
    <eval phase="Final" priority="40000" index="2"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 4 or higher required for this Terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 8)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerIncF" name="Incite Fear" description="The dread&apos;s next successful attack incites fear in her target. The target must make a Will saving throw (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier) or become shaken for 1d4 rounds. This is a mind-affecting fear effect." compset="CustomSpec" summary="Target becomes shaken for 1d4 rounds if they fail a WillSave." uniqueness="useronce">
    <fieldval field="abDuration" value="1"/>
    <fieldval field="abDuraDiSz" value="4"/>
    <usesource source="pPsiUn"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="abCategory" tag="PUTerror"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="LvNamePar" tag="IncDurati"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    </thing>
  <thing id="cPUTerInvG" name="Invigorating Fear" description="If the dread&apos;s reduces an enemy to 0 or fewer hit points this round, she gains temporary hit points equal to her Charisma modifier." compset="CustomSpec" summary="Gain temp HP if enemy reduced to 0 or fewer HP." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abCategory" tag="PUTerror"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPUTerLinF" name="Lingering Fear" description="The dread&apos;s attack causes a lingering fear in the target which prevents rest for one day unless it makes a successful Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier). Inability to rest means the target cannot regain spells or power points, nor heal normally. For each 2 power points spent, this fear lingers for an additional day. This is a mind-affecting fear effect. The dread must be at least 10th level to select this option." compset="CustomSpec" summary="Target becomes unable to rest for 1 day (+1 day/2pp) if they fail a Will Save." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abCategory" tag="PUTerror"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 10 or higher required">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 10)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerMadd" name="Maddening Fear" description="The dread&apos;s next successful attack imposes a -2 penalty to the struck creature&apos;s Wisdom score in addition to its normal damage. This is mind-affecting fear effect. The dread must be at least 4th level to select this option." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abCategory" tag="PUTerror"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 4 or higher required for this terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 4)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerMndD" name="Mind Drain" description="The dread&apos;s attack drains a number of power points equal to the dread&apos;s level unless the target makes a successful Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier). When used against a target with spellcasting, the dread drains away one spell at random equal to 1/2 her dread level or the next lowest level available if none exist for the applicable level. If the target has both spellcasting and power points, the dread chooses which to drain. This is a mind-affecting fear effect. The dread must be at least 6th level to select this option." compset="CustomSpec" summary="Target loses PP equal to Dread level (or a spell at random equal to 1/2 Dread level) on failed Will Save." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 6 or higher required for this terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 6)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerMndR" name="Mind Rend" description="The dread&apos;s attack deals 1d8 additional damage if his target would be denied a Dexterity bonus to AC (whether the target actually has a Dexterity bonus or not). If the dread spends a power point when activating this terror, the damage increases to 1d10. This extra damage is not multiplied on a critical hit. The dread must be 4th level to take this terror. This terror can be taken one additional time every three levels thereafter (7th, 10th, etc). Each time, it increases the additional damage by one die." compset="CustomSpec" summary="Deal additional damage when target denied DEX bonus to AC.">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="PostLevel" priority="10050" index="2"><![CDATA[
      ~ If we are not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If PP spent then dice is 1d10 else 1d8
      If (#value[cPUTerrors] <> 0) Then
        field[abValue2].value += 10
      Else
        field[abValue2].value += 8
      Endif

      ~ Dice is the number of times this ability has been taken
      field[abValue].value += field[abValue5].value

      ~ Build extra damage dice
      field[abText].text = " plus " & field[abValue].value & "d" & field[abValue2].value

      ~ Add extra damage info
      #extradamage[hero.childfound[cPUDevaTou],field[abText].text,field[thingname].text]

      ~ Set description information tag
      perform hero.childfound[cPUDevaTou].pushtags[DescInfo.?]]]></eval>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set Helper.FirstCopy &
      call X1SetFirst

      ~ If we're not bootstrapped to something, get out now!
      doneif (isroot = 0)

      ~ Using OverCrit tags for getting this ability "free"
      perform hero.pushtags[OverCrit.?]]]></eval>
    <prereq message="">
      <validate><![CDATA[
        var allowed as number
        var taken as number
        allowed = 1
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        ~ At level 7 can take this again
        If (levels >= 7) Then
          allowed += 1
        Endif
        ~ At level 10 can take this again
        If (levels >= 10) Then
          allowed += 1
        Endif
        ~ At level 13 can take this again
        If (levels >= 13) Then
          allowed += 1
        Endif
        ~ At level 16 can take this again
        If (levels >= 16) Then
          allowed += 1
        Endif
        ~ At level 19 can take this again
        If (levels >= 19) Then
          allowed += 1
        Endif

        ~ Count the number of times manually added
        taken = tagcount[HasAbility.cPUTerMndR] - tagcount[OverCrit.cPUTerMndR]

        ~ if we're a pick, then there must be 3 or fewer copies of
        ~ this ability
        If (@ispick <> 0) Then
          validif (taken <= allowed)

        ~ otherwise, look for fewer, since we're adding this
        Else
          validif (taken < allowed)
        Endif

        @message = "You may not have more than " & allowed & " copies of this ability."]]></validate>
      </prereq>
    <prereq message="Dread level 4 or higher required for this terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 4)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerMndl" name="Mindlock" description="The dread can invade the mind of an enemy through their subsconscious by making a melee touch attack that does not provoke attacks of opportunity. The target must succeed on a Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier), or be mindlocked for 1 minute per dread level. A mindlock allows the dread to either channel her devastating touch ability at range as a standard action which automatically hits, or attempt an Intimidate check on the target, even though the target might be out of normal range or out of sight. The range of the mindlock is 10 feet per dread level, and the dread does not need line of effect or line of sight once a mindlock is established. This is a mind-affecting effect. A dread can only sustain one mindlock at a time. If the dread attempts to mindlock a new target while another mindlock is active, the active mindlock ends. The dread is aware if the mindlock fails or ends, although she does not necessarily know the reason. The dread must be at least 4th level to select this option." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="Helper" tag="SingleAtt"/>
    <tag group="Helper" tag="WeaponSpec"/>
    <tag group="wCategory" tag="Melee"/>
    <tag group="wCategory" tag="Touch"/>
    <tag group="IsWeapon" tag="wTouch"/>
    <tag group="Helper" tag="NoSelect"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="ChargeCalc" tag="LevelX1"/>
    <tag group="Usage" tag="Minutes"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Range is 10ft per level
      field[abValue].value += field[xTotalLev].value * 10]]></eval>
    <prereq message="Dread level 4 or higher required for this terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 4)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerRngM" name="Ranged Mindlock" description="The dread can initiate the mindlock terror at a range of 10 ft. per class level instead of as a touch attack as a standard action, but she still requires initial line of sight and line of effect. The target still gets a Will save as normal to resist the mindlock. The dread must be at least 10th level and have the Mindlock terror to select this option." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      perform hero.childfound[cPUTerMndl].setfocus
      doneif (state.isfocus = 0)

      ~ Change mind lock weapon into a range touch attack
      perform focus.delete[wCategory.Melee]
      perform focus.delete[IsWeapon.wTouch]
      focus.field[abRange].value += field[xTotalLev].value * 10
      perform focus.assign[wCategory.RangeProj]
      perform focus.assign[IsWeapon.wRay]

      ~ Set description information tag
      perform focus.pushtags[DescInfo.?]]]></eval>
    <prereq message="Dread level 10 or higher required for this Terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 10)]]></validate>
      </prereq>
    <prereq message="Mindlock terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerMndl] <> 0)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerNFor" name="Nightmare Form" description="The dread&apos;s internal connection to the realm of nightmares allows her to take on the form of nightmares herself. The dread can use {i}Ectoplasmic Form{/i} as a psi-like ability at a manifester level equal to her dread level. The dread is still able to use her supernatural abilities while in Nightmare Form, although she suffers all normal restrictions on attacks and targeting. Each use of this ability is considered a daily use of the dread&apos;s Terrors. The dread must be at least 8th level to select this option." compset="CustomSpec" uniqueness="useronce">
    <fieldval field="abValue" value="20"/>
    <fieldval field="abValue2" value="10"/>
    <usesource source="pPsiUn"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <tag group="DescInfo" tag="puEctoFrm3"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="User" tag="Activation"/>
    <bootstrap thing="puEctoFrm3">
      <autotag group="Helper" tag="PsiLike"/>
      <autotag group="Usage" tag="AtWill"/>
      </bootstrap>
    <bootstrap thing="xImmPois">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="xImmCrit">
      <containerreq phase="First" priority="500"><![CDATA[fieldval:abilActive <> 0]]></containerreq>
      </bootstrap>
    <eval phase="First" priority="400"><![CDATA[
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not active get out now! &
      doneif (field[abilActive].value = 0)

      ~Activate Total Concealment condition
      perform hero.assign[Activated.cPUTerNFor]]]></eval>
    <eval phase="PostLevel" priority="10000" index="2"><![CDATA[
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If not active get out now! &
      doneif (field[abilActive].value = 0)

      perform hero.child[xFly].assign[Maneuver.Perfect]
      #applybonus[abValue,hero.child[xFly],field[abValue].value]

      #applydr[xxDRPsi,field[abValue2].value]]]></eval>
    <eval phase="PreLevel" priority="20000" index="3"><![CDATA[
      ~ If not active get out now!
      doneif (field[abilActive].value = 0)

      ~ Remove all shields &
      Call S2RmvShld

      ~ Remove all armor
      Call S2RmvArmor]]></eval>
    <prereq message="Dread level 8 or higher required for this Terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 8)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerNiSt" name="Nightmare Step" description="When the dread is adjacent to a shaken target, she can teleport up to 40 ft. away into a square adjacent to another shaken target. The dread must be at least 10th level to select this option." compset="CustomSpec" summary="Teleport from adjacent to shaken target to adjacent to another shaken target.">
    <fieldval field="abRange" value="40"/>
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <prereq message="Dread level 10 or higher required for this terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 10)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerNiTo" name="Nightmare Touch" description="The dread can use her Devastating Touch ability while using the Nightmare Form terror, even though she normally cannot make physical attacks. This terror is used when Nightmare Form is activated and does not take a separate use of terrors to activate. The dread must be at least 10th level and have the Nightmare Form terror to select this option." compset="CustomSpec" summary="Use Devastating Touch when in Nightmare Form." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <prereq message="Nightmare Form terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerNFor] <> 0)]]></validate>
      </prereq>
    <prereq message="Dread level 10 or higher required for this terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 10)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerOvFe" name="Overwhelming Fear" description="The dread&apos;s next attack stuns her target with overwhelming fear if the attack is successful. The target must make a Fortitude saving throw (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier) or cower for 1 round. If the attack misses, the effect is wasted. This is mind-affecting fear effect." compset="CustomSpec" summary="Target cowers for 1 round if they fail a Fort Save." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    </thing>
  <thing id="cPUTerPara" name="Paranoia" description="The dread&apos;s attack causes the target to become intensely paranoid, making it fear even its friends. The target must make a Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier) or treat all creatures as enemies. The target reacts violently to anyone who approaches and will use the most efficient means of disposing the enemy. The target also attempts a save against all effects he could, unless he makes a successful Spellcraft check to identify the effect. This condition lasts for 1 minute per dread level. This is a mind-affecting fear effect. The dread must be at least 14th level to select this option." compset="CustomSpec" summary="Target treats all creatures as enemies for 1 min/level if they fail a Will Save." uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    </thing>
  <thing id="cPUTerPNF" name="Persistent Nightmare Form" description="The dread can maintain her Nightmare Form inside areas of Null Psionics or dead magic areas. The dread must be at least 18th level and have the Nightmare Form terror to select this option." compset="CustomSpec" uniqueness="useronce">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <prereq message="Dread level 18 or higher required for this Terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 18)]]></validate>
      </prereq>
    <prereq message="Nightmare Form terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerNFor] <> 0)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerShrF" name="Shroud of Fears" description="The dread draws on the subconscious fears of those around herself while she is using the Nightmare Form terror, forming translucent shapes around herself representing the inner fears and terrors of those who view her. This grants her a deflection bonus to AC equal to her Charisma modifier. The dread must be at least 10th level and have the Nightmare Form terror to select this option." compset="CustomSpec" uniqueness="unique">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set description information tag
      perform hero.childfound[cPUTerNFor].pushtags[DescInfo.?]

      ~ If Nightmare Form not active get out now!
      doneif (hero.tagis[Activated.cPUTerNFor] = 0)

      field[abValue].value += #attrmod[aCHA]

      #applybonus[tACDeflect,hero.child[ArmorClass],field[abValue].value]]]></eval>
    <prereq message="Nightmare Form terror required.">
      <validate><![CDATA[validif (#hasability[cPUTerNFor] <> 0)]]></validate>
      </prereq>
    <prereq message="Dread level 10 or higher required for this Terror">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 10)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerSick" name="Sickening Fear" description="The dread&apos;s attack causes the target to become sickened unless it makes a successful Fortitude save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier). This effect lasts for 1d6 rounds. This is mind-affecting fear effect. For every additional power point spent, the target also takes 1 point of damage per round the effect lasts. The dread must be at least 6th level to select this option." compset="CustomSpec" summary="Target becomes sickened for 1d6 rounds if they fail a Fort Save." uniqueness="unique">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="FortNeg"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 6 or higher required">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 6)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerSoul" name="Soul-chilling Fear" description="The dread&apos;s attack creates a conduit between her own subconscious and the mind of her target. The target must make a Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier) or gain 1 negative level. This is a mind-affecting fear effect. For every 3 power points spent, the target gains 1 additional negative level. The dread must be at least 12th level to select this option." compset="CustomSpec" summary="Target gains 1 negative level (+1 / 3PP spent) if they fail a Will Save." uniqueness="unique">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abCategory" tag="PUTerror"/>
    <prereq message="Dread level 12 or higher required">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 12)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerStea" name="Steal Essence" description="The dread&apos;s next devastating touch attack works as a conduit between the target&apos;s subconscious and her own, turning some of the damage she does into healing energy, reinvigorating the dread. She heals an amount of damage equal to the damage she deals with her Devastating Touch. The dread must be at least 8th level to select this option." compset="CustomSpec" summary="Damage dealt with your Devastating Touch attack heals you in addition." uniqueness="unique">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    <prereq message="Dread level 8 or higher required">
      <validate><![CDATA[
        var classcheck as string
        var levels as number
        classcheck = "Dread"
        call PUPreReqs
        validif (levels >= 8)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUTerTerr" name="Terrified Escape" description="The dread&apos;s attack causes the target to flee from the dread on its next turn unless it makes a successful Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier). This is a mind-affecting fear effect." compset="CustomSpec" summary="Target flees if they fail a Will Save." uniqueness="unique">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="WillNeg"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    </thing>
  <thing id="cPUTerWeak" name="Weakening Fear" description="The dread&apos;s attack causes the target to be fatigued for one round per dread level unless it makes a successful Will save (DC 10 + 1/2 the dread&apos;s class level + the dread&apos;s Charisma modifier). This is a mind-affecting fear effect. This terror has no effect on a creature that is already fatigued. Unlike with normal fatigue, the effect ends as soon as the terror&apos;s duration expires." compset="CustomSpec" summary="Target becomes fatigued for 1 round/level if they fail a Fort Save." uniqueness="unique">
    <usesource source="pPsiUn"/>
    <tag group="SpecSource" tag="cHelpPU2"/>
    <tag group="Activated" tag="PUTerrorAt"/>
    <tag group="User" tag="Activation"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abSave" tag="WillNeg"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abCategory" tag="PUTerror"/>
    <eval phase="Final" priority="40000"><![CDATA[
      ~ If we've been disabled, get out now &
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set Extra Damage and tags on Devastating Touch attack
      call PUDevToTxt]]></eval>
    </thing>
  <thing id="arPUFeaFle" name="Fear in Flesh" description="Fear is a powerful emotion, one which dreads use to great effect. Some dreads learn to use the power of fear to alter their own physical form, becoming nightmares made real, beings referred to as fear in flesh. These individuals become nightmares brought to life, striking fear deep into the hearts of those unfortunate enough to face them." compset="ClassVary" uniqueness="unique">
    <fieldval field="srcPageNum" value="267"/>
    <fieldval field="srcBookInf" value="Ultimate Psionics"/>
    <arrayval field="cvCustTot" index="7" value="-1"/>
    <arrayval field="cvCustTot" index="9" value="-1"/>
    <arrayval field="cvCustTot" index="11" value="-1"/>
    <arrayval field="cvCustTot" index="13" value="-1"/>
    <arrayval field="cvCustTot" index="15" value="-1"/>
    <arrayval field="cvCustTot" index="17" value="-1"/>
    <arrayval field="cvCustTot" index="3" value="-1"/>
    <arrayval field="cvCustTot" index="5" value="-1"/>
    <usesource source="pPsiUn"/>
    <tag group="AbReplace" tag="cPUChanTer"/>
    <tag group="AbReplace" tag="cPUDevaTou"/>
    <tag group="fDisable" tag="fWepMart"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cPUFeaMFle">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUIntStr">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUStrFear">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPUStrFear">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPUStrFear">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPUStrFear">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPUStrFear">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPUStrFea2">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPU2"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ Update Terrors ability text
      #appenddesc[cPUTerrors,"{b}Fear In Flesh:{/b} The fear in flesh can use his terrors with natural attacks, since he does not have the devastating touch ability."]]]></eval>
    </thing>
  <thing id="cPUFeaMFle" name="Fear Made Flesh" description="The fear in flesh can spend 1 hour in meditation, preparing his body for a physical transformation into a frightening creature. Once the fear in flesh has finished his meditation, he can activate the transformation at any time as a standard action. Once activated, the fear in flesh is under the effects of {i}bite of the wolf{/i} and {i}claws of the beast{/i}, with a manifester level equal to his class level. This effect lasts 10 minutes per class level. Once the effect ends, the fear in flesh must spend another hour in meditation before he can transform again. This ability replaces devastating touch.\n\n{B}Note:{/b} You can find the power adjustments for {i}bite of the wolf{/i} and {i}claws of the beast{/i} on the Adjust tab under &quot;Spell Adjustments&quot;." compset="ClSpecial" summary="Grow claw and bite attacks.">
    <comment>Fear in Flesh archetype ability.</comment>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeCalc" tag="LevelX10"/>
    <tag group="ChargeCalc" tag="LevelFull"/>
    <tag group="Usage" tag="Minute"/>
    <tag group="DescInfo" tag="puBiteWlf1"/>
    <tag group="DescInfo" tag="puClawBea1"/>
    </thing>
  <thing id="cPUIntStr" name="Intimidating Strike" description="A fear in flesh of 3rd level can expend his psionic focus after making a successful natural attack to gain a free Intimidate check against the creature struck. This ability replaces channel terror." compset="ClSpecial" summary="Expend Focus to gain a free intimidate check vs creature struck.">
    <comment>Fear in Flesh archetype ability.</comment>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="PUExpFocus"/>
    </thing>
  <thing id="cPUStrFear" name="Strengthened By Fear" description="A fear in flesh of 4th level can channel the fear of those around him into a physical boost to his own form. Once per day as a swift action, the fear in flesh can gain a +1 insight bonus to his natural armor and a +2 insight bonus to one physical ability score (Strength, Dexterity, or Constitution) for a number of rounds equal to his dread level. The fear in flesh can only use this ability if there is a creature within the fear in flesh&amp;apos;s line of sight with the shaken, frightened, or panicked condition.\n\nAt 8th level, the effect grants a +2 natural armor bonus, a +4 insight bonus to one physical ability score (Strength, Dexterity, or Constitution), and a +2 insight bonus to a second physical ability score.\n\nAt 12th level, the effect grants a +3 natural armor bonus, a +6 insight bonus to one physical ability score (Strength, Dexterity, or Constitution), a +4 insight bonus to a second physical ability score, and a +2 insight bonus to the third physical ability score.\n\nAt 8th, 12th, 16th, and 20th level, the fear in flesh gains an additional daily use of this ability.\n\nThis ability replaces the terror gained at 4th level.\n\n{B}Note:{/b} The first drop down is always your highest bonus. The second chooser is the next highest ability.  At 12th level a new ability will appear that lets you choose the third ability score which is the lowest ability bonus." compset="ClSpecial">
    <comment>Fear in Flesh archetype ability.</comment>
    <fieldval field="actName" value="Active"/>
    <fieldval field="abValue" value="2"/>
    <fieldval field="abValue4" value="1"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="SbNamePar" tag="IncDurati"/>
    <tag group="SbNamePar" tag="IncUses"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ abValue  = 1st ability score
      ~ abValue2 = 2nd ability score
      ~ abValue3 = 3rd ability score
      ~ abValue4 = Natural AC bonus

      ~ Set the list name
      field[listname].text = field[name].text & " (" & field[xIndex].value & tagnames[Usage.?] & ")"

      ~ If we're not shown, just get out now!
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ if we've been disabled, get out now!
      doneif (tagis[Helper.SpcDisable] = 1)
      ~ If not the first copy, get out now!
      doneif (tagis[Helper.FirstCopy] = 0)

      ~ Set the number of times we can be used based on the number
      ~ of times we are bootstrapped to the class.
      ~ Note: Livename will be taken care of for us by HL.
      field[trkMax].value += field[xCount].value

      ~ Let only the first special choose a physical attribute
      field[usrCandid1].text = "component.BaseAttr & AttribCat.Physical"

      ~ At 8th level increase bonuses and and allow a 2nd physical ability score
      if (field[xCount].value >= 2) then
        field[abValue].value += 2
        field[abValue2].value += 2
        field[abValue4].value += 1
        field[usrCandid2].text = "component.BaseAttr & AttribCat.Physical"
      endif

      ~ At 12th level increase bonuses and and allow a 3rd physical ability score
      if (field[xCount].value >= 3) then
        field[abValue].value  += 2
        field[abValue2].value += 2
        field[abValue3].value += 2
        field[abValue4].value += 1
      endif

      ~ Place our Has Ability tag onto the ability score so that we can
      ~ validate that the same ability score is not chosen more than once.
      perform field[usrChosen1].chosen.assign[HasAbility.cPUStrFear]
      perform field[usrChosen2].chosen.assign[HasAbility.cPUStrFear]

      ~ If not active get out now!
      doneif (field[abilActive].value = 0)

      ~ If 1st ability score chosen then give bonus
      if (field[usrChosen1].ischosen <> 0) then
        #applybonus[BonInsight,field[usrChosen1].chosen,field[abValue].value]
      endif

      ~ If 2nd ability score chosen then give bonus
      if (field[usrChosen2].ischosen <> 0) then
        #applybonus[BonInsight,field[usrChosen2].chosen,field[abValue2].value]
      endif]]></eval>
    <prereq message="You can not pick the same ability score more than once.">
      <validate><![CDATA[
        var nValid as number
        ~ Assume valid unless we find otherwise
        nValid = 1

        ~ If 1st ability score has too many tags then error
        if (altpick.field[usrChosen1].chosen.tagcount[HasAbility.cPUStrFear] > 1) then
          nValid = 0
        endif

        ~ If 2nd ability score has too many tags then error
        if (altpick.field[usrChosen2].chosen.tagcount[HasAbility.cPUStrFear] > 1) then
          nValid = 0
        endif

        ~ If we are a one then we are valid
        validif (nValid = 1)]]></validate>
      </prereq>
    </thing>
  <thing id="cPUStrFea2" name="Strengthened By Fear" description="At 12th level, the effect grants a +3 natural armor bonus, a +6 insight bonus to one physical ability score (Strength, Dexterity, or Constitution), a +4 insight bonus to a second physical ability score, and a +2 insight bonus to the third physical ability score." compset="ClSpecial" summary="3rd physical ability score chooser.">
    <comment>Fear in Flesh archetype ability.</comment>
    <fieldval field="actName" value="Active"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="ChooseSrc1" tag="Hero"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="PostLevel" priority="11000"><![CDATA[
      ~ If we're not shown, just get out now!
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we've been disabled, get out now!
      doneif (tagis[Helper.SpcDisable] = 1)

      field[usrCandid1].text = "component.BaseAttr & AttribCat.Physical"

      ~ Get the the 3rd ability score bonus
      field[abValue].value += #value3[cPUStrFear]

      ~ Place our Has Ability tag onto the ability score so that we can
      ~ validate that the same ability score is not chosen more than once.
      perform field[usrChosen1].chosen.assign[HasAbility.cPUStrFear]

      ~ If main ability not active get out now!
      doneif (hero.tagis[Activated.cPUStrFear] = 0)
      ~ If nothing chosen get out now
      doneif (field[usrChosen1].ischosen = 0)

      ~ Give insight bonus to the chosen ability score
      #applybonus[BonInsight,field[usrChosen1].chosen,field[abValue].value]]]></eval>
    <prereq message="You can not pick the same ability score more than once.">
      <validate><![CDATA[
        var nValid as number
        ~ Assume valid unless we find otherwise
        nValid = 1

        ~ If 1st ability score has too many tags then error
        if (altpick.field[usrChosen1].chosen.tagcount[HasAbility.cPUStrFear] > 1) then
          nValid = 0
        endif

        ~ If 2nd ability score has too many tags then error
        if (altpick.field[usrChosen2].chosen.tagcount[HasAbility.cPUStrFear] > 1) then
          nValid = 0
        endif

        ~ If we are a one then we are valid
        validif (nValid = 1)]]></validate>
      </prereq>
    </thing>
  <thing id="arPUFeaMon" name="Fearmonger" description="For the typical dread, their force of personality and ability to influence others is what powers their ability to harness fear. For the fearmonger, their intuition and insight allows them to instead identify the darkest fears of a creature and bring them to life.\n\n{b}Power Points/Day:{/b} The fearmonger determines bonus power points based upon her Wisdom modifier instead of her Charisma modifier.\n\n{b}Powers Known:{/b} The fearmonger determines the difficulty class of her powers based upon her Wisdom modifier instead of her Charisma modifier.\n\n{b}Maximum Power Level Known:{/b} The fearmonger determines the maximum power level she can manifest based upon her Wisdom modifier instead of her Charisma modifier.\n\n{b}Note:{/b} This archetype when changing from Cha to Wis causes the ability score instead of the modifier to be used to calculate the DC of powers.  This is a base LW bug and has been reported to them to fix." compset="ClassVary" uniqueness="unique">
    <fieldval field="srcPageNum" value="267"/>
    <fieldval field="srcBookInf" value="Ultimate Psionics"/>
    <arrayval field="cvCustTot" index="3" value="-1"/>
    <arrayval field="cvCustTot" index="5" value="-1"/>
    <arrayval field="cvCustTot" index="7" value="-1"/>
    <arrayval field="cvCustTot" index="9" value="-1"/>
    <arrayval field="cvCustTot" index="11" value="-1"/>
    <arrayval field="cvCustTot" index="13" value="-1"/>
    <arrayval field="cvCustTot" index="15" value="-1"/>
    <arrayval field="cvCustTot" index="17" value="-1"/>
    <arrayval field="cvPsiPowTo" index="8" value="-1"/>
    <arrayval field="cvBonFtMod" index="8" value="-1"/>
    <arrayval field="cvBonFtMod" index="12" value="-2"/>
    <usesource source="pPsiUn"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbReplace" tag="cPUFearIns"/>
    <tag group="PsiAttr" tag="aWIS"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <bootstrap thing="cPUInsKey">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUDrinkFe">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPUEnerFea">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPUHorReve">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPU2"/>
    <eval phase="PreLevel" priority="10000"><![CDATA[
      ~ Update Terrors ability text
      #appenddesc[cPUTerrors,"{b}Fear In Flesh:{/b} The fearmonger determines the number of terrors she can use per day and the save DCs for her terrors based upon her Wisdom modifier instead of her Charisma modifier."]

      ~ Change terrors to use Wisdom instead of Cha
      perform hero.childfound[cPUTerrors].tagreplace[ChargeAttr.?,ChargeAttr.aWIS]]]></eval>
    </thing>
  <thing id="cPUDrinkFe" name="Drink Fear" description="Starting at 4th level, the fearmonger gains a number of temporary hit points equal to her class level whenever using her devastating touch ability on a shaken, frightened, or panicked target. These temporary hit points last for one minute. This ability replaces the terror normally gained at 4th level." compset="ClSpecial" summary="Devastating touch ability on a shaken, frightened, or panicked target gain Temp HP.">
    <comment>Fearmonger archetype ability.</comment>
    <fieldval field="trkMax" value="10"/>
    <fieldval field="abText" value="Temp HP"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Usage" tag="Round"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="LvNamePar" tag="AppText"/>
    <tag group="LvNamePar" tag="AppValue"/>
    <eval phase="PostLevel" priority="10100"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xTotalLev].value]]></eval>
    </thing>
  <thing id="cPUEnerFea" name="Energizing Fear" description="Once a fearmonger has reached 9th level, when the fearmonger uses her devastating touch ability, she gains an insight bonus to her AC and saves equal to half her Wisdom modifier and the temporary hit points gained from her drink fear ability increase to two hit points per class level. This ability replaces the bonus feat and power known normally gained at 9th level." compset="ClSpecial">
    <comment>Fearmonger archetype ability.</comment>
    <fieldval field="actName" value="AC &amp; Saves"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="LvNamePar" tag="AppValue"/>
    <tag group="LvNamePar" tag="SignAppVal"/>
    <tag group="User" tag="Activation"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Increase Drink Fear by character level
      #value[cPUDrinkFe] += field[xTotalLev].value]]></eval>
    <eval phase="PostAttr" priority="10000" index="2"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ 1/2 Wis bonus
      field[abValue].value += round(#attrmod[aWIS]/2,0,-1)

      ~ If not active get out now!
      doneif (field[abilActive].value = 0)

      #applybonus[BonInsight,hero.child[ArmorClass],field[abValue].value]
      #applybonus[BonInsight,hero.child[svAll],field[abValue].value]]]></eval>
    </thing>
  <thing id="cPUHorReve" name="Horrid Revelation" description="At 13th level, when the fearmonger uses her devastating touch and already has temporary hit points from her drink fear ability, she can sacrifice all of those temporary hit points to cause the target of her devastating touch ability to become staggered and shaken unless it makes a successful save (DC 10 + 1/2 dread level + Wisdom modifier). This effect lasts one round per temporary hit point sacrificed. The fearmonger does not gain temporary hit points from this use of devastating touch. This ability replaces the bonus feat normally gained at 13th level." compset="ClSpecial">
    <comment>Fearmonger archetype ability.</comment>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="StandardDC" tag="aWIS"/>
    </thing>
  <thing id="arPUNightC" name="Nightmare Constructor" description="Where most dreads use fear as something to manipulate in creatures, nightmare constructors turn fears into reality. These individuals form horrors created from the energy of nightmares and send them into battle. Enemies of nightmare constructors must truly face their deepest fears when confronted by the creatures created from terror." compset="ClassVary" uniqueness="unique">
    <fieldval field="srcPageNum" value="268"/>
    <fieldval field="cvEidStar" value="1"/>
    <fieldval field="srcBookInf" value="Ultimate Psionics"/>
    <arrayval field="cvPsiPowTo" index="1" value="-1"/>
    <arrayval field="cvBonFtMod" index="8" value="-1"/>
    <usesource source="pPsiUn"/>
    <tag group="AbReplace" tag="cPUChanTer"/>
    <tag group="AbReplace" tag="cPUDevaTou"/>
    <tag group="AbReplace" tag="cPUShaTwin"/>
    <tag group="AbReplace" tag="cPUTwinFea"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="Helper" tag="RemovePrim"/>
    <bootstrap thing="cPUHorror">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUReinHor">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUNCDevaT">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPUFearSur">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPUImpFrSu">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPUGrtFrSu">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPUEmpFear">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPUHorrInf">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPUEmpFear">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="puTelLash0">
      <autotag group="SpellSort" tag="cHelpPU2"/>
      <autotag group="SpellType" tag="cHelpPU2"/>
      <autotag group="Helper" tag="Free"/>
      </bootstrap>
    <bootstrap thing="cEidClass"></bootstrap>
    <link linkage="varies" thing="cHelpPU2"/>
    </thing>
  <thing id="cPUHorror" name="Horror" description="A nightmare constructor is able to form a creature created from distilled fears and nightmares. Creating a horror takes one minute of concentration to complete and the horror remains until dismissed by the nightmare constructor.\n\nThis horror functions as a summoner&apos;s eidolon using the nightmare constructor&apos;s class level as the summoner level, with the following exceptions. A horror is treated as a construct for the purposes of effects related to its type, such as favored enemy. Commanding a horror is the same as commanding an astral construct. A horror disperses if the nightmare constructor is rendered unconscious or dies.\n\nThe nightmare constructor can allow his horror to use his terrors, but such uses still count against his daily limit. At 3rd level, the nightmare constructor can also allow his horror to utilize his channel terrors ability.\n\nThis ability replaces devastating touch." compset="ClSpecial">
    <comment>Nightmare Constructor archetype ability.</comment>
    <tag group="Helper" tag="ShowStatbl"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="Render" priority="10000"><![CDATA[
       ~ If No Eidolon present then get out now!
       doneif (hero.childlives[cEidolon] = 0)

       ~ Correctly set name
       If (empty(hero.childfound[cEidolon].minion.actorname) = 0) then
         field[sbName].text = lowercase(field[thingname].text) & " (named " & hero.childfound[cEidolon].minion.actorname & ")"
       Endif]]></eval>
    </thing>
  <thing id="cPUReinHor" name="Reinvigorate Horror" description="The nightmare constructor is able to channel his own energy to restore the nightmarish form of his horror. As a standard action that provokes attacks of opportunity, the nightmare constructor can touch his horror and restore 5 hit points per power point spent. The nightmare constructor cannot spend more power points on this ability than his manifester level." compset="ClSpecial">
    <comment>Nightmare Constructor archetype ability.</comment>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPUFearSur" name="Fear Surge" description="When the horror of a 3rd level or higher nightmare constructor is within 30 ft. of a creature that suffers from the shaken, frightened, or panicked condition, the nightmare constructor gains an additional evolution point to spend on the horror. This evolution point only lasts while there is a creature within 30 ft. of the horror with the shaken, frightened, or panicked condition. This ability replaces channel terror." compset="ClSpecial">
    <comment>Nightmare Constructor archetype ability.</comment>
    <fieldval field="abValue" value="1"/>
    <fieldval field="actName" value="Add evolution points"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10050"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      field[livename].text = field[name].text & " (" & signed(field[abValue].value) & " evolution points)"

      ~ If not active get out now!
      doneif (field[abilActive].value = 0)

      hero.child[cEidolon].field[CompAbiNum].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPUImpFrSu" name="Improved Fear Surge" description="At 6th level, when the nightmare constructor gains an evolution point from fear surge, he instead gains two evolution points. This ability replaces the terror normally gained at 6th level." compset="ClSpecial" summary="Two evolution points when your fear surge is activated.">
    <comment>Nightmare Constructor archetype ability.</comment>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ increase the value of Fear Surge
      hero.child[cPUFearSur].field[abValue].value += 1]]></eval>
    </thing>
  <thing id="cPUGrtFrSu" name="Greater Fear Surge" description="A nightmare constructor of 9th level gains three evolution points when his fear surge is activated. This ability replaces the bonus feat normally gained at 9th level." compset="ClSpecial" summary="Three evolution points when your fear surge is activated.">
    <comment>Nightmare Constructor archetype ability.</comment>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ increase the value of Fear Surge
      hero.child[cPUFearSur].field[abValue].value += 1]]></eval>
    </thing>
  <thing id="cPUHorrInf" name="Horrific Infusion" description="Starting at 11th level, the nightmare constructor can merge with his horror as a standard action. The nightmare constructor wears the horror like translucent and undulating armor. The horror mimics all of the nightmare constructor&apos;s movements, and the nightmare constructor perceives through the horror&apos;s senses and speaks through its voice, as the two are now one creature. The nightmare constructor directs all of the horror&apos;s actions while merged.\n\nWhile merged with his horror, the nightmare constructor uses the horror&apos;s Strength, Dexterity, and Constitution, but retains his own Intelligence, Wisdom, and Charisma. The nightmare constructor gains the horror&apos;s hit points as temporary hit points. When these hit points reach 0, the horror is killed and sent back to its home plane. The nightmare constructor uses the horror&apos;s base attack bonus, and gains the horror&apos;s armor and natural armor bonuses and modifiers to ability scores. The nightmare constructor also gains access to the horror&apos;s special abilities and the horror&apos;s evolutions. The nightmare constructor is still limited to the horror&apos;s maximum number of natural attacks. The horror has no skills or feats of its own. The horror must be at least the same size as the nightmare constructor. The horror must have limbs for the nightmare constructor to cast spells with somatic components (should the nightmare constructor have spellcasting ability). \n\nWhile fused, the nightmare constructor loses the benefits of his armor. He counts both as his original type and as a construct for any effect related to type, whichever is worse for the nightmare constructor. Powers such as dismiss ectoplasm work on the horror, but the nightmare constructor is unaffected. Neither the nightmare constructor nor his horror can be targeted separately, as they are fused into one creature. The nightmare constructor and horror cannot take separate actions. While fused with his horror, the nightmare constructor can use all of his own abilities and gear, except for his armor. In all other cases, this ability functions as the normal horror ability.\n\nThis ability replaces shadow twin." compset="ClSpecial">
    <tag group="Custom" tag="FusedOut"/>
    <tag group="User" tag="Activation"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abAction" tag="Standard"/>
    <bootstrap thing="xEidolon">
      <containerreq phase="First" priority="1000">!AbReplace.cPUHorrInf</containerreq>
      <assignval field="livename" value="Fused Eidolon"/>
      </bootstrap>
    <eval phase="First" priority="445"><![CDATA[
      ~ we need tags in the gizmo, so that our additional HD can use them for
      ~ their containerreq. We'll add 1 tag/summoner level.
      var i as number
      for i = 1 to #levelcount[Dread]
        perform gizmo.assign[Helper.FusedEidLv]
      next

      if (field[abilActive].value <> 0) then
        perform hero.assign[Hero.FusedEid]
        perform hero.assign[Hero.ArmVanish]

        if (gizmo.tagcount[Helper.FusedEidLv] >= 14) then
          perform gizmo.assign[CompPower.cAnimImpEv]
        elseif (gizmo.tagcount[Helper.FusedEidLv] >= 2) then
          perform gizmo.assign[CompPower.cAnimEvas]
        endif

        if (gizmo.tagcount[Helper.FusedEidLv] >= 6) then
          perform gizmo.assign[CompPower.cAnimDevo]
        endif

        perform gizmo.assign[CompPower.raDarkVis]

        ~ If we are a fused eidolon race, then the way our racial speed works is
        ~ different. We need to set the real race's base speed equal to our form
        ~ when fused so that it can be increased correctly based on the number
        ~ of legs evolutions we bootstrap.
        perform gizmo.findchild[BaseRace].setfocus

        doneif (state.isfocus = 0)

        hero.findchild[BaseRace].field[rSpeed].value = focus.field[rSpeed].value
      endif]]>
      <before name="Calc gIsEquip"/>
      <before name="Racial Stats"/>
      </eval>
    <eval phase="PreAttr" priority="5000" index="2"><![CDATA[
      ~ we can't do this until the user has chosen a race in the gizmo
      perform gizmo.findchild[BaseRace].setfocus
      doneif (state.isfocus = 0)

      ~ we get a bonus to our STR & DEX based on summoner level
      ~ the formula is (level * 2/5) + 1/5, rounded down
      field[abValue2].value += round(field[xAllLev].value * 0.4 + 0.2,0,-1)

      ~ set the attributes in our gizmo, using the modifiers for those attributes
      ~ that are on our race (and for STR & DEX, adding the bonus we
      ~ calculated and placed in field[abValue2].value
      gizmo.child[aSTR].field[aNormForce].value = 10 + focus.field[rSTR].value + field[abValue2].value
      gizmo.child[aDEX].field[aNormForce].value = 10 + focus.field[rDEX].value + field[abValue2].value
      gizmo.child[aCON].field[aNormForce].value = 10 + focus.field[rCON].value
      gizmo.child[aINT].field[aNormForce].value = 10 + focus.field[rINT].value
      gizmo.child[aWIS].field[aNormForce].value = 10 + focus.field[rWIS].value
      gizmo.child[aCHA].field[aNormForce].value = 10 + focus.field[rCHA].value

      ~ Add our racial AC bonus to the field that will pass it to the hero.
      field[abValue3].value += focus.field[rAC].value]]></eval>
    <eval phase="Attr" priority="1000" index="3"><![CDATA[
      ~ we get an AC bonus that depends on our summoner level
      ~ the formula is (level * 2/5) + 1/5, rounded down
      ~ Actually, that formula is for the Str/Dex bonus, the AC is double that
      ~ and + the races natural armor bonus as well (usually 2, but could be
      ~ improved with evolutions) which was added in the previous eval.
      field[abValue3].value += round(field[xAllLev].value * 0.4 + 0.2,0,-1) * 2

      ~ the rest only applies while we're actively fused
      doneif (hero.tagis[Hero.FusedEid] = 0)

      ~ while we're fused, the eidolon's physical ability scores are used instead
      ~ of the hero's
      hero.child[aSTR].field[aOverride].value = gizmo.child[aSTR].field[aUser].value
      hero.child[aDEX].field[aOverride].value = gizmo.child[aDEX].field[aUser].value
      hero.child[aCON].field[aOverride].value = gizmo.child[aCON].field[aUser].value

      ~ add our AC bonus to the hero's natural AC
      hero.child[ArmorClass].field[tACNatural].value = field[abValue3].value]]>
      <before name="Attribute Bound"/>
      <before name="Attribute Final"/>
      </eval>
    <eval phase="PostAttr" priority="15000" index="4"><![CDATA[
      ~ total up the HP items on the eidolon into our tracker (unless that HP
      ~ entry is still at its default of 9999)
      foreach pick in gizmo from BaseHitDie
        If (eachpick.field[cHP].value <> 9999) then
          field[trkMax].value += eachpick.field[cHP].value + eachpick.field[cHPBonus].value
        Endif
      nexteach]]>
      <after name="Add HP to Hero"/>
      </eval>
    <eval phase="Level" priority="15000" index="5"><![CDATA[
      ~ we'll use our abValue field to store the difference between the BAB of
      ~ the Eidolon and the BAB of the Summoner's class levels.

      ~ the BAB of our class is calculated on the class helper which bootstraps
      ~ us and stored in cClassBAB. Since Outsiders get full BAB, we need to
      ~ calculate the number of HD our eidolon has, then set the difference as
      ~ our abValue
      field[abValue].value += (round(hero.childfound[cHelpPU2].field[cTotalLev].value*3/4,0,1) - hero.childfound[cHelpPU2].field[cClassBAB].value)

      ~ if we're currently fused, replace the character's BAB with that value
      if (hero.tagis[Hero.FusedEid] <> 0) then
        hero.childfound[cHelpPU2].field[cClassBAB].value += field[abValue].value
      endif]]>
      <before name="Add Class Saves and BAB"/>
      <after name="Calc Class Saves and BAB"/>
      </eval>
    <eval phase="First" priority="1000" index="6"><![CDATA[
      ~ this only applies while we're NOT actively fused
      doneif (hero.tagis[Hero.FusedEid] <> 0)

      ~ search through all our Eidolon evolutions and disable them
      foreach pick in hero from Ability where "Helper.ShadowFuse"
        perform eachpick.assign[Helper.SpcDisable]
        perform eachpick.delete[Helper.ShowSpec]
      nexteach]]></eval>
    <eval phase="First" priority="1000" index="7"><![CDATA[
      ~ this only applies while we're actively fused
      doneif (hero.tagis[Hero.FusedEid] = 0)

      ~ by default, we have no hands while fused - our evolutions may add them
      ~ back in
      herofield[tNumHands].value = 0

      ~ set the character's size to the eidolon's size
      var sizetarget as number
      ~ find our Eidolon's race
      perform gizmo.findchild[BaseRace].setfocus
      doneif (state.isfocus = 0)

      ~ get the eidolon's size modifier
      sizetarget = focus.field[rSizeMod].value

      ~ change the hero's size to that
      call SetSizeTo]]>
      <after name="Racial Stats"/>
      </eval>
    <eval phase="Final" priority="100000" index="8"><![CDATA[
      ~ if our Evolutions resource isn't finished, turn our edit button and our
      ~ class' special ability button red
      if (gizmo.child[resRaceCus].field[resLeft].value <> 0) then
        perform assign[Helper.GizmoError]
        perform root.linkage[varies].assign[Helper.ClSpecSel]
      endif]]>
      <after name="Calc resLeft"/>
      </eval>
    <eval phase="Render" priority="10000" index="9"><![CDATA[
      ~ build up a description of our Eidolon and include that in our description
      foreach pick in gizmo from BaseRace
        field[DescAppend].text &= eachpick.field[name].text & "{br}"
        field[DescAppend].text &= hero.tagabbrevs[Alignment.?,""] & " "

        ~This only handles the sizes that are available to an Eidolon, not the
        ~full range of sizes in the game
        if (eachpick.field[rSizeMod].value = -1) then
          field[DescAppend].text &= "Small "
        elseif (eachpick.field[rSizeMod].value = 0) then
          field[DescAppend].text &= "Medium "
        elseif (eachpick.field[rSizeMod].value = 1) then
          field[DescAppend].text &= "Large "
        elseif (eachpick.field[rSizeMod].value = 2) then
          field[DescAppend].text &= "Huge "
        endif
        field[DescAppend].text &= "outsider{br}"
      nexteach

      var ac as number
      ac = field[abValue3].value + 10
      field[DescAppend].text &= "{b}AC{/b} " & ac & " (" & signed(field[abValue3].value) & " natural){br}"

      var hpbonus as number
      var hdcount as number
      foreach pick in gizmo from BaseHitDie
        hpbonus += eachpick.field[cHPBonus].value
        hdcount += 1
      nexteach

      field[DescAppend].text &= "{b}hp{/b} " & field[trkMax].value & " (" & hdcount & "d10" & signed(hpbonus) & "){br}"

      var attrtext as string
      var attrabbrev as string
      foreach pick in gizmo from BaseAttr sortas explicit

        ~ the abbreviation is stored in ALL CAPS, and we want title case
        attrabbrev = eachpick.field[aAbbr].text
        attrabbrev = left(attrabbrev,1) & right(lowercase(attrabbrev),2)

        attrtext = splice(attrtext,"{b}" & attrabbrev & "{/b} " & eachpick.field[aFinalVal].value,", ")
      nexteach

      field[DescAppend].text &= attrtext & "{br}"

      field[DescAppend].text &= "{b}Base Atk{/b} " & signed(field[abValue].value) & "{br}"

      var evoltext as string
      foreach pick in gizmo from RaceCustom where "!Hide.All"
        evoltext = splice(evoltext,eachpick.field[livename].text,", ")
      nexteach

      field[DescAppend].text &= "{b}Evolutions{/b} " & evoltext

      ~ now that we're done building it, append it to our description (the
      ~ printed output also uses this text, but it uses the raw DescAppend field)
      #appenddesc[cPUHorrInf,"{b}Eidolon{/b}{br}" & field[DescAppend].text]

      ~ display our current HP as part of our name
      field[livename].text &= " (" & field[trkLeft].value & "/" & field[trkMax].value & " HP)"]]></eval>
    <eval phase="First" priority="5000" index="10"><![CDATA[
      ~ find our Eidolon's race
      perform gizmo.findchild[BaseRace].setfocus
      doneif (state.isfocus = 0)

      ~ Eidolons always use d10 for their HD
      focus.field[rHDSides].value = 10]]></eval>
    <eval phase="First" priority="500" index="11">~ hide xEidolon, bootstrap tags have made us always active
      perform hero.childfound[xEidolon].delete[User.Activation]
      perform hero.childfound[xEidolon].delete[Helper.ShowSpec]
      ~ and give both us and our eidolon the appropiate tags
      ~ since we are always in reach and adjacent
      perform hero.assign[Hero.EidolonRch]
      perform hero.assign[Hero.EidolonAdj]</eval>
    <eval phase="Validation" priority="5050" index="12"><![CDATA[
      ~ If we're shown, get out now!
      doneif (tagis[Helper.ShowSpec] = 1)

      ~ if our level is not shown yet remove all error tags
      perform delete[Helper.GizmoError]]]></eval>
    <evalrule phase="Validation" priority="5000" message="You must select a race for your fused eidolon." summary="You must select a race for your fused eidolon."><![CDATA[
      ~ If not correct level for this ability then we are valid
      validif (tagis[Helper.ShowSpec] = 0)

      ~ races forward their IsRace identity tag to their container (and therefore
      ~ to the parent of their container) - so, we can test this simply by
      ~ looking for that tag on ourself
      validif (tagis[IsRace.?] <> 0)

      ~ we can only get here if we failed - turn our edit button red and tell
      ~ our class to turn the Special Abilities button red.
      perform assign[Helper.GizmoError]

      doneif (root.islinkage[varies] = 0)

      perform root.linkage[varies].assign[Helper.ClSpecSel]]]></evalrule>
    <evalrule phase="Validation" priority="5000" index="2" message="The eidolon must be at least the same size as its summoner." summary="The eidolon must be at least the same size as its summoner."><![CDATA[
      ~ If not correct level for this ability then we are valid
      validif (tagis[Helper.ShowSpec] = 0)

      ~ we can't do this until the user has chosen a race in the gizmo
      perform gizmo.findchild[BaseRace].setfocus
      validif (state.isfocus = 0)

      validif (herofield[tSize].value <= focus.field[rSizeMod].value)]]></evalrule>
    <child entity="FusedEid">
      <tag group="Hero" tag="EidolonAdj"/>
      <tag group="Hero" tag="EidolonRch"/>
      <bootstrap thing="resEidAtk"></bootstrap>
      <bootstrap thing="rcEidAtk"></bootstrap>
      <bootstrap thing="resRaceCus"></bootstrap>
      <bootstrap thing="resRace2nd"></bootstrap>
      <bootstrap thing="resAbilAdv"></bootstrap>
      <bootstrap thing="fiHelper"></bootstrap>
      <bootstrap thing="aSTR"></bootstrap>
      <bootstrap thing="aDEX"></bootstrap>
      <bootstrap thing="aCON"></bootstrap>
      <bootstrap thing="aCHA"></bootstrap>
      <bootstrap thing="aINT"></bootstrap>
      <bootstrap thing="aWIS"></bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="1"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="2"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="3"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="4"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="5"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="6"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="7"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="8"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 11]]></containerreq>
        <assignval field="cIndexMod" value="9"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 13]]></containerreq>
        <assignval field="cIndexMod" value="10"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 14]]></containerreq>
        <assignval field="cIndexMod" value="11"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 15]]></containerreq>
        <assignval field="cIndexMod" value="12"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 17]]></containerreq>
        <assignval field="cIndexMod" value="13"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 18]]></containerreq>
        <assignval field="cIndexMod" value="14"/>
        </bootstrap>
      <bootstrap thing="cBonusHD">
        <containerreq phase="First" priority="450"><![CDATA[count:Helper.FusedEidLv >= 19]]></containerreq>
        <assignval field="cIndexMod" value="15"/>
        </bootstrap>
      <bootstrap thing="raDarkVis">
        <containerreq phase="First" priority="450"><![CDATA[CompPower.raDarkVis & !CompPowNot.raDarkVis]]></containerreq>
        <autotag group="Helper" tag="ShadowFuse"/>
        </bootstrap>
      <bootstrap thing="cAnimEvas">
        <containerreq phase="First" priority="450"><![CDATA[CompPower.cAnimEvas & !CompPowNot.cAnimEvas]]></containerreq>
        <autotag group="Helper" tag="ShadowFuse"/>
        </bootstrap>
      <bootstrap thing="cAnimDevo">
        <containerreq phase="First" priority="450"><![CDATA[CompPower.cAnimDevo & !CompPowNot.cAnimDevo]]></containerreq>
        <autotag group="Helper" tag="ShadowFuse"/>
        </bootstrap>
      <bootstrap thing="cAnimMulti">
        <containerreq phase="First" priority="450"><![CDATA[CompPower.cAnimMulti & !CompPowNot.cAnimMulti]]></containerreq>
        <autotag group="Helper" tag="ShadowFuse"/>
        </bootstrap>
      <bootstrap thing="cAnimImpEv">
        <containerreq phase="First" priority="450"><![CDATA[CompPower.cAnimImpEv & !CompPowNot.cAnimImpEv]]></containerreq>
        <autotag group="Helper" tag="ShadowFuse"/>
        </bootstrap>
      </child>
    </thing>
  <thing id="cPUEmpFear" name="Empowered in Fear" description="At 11th level, the nightmare constructor&apos;s horror is treated as if under the effect of {i}physical acceleration{/i} any time it is within 30 ft. of a creature suffering from either the shaken, frightened, or panicked conditions.\nAt 15th level, the horror is also treated as if under the {i}form of doom{/i} power when within 30 ft. of a creature suffering from either the shaken, frightened, or panicked conditions. This effect allows the horror to have more natural attacks than its normal eidolon form limit.\nThis ability replaces twin fear.\n\n{b}Note:{/b} You can find adjustments for {i}physical acceleration{/i} and {i}form of doom{/i} on the Adjust tab under Spells." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="DescInfo" tag="puPhyAc4"/>
    <tag group="DescInfo" tag="puForDoom6"/>
    </thing>
  <thing id="arPUShaHnt" name="Shadow Hunter" description="Even the most intelligent of races can have fears of what might be lurking within the shadows, and a special breed of dread known as shadow hunters have learned how to use their connection to fears to manipulate darkness to aid them. Whether it is concealing them from sight or turning shadows into substance, shadow hunters are at home where others fear the unknown." compset="ClassVary" uniqueness="unique">
    <fieldval field="srcPageNum" value="269"/>
    <arrayval field="cvBonFtMod" index="4" value="-1"/>
    <arrayval field="cvCustTot" index="9" value="-1"/>
    <arrayval field="cvCustTot" index="11" value="-1"/>
    <arrayval field="cvCustTot" index="13" value="-1"/>
    <arrayval field="cvCustTot" index="15" value="-1"/>
    <arrayval field="cvCustTot" index="17" value="-1"/>
    <arrayval field="cvCustTot" index="19" value="-1"/>
    <usesource source="pPsiUn"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cPUFearIns"/>
    <tag group="AbReplace" tag="cPUDevaTou"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cPUShdwDiv">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUCovNatu">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPUGrspShd">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPUStThShd">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPU2"/>
    </thing>
  <thing id="cPUCovNatu" name="Covert Nature" description="The shadow hunter is at home in dark places and knows how to avoid detection. The shadow hunter gains an insight bonus to Stealth checks equal to half her class level (minimum +1). This ability replaces fearsome insight." compset="ClSpecial" summary="Gain insight bonus to Stealth">
    <comment>Shadow Hunter archetype ability.</comment>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Calc 1/2 Dread level with a minimum of 1
      field[abValue].value += maximum(round(field[xTotalLev].value/2,0,-1),1)
      #applybonus[BonInsight,hero.childfound[skStealth],field[abValue].value]]]></eval>
    </thing>
  <thing id="cPUShdwDiv" name="Shadow Diversion" description="As a standard action, the shadow hunter can cause shadows to take physical shape adjacent to a creature within 30 ft. Unless the creature makes a successful Will save (DC 10 + 1/2 the shadow hunter&apos;s level + the shadow hunter&apos;s Charisma modifier), the creature treats the shadow as an enemy when determining if the creature is flanked until the end of the shadow hunter&apos;s next turn. If the shadow is adjacent to multiple creatures, the shadow hunter must choose which one is affected by it. If the shadow hunter has Improved Feint, it reduces the action needed to use this ability to a move action, while Greater Feint reduces action needed to a swift action. This ability replaces devastating touch." compset="ClSpecial" summary="Use a shadow creature for flanking">
    <comment>Shadow Hunter archetype ability.</comment>
    <usesource source="pPsiUn"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abSave" tag="WillNeg"/>
    <tag group="LvNamePar" tag="IncAction"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ determine which Action tag to assign
      if (#hasfeat[fGreatFein] <> 0) then
        perform hero.child[cPUShdwDiv].assign[abAction.Swift]
      elseif (#hasfeat[fImpFeint] <> 0) then
        perform hero.child[cPUShdwDiv].assign[abAction.Move]
      else
        perform hero.child[cPUShdwDiv].assign[abAction.Standard]
      endif]]></eval>
    </thing>
  <thing id="cPUGrspShd" name="Grasping Shade" description="A shadow hunter of 5th level can make shadows turn into reaching, grabbing tentacles of substance. As a standard action, the shadow hunter can target a creature within 30 ft. and direct shadows near the creature to entangle the target. The creature targeted cannot be in an area of bright light or the attempt fails. The creature may make a Reflex save to negate the attack with a DC equal to 10 + 1/2 the shadow hunter&apos;s class level + the shadow hunter&apos;s Charisma modifier. \n\nEntangled creatures can attempt to break free as a move action, making a Strength or Escape Artist check. The DC for this check is equal to 11 + the shadow hunter&apos;s Charisma modifier. Successive successful uses on the same target before the target has successfully broken free cause the target to gain the grappled condition if entangled and the pinned condition if grappled, although a successful save only stops the target from gaining the additional condition. \n\nThis ability can be used a number of times per day equal to 3 + the shadow hunter&apos;s Charisma modifier. This ability replaces the bonus feat normally gained at 5th level." compset="ClSpecial" summary="Use shadows to entagle a creature not in bright light">
    <comment>Shadow Hunter archetype ability.</comment>
    <fieldval field="abRange" value="30"/>
    <tag group="abSave" tag="RefNeg"/>
    <tag group="StandardDC" tag="aCHA"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="User" tag="Tracker"/>
    <tag group="ChargeAttr" tag="aCHA"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ChargeCalc" tag="AttrUses3"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="LvNamePar" tag="IncRange"/>
    </thing>
  <thing id="cPUStThShd" name="Step Through Shadows" description="At 10th level, if the shadow hunter is in an area of dim light or darkness, she can travel to another location of dim light or darkness as if by means of {i}fold space{/i}, as long as the destination is within 60 ft. of the her initial location. Using this ability counts as a daily use of the terrors ability. This ability replaces the terror normally gained at 10th level." compset="ClSpecial" summary="Travel up to 60 ft through shadows">
    <comment>Shadow Hunter archetype ability.</comment>
    <fieldval field="abRange" value="60"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="DescInfo" tag="puFoldSpa4"/>
    <tag group="LvNamePar" tag="IncRange"/>
    </thing>
  </document>
