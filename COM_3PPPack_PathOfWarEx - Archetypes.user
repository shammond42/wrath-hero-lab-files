<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <loadonce key="COM_3PPPack_PathOfWarEx - Archetypes"/>
  <thing id="arPWMyrm" name="Myrmidon" description="Some fighters attend grand colleges of war where they learn to master more esoteric martial forms, and some learn the techniques of many different schools of combat and forge their own path. Others are trained in small regiments to fight as a single cohesive, adaptable unit where all members are capable of playing the other&apos;s parts. These fighters are known as myrmidons, the pinnacle of the fighter&apos;s tradition of adaptability, ingenuity, and enduring strength." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSkillPts" value="4"/>
    <arrayval field="cvBonFtMod" index="1" value="-1"/>
    <arrayval field="cvBonFtMod" index="2" value="-1"/>
    <arrayval field="cvBonFtMod" index="3" value="-1"/>
    <arrayval field="cvBonFtMod" index="4" value="-1"/>
    <arrayval field="cvBonFtMod" index="5" value="-2"/>
    <arrayval field="cvBonFtMod" index="6" value="-2"/>
    <arrayval field="cvBonFtMod" index="7" value="-2"/>
    <arrayval field="cvBonFtMod" index="8" value="-2"/>
    <arrayval field="cvBonFtMod" index="9" value="-3"/>
    <arrayval field="cvBonFtMod" index="10" value="-3"/>
    <arrayval field="cvBonFtMod" index="11" value="-3"/>
    <arrayval field="cvBonFtMod" index="12" value="-3"/>
    <arrayval field="cvBonFtMod" index="13" value="-4"/>
    <arrayval field="cvBonFtMod" index="14" value="-4"/>
    <arrayval field="cvBonFtMod" index="15" value="-4"/>
    <arrayval field="cvBonFtMod" index="16" value="-4"/>
    <arrayval field="cvBonFtMod" index="17" value="-5"/>
    <arrayval field="cvBonFtMod" index="18" value="-5"/>
    <arrayval field="cvBonFtMod" index="19" value="-5"/>
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClassSkill" tag="skSenseMot"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="ClassSkill" tag="skAcrobat"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClassSkill" tag="skPWKnowMa"/>
    <bootstrap thing="cPWMyrDis1">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMyrDis2">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMyrMoA">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cCfgMyrm"></bootstrap>
    <bootstrap thing="cPWMyrRFT">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWMyrWDet">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWMyrUnb">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMyrUtTr">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWMyrDeed">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMyrGrit">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMyrHrRc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMyrMnRc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpFtr"/>
    </thing>
  <thing id="mHelpMyrm" name="Myrmidon Maneuvers" compset="PWManList">
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <arrayval field="cManKnown" index="0" value="4"/>
    <arrayval field="cManKnown" index="1" value="5"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="6"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="7"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="8"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="9"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="10"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="11"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="12"/>
    <arrayval field="cManKnown" index="16" value="12"/>
    <arrayval field="cManKnown" index="17" value="13"/>
    <arrayval field="cManKnown" index="18" value="14"/>
    <arrayval field="cManKnown" index="19" value="15"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="2"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="3"/>
    <arrayval field="cStances" index="11" value="3"/>
    <arrayval field="cStances" index="12" value="3"/>
    <arrayval field="cStances" index="13" value="3"/>
    <arrayval field="cStances" index="14" value="4"/>
    <arrayval field="cStances" index="15" value="4"/>
    <arrayval field="cStances" index="16" value="4"/>
    <arrayval field="cStances" index="17" value="4"/>
    <arrayval field="cStances" index="18" value="4"/>
    <arrayval field="cStances" index="19" value="4"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <link linkage="powCfg" thing="cCfgMyrm"/>
    <link linkage="powClass" thing="cHelpFtr"/>
    </thing>
  <thing id="cCfgMyrm" name="Myrmidon Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpMyrm"></bootstrap>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    </thing>
  <thing id="cPWMyrGrit" name="Grit" description="A myrmidon makes her mark upon the world with nerves of steel and superior training. Through determination, verve, or otherwise dumb luck, the myrmidon is capable of forcing incredible feats of daring and skill through their own tenacity. In game terms, grit is a fluctuating measure of a myrmidon&apos;s ability to perform incredible actions in combat. At the start of each day, a myrmidon gains a number of grit points equal to her Wisdom modifier (minimum 1). Her grit goes up or down throughout the day, but usually cannot go higher than her Wisdom modifier (minimum 1), though some feats and magic items may affect this maximum. A myrmidon spends grit to accomplish deeds (see below), and regains grit in the following ways:\n•{i}Critical Hit{/i}: Each time the myrmidon confirms a critical hit with a weapon she has Weapon Focus with or is in a weapon group associated with a discipline she has Discipline Focus for while in the heat of combat, she regains 1 grit point. Confirming a critical hit on a helpless or unaware creature or on a creature that has fewer Hit Dice than half the myrmidon&apos;s character level does not restore grit.\n•{i}Killing Blow with a Maneuver{/i}: When the myrmidon reduces a creature to 0 or fewer hit points with a maneuver or with a weapon she has Weapon Focus with, she regains 1 grit point. Destroying an unattended object, reducing a helpless or unaware creature to 0 or fewer hit points, or reducing a creature that has fewer Hit Dice than half the myrmidon&apos;s character level to 0 or fewer hit points does not restore any grit.\n•{i}OPTIONAL: Daring Act{/i}: Each time a myrmidon performs a daring act, she can regain grit. As a general guideline, a daring act should be risky and dramatic. It should take a good deal of guts, and its outcome should have a low probability of success. If it is successful, the myrmidon regains 1 grit point. Before attempting a daring act, the player should ask the GM whether the act qualifies. The GM is the final arbiter of what&apos;s considered a daring act, and can grant a regained grit point for a daring act even if the player does not ask beforehand whether the act qualifies. (This method is subject to GM approval)\n\nThis replaces the bonus feat at 2nd level." compset="ClSpecial" summary="Gain a pool of points that are spent to fuel deeds, regained on firearm crit/killing blow.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <bootstrap thing="trkGrit">
      <autotag group="Helper" tag="Grit"/>
      </bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~if we're on a planned class level, then we need to undo the setting of
      ~our grit tracker as a Grit ability - that will keep it from generating
      ~a pool value, which means it's hidden until we're turned into a real
      ~level
      if (tagis[Helper.ShowSpec] = 0) then
        perform hero.child[trkGrit].delete[Helper.Grit]
        endif]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[
      field[sbName].text = lowercase(field[thingname].text) & " (" & hero.childfound[trkGrit].field[trkMax].value & ")"]]></eval>
    </thing>
  <thing id="cPWMyrDeed" name="Deeds" description="Myrmidons spend grit points to accomplish deeds. Most deeds grant the myrmidon some momentary bonus or effect, but there are some that provide longer lasting effects. Some deeds stay in effect as long as the myrmidon has at least 1 grit point. The following is the list of base myrmidon deeds. A myrmidon can only perform deeds of her level or lower. Unless otherwise noted, a deed can be performed multiple successive times, as long as the appropriate amount of grit is spent to perform the deed." compset="ClSpecial" summary="Use Grit to perform special abilities">
    <tag group="Helper" tag="ShowStatbl" name="ShowStatbl" abbrev="ShowStatbl"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="SpecType" tag="Attack"/>
    <eval phase="Render" priority="110000"><![CDATA[
      var deedlist as string

      foreach pick in hero from BaseClSpec where "abCategory.GunDeed & Helper.ShowSpec & !Helper.SpcDisable"
        deedlist = splice(deedlist, eachpick.field[sbName].text, ", ")
        perform eachpick.assign[Hide.Statblock]
        nexteach

      deedlist = replace(deedlist, "deed: ", "", 0)

      field[sbName].text = lowercase(field[thingname].text) & " (" & deedlist & ")"]]>
      <after name="Set sbName if Blank"/>
      </eval>
    </thing>
  <thing id="cPWMyrUnb" name="Deed: Unbreakable" description="At 1st level, the myrmidon is trained very well to protect herself against the many unnatural elements of this world where she must rely on only her wits and training to protect her from harm. The character may spend 1 grit point to gain a +4 circumstance bonus on a single saving throw as an immediate action." compset="ClSpecial" summary="Use 1 grit to gain +4 circumstance bonus to a saving throw">
    <fieldval field="abValue" value="4"/>
    <fieldval field="usrCandid1" value="component.BaseSave &amp; !Helper.AllSaves"/>
    <fieldval field="actName" value="Active (costs 1 grit)"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="ActivMenu"/>
    <tag group="abCategory" tag="GunDeed"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="Immediate"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Stop now if we're not activated
      doneif (field[abilActive].value = 0)

      ~ Stop now if we haven't picked a save
      doneif (field[usrChosen1].ischosen = 0)

      ~ Grant bonus to chosen save
      #applybonus[ModCirc, field[usrChosen1].chosen, field[abValue].value]]]></eval>
    </thing>
  <thing id="cPWMyrHrRc" name="Deed: Heroic Recovery" description="At 1st level, the myrmidon can recover an expended maneuver as a swift action for the cost of 1 point of grit." compset="ClSpecial" summary="Use 1 grit to recover an expended manuever as a swift action">
    <tag group="AbilType" tag="Extra"/>
    <tag group="abCategory" tag="GunDeed"/>
    <tag group="abAction" tag="Swift"/>
    </thing>
  <thing id="cPWMyrMoA" name="Deed: Man of Action" description="At 1st level, as a swift action, the myrmidon can spend 1 grit point to gain a circumstance bonus on an Acrobatics, Climb, or Swim check equal to her class level." compset="ClSpecial" summary="Use 1 grit to gain circumstance bonus to Acrobatics, Climb or Swim checks">
    <fieldval field="actName" value="Active (costs 1 grit)"/>
    <fieldval field="usrCandid1" value="component.BaseSkill &amp; (ClassSkill.skAcrobat | ClassSkill.skClimb | ClassSkill.skSwim)"/>
    <tag group="abAction" tag="Swift"/>
    <tag group="User" tag="Activation"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abCategory" tag="GunDeed"/>
    <tag group="Helper" tag="ActivMenu"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Stop now if we're not activated
      doneif (field[abilActive].value = 0)

      ~ Stop now if we haven't picked a skill
      doneif (field[usrChosen1].ischosen = 0)

      ~ Bonus = class level
      field[abValue].value = field[xTotalLev].value

      ~ Grant bonus to chosen skill
      #applybonus[ModCirc, field[usrChosen1].chosen, field[abValue].value]]]></eval>
    </thing>
  <thing id="cPWMyrRFT" name="Deed: Ready for Trouble" description="At 3rd level, as long as the myrmidon has at least 1 grit point, she gains the following benefits. First, she gains a +2 bonus on initiative checks and Will saves to resist fear and compulsion effects. Furthermore, if her hands are free and unrestrained, and the weapon is not hidden, she can draw a single light or one-handed weapon or shield (except tower shield) as part of the initiative check for the cost of 1 grit." compset="ClSpecial" summary="+2 init and Will vs fear/compulsion when you have 1 grit, draw during init check for 1 grit">
    <fieldval field="abValue" value="2"/>
    <tag group="abCategory" tag="GunDeed"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="Final" priority="5000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Stop if we don't have any grit left
      doneif (hero.child[trkGrit].field[trkLeft].value < 1)

      ~ Init bonus
      hero.child[Initiative].field[Bonus].value += field[abValue].value

      ~ Will bonus
      #situational[hero.child[svWill], signed(field[abValue].value) & " vs fear and compulsion effects", field[name].text]]]>
      <after name="AddReq.Grit checks trkLeft"/>
      <after name="Calc trkLeft"/>
      </eval>
    </thing>
  <thing id="cPWMyrUtTr" name="Deed: Utility Trick" description="At 3rd level, if the myrmidon has at least 1 grit point, she can perform any of the following utility tricks. The myrmidon must declare the utility trick she is using before using the ability.\n\n{i}Field Bandage{/i}: By using a healer&apos;s kit to quickly dress and bandage a wound, you may grant 1d6 temporary hit points per three character levels to the target (not to exceed the target&apos;s maximum hit points) as a full round action. These temporary hit points last for ten minutes.  A target of field bandage may only only receive the benefits of this ability once per day or until they have received magical healing equaling or exceeding the amount of temporary hit points restored by this ability. In addition, the myrmidon may bandage herself or an adjacent creature to staunch a bleeding wound. This ends a single bleed condition affecting the creature, and may be done as part of a normal field bandage.\n\n{i}Makeshift Tool{/i}: The myrmidon makes due with his weapons in hand should she need to use a tool in a combat situation. She may make use of weapons in hand to fake the tools needed for the job without penalty.\n\n{i}Improvise Weapon{/i}: You may use objects not intended to be normal weapons or cobble together something that can be used as a weapon and do so without being subject to non-proficient penalties from using an improvised weapon and you may reduce the improvised weapon penalty to attack rolls from -4 to -2." compset="ClSpecial" summary="Quickly treat a wound, improvise a tool or become better with improvised weapons">
    <tag group="AbilType" tag="Extra"/>
    <tag group="abCategory" tag="GunDeed"/>
    <eval phase="Final" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Stop if we don't have any grit left
      doneif (hero.child[trkGrit].field[trkLeft].value < 1)

      ~ Find all improvised weapons and reduce the penalty by 2
      foreach pick in hero from BaseWep where "Helper.Improvised"
        eachpick.field[wNoProfPen].value = maximum(0, eachpick.field[wNoProfPen].value - 2)
      nexteach]]></eval>
    </thing>
  <thing id="cPWMyrWDet" name="Deed: Warrior&apos;s Determination" description="The myrmidon gains an uncanny ability to force herself through many hardships and keep on going through her superior training and experience. At 6th level she may spend 1 grit point to ignore the fatigued, shaken, or sickened condition for the duration of the encounter from a single source. At 10th level, the myrmidon may ignore the dazed, diseased, or staggered condition from a single source for the duration of an encounter. Finally, at 14th level she may ignore the exhausted, frightened, or nauseated condition from a single source for the duration of the encounter. Multiple sources would require multiple expenditures of grit for the myrmidon to continue to ignore them. Warrior&apos;s determination is an immediate action that can be used even if the condition would prevent them from acting or using an immediate action." compset="ClSpecial" summary="Use 1 grit to ignore selected conditions depending on your level">
    <tag group="AbilType" tag="Extra"/>
    <tag group="abCategory" tag="GunDeed"/>
    <tag group="abAction" tag="Immediate"/>
    </thing>
  <thing id="cPWMyrMnRc" name="Myrmidon Maneuver Recovery" description="In order for the myrmidon to recover her maneuvers she must perform one of two actions.  The myrmidon may recover a single maneuver as a standard action.  She may also spend a full round action to recover her initiating modifier in maneuvers (min 2).  If she does so, enemies who attack the myrmidon while recovering maneuvers provoke an attack of opportunity from her and the myrmidon may take a free 5-ft. step to reposition herself each time she is attacked. While recovering maneuvers, the myrmidon gains the benefits of the Combat Reflexes feat, and may substitute her Wisdom modifier for her Dexterity modifier for this feat if it is higher." compset="ClSpecial">
    <fieldval field="abValue" value="2"/>
    <fieldval field="actName" value="Full-round recovery"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="User" tag="Activation"/>
    <bootstrap thing="fComRef">
      <containerreq phase="First" priority="100">fieldVal:abilActive = 1</containerreq>
      </bootstrap>
    <eval phase="Render" priority="10000" index="2"><![CDATA[      this.field[actName].text &= " (" & field[abValue].value & " maneuvers)"]]></eval>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If initiating modifer is higher than 2, replace number of maneuvers recovered
      perform hero.childfound[mHelpMyrm].pulltags[UseAttr.?]
      var initMod as number
      foreach pick in hero from BaseAttr where tagids[UseAttr.?]
        initMod = eachpick.field[aModBonus].value
      nexteach
      field[abValue].value = maximum(field[abValue].value, initMod)

      ~ Stop now if we're not activated
      doneif (field[abilActive].value = 0)

      ~ Set WIS as Combat Reflexes attribute, if higher
      hero.child[fComRef].field[abValue].value = maximum(hero.child[fComRef].field[abValue].value, field[abValue].value)]]></eval>
    </thing>
  <thing id="cPWMyrDis1" name="Disciplines" description="Choose first and second disciplines" compset="ClSpecial">
    <fieldval field="usrCandid1" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.GoldenLion | Discipline.IronTort | Discipline.MithCurr | Discipline.PrcThun | Discipline.PrimalFury | Discipline.ScarletThr | Discipline.TmpGale | Discipline.ThrashDrag)"/>
    <fieldval field="usrCandid2" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.GoldenLion | Discipline.IronTort | Discipline.MithCurr | Discipline.PrcThun | Discipline.PrimalFury | Discipline.ScarletThr | Discipline.TmpGale | Discipline.ThrashDrag)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Hide" tag="Statblock"/>
    <eval phase="PostLevel" priority="10000">~ Add two selected disciplines
      if (field[usrChosen1].ischosen = 1) then
        perform field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpMyrm].pushtags[Discipline.?]
      endif
      if (field[usrChosen2].ischosen = 1) then
        perform field[usrChosen2].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpMyrm].pushtags[Discipline.?]
      endif</eval>
    <eval phase="First" index="2">~ Let the PWManlist component know that this class has to choose disciplines
      perform root.linkage[varies].assign[PathOfWar.selDisc]</eval>
    </thing>
  <thing id="cPWMyrDis2" name="Disciplines" description="Choose third and fourth disciplines" compset="ClSpecial">
    <fieldval field="usrCandid1" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.GoldenLion | Discipline.IronTort | Discipline.MithCurr | Discipline.PrcThun | Discipline.PrimalFury | Discipline.ScarletThr | Discipline.TmpGale | Discipline.ThrashDrag)"/>
    <fieldval field="usrCandid2" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.GoldenLion | Discipline.IronTort | Discipline.MithCurr | Discipline.PrcThun | Discipline.PrimalFury | Discipline.ScarletThr | Discipline.TmpGale | Discipline.ThrashDrag)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Hide" tag="Statblock"/>
    <eval phase="PostLevel" priority="10000">~ Add two selected disciplines
      if (field[usrChosen1].ischosen = 1) then
        perform field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpMyrm].pushtags[Discipline.?]
      endif
      if (field[usrChosen2].ischosen = 1) then
        perform field[usrChosen2].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpMyrm].pushtags[Discipline.?]
      endif</eval>
    </thing>
  <thing id="arPWCrCoun" name="Crimson Countess" description="All harbingers draw power from their understanding of their negative emotions and the tragedies and evil that afflict all people. Those who become crimson countesses have a different emphasis: rage. These harbingers, consumed by wrath, revenge, frustration, or simple malicious fury, crimson countesses mark their opponents for bloody vengeance and then wreak devastation upon them. While not all permit their rage to consume them, enough do that these blood-splattered warriors have a dark and dangerous reputation that follows them wherever they go." compset="ClassVary" uniqueness="unique">
    <arrayval field="cvCustTot" index="8" value="-1"/>
    <arrayval field="cvCustTot" index="14" value="-2"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbReplace" tag="cPW4DkFoc1"/>
    <tag group="AbReplace" tag="cPW4DkFoc3"/>
    <tag group="AbReplace" tag="cPW4DkFoc2"/>
    <tag group="AbReplace" tag="cPW4DkFoc4"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbModify" tag="cPW4GrmNws"/>
    <tag group="AbReplace" tag="cPW4IllTid"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cPW4CrmClm">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW4SngEmp">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW4"/>
    </thing>
  <thing id="cPW4CrmClm" name="Crimson Claim" description="Each round, at the beginning of her turn, the Crimson Countess deals 1d4 points of damage to creatures she has Claimed. This increases to 2d4 at 6th level, 3d4 at 10th level, 4d4 at 14th level, and a maximum of 5d4 at 18th level. This replaces Ill Tidings." compset="ClSpecial" summary="Claimed creatures take damage each round">
    <fieldval field="abValue" value="1"/>
    <fieldval field="abValue2" value="4"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="LvNameApp" tag="DieCntVal"/>
    <tag group="LvNameApp" tag="DieSizVal2"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="None"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Add additional damage dice if we are high enough level
      if (field[xAllLev].value >= 6) then
        field[abValue].value += 1
      endif
      if (field[xAllLev].value >= 10) then
        field[abValue].value += 1
      endif
      if (field[xAllLev].value >= 14) then
        field[abValue].value += 1
      endif
      if (field[xAllLev].value >= 18) then
        field[abValue].value += 1
      endif]]></eval>
    </thing>
  <thing id="cPW4SngEmp" name="Sanguine Empowerment" description="At 2nd level, the Crimson Countess develops the ability to gain and store Vitae. Whenever the Crimson Countess Claims an enemy, and again each round at the beginning of her turn, she gains Vitae points equal to the number of creatures she has Claimed. She may store a number of Vitae points equal to her class level. The Crimson Countess&apos;s Vitae pool resets to 0 after she has spent 1 minute out of combat.\n\nThe Crimson Countess gains a morale bonus equal to ½ her current number of Vitae points on attack and damage rolls made as part of maneuvers (this bonus increases by 2 when initiating maneuvers against Claimed creatures). Furthermore, she gains a number of other abilities as her Vitae points increase:\n\n{I}Drain{/I} - If she has at least 1 Vitae, the Crimson Countess may spend a move action to deal untyped damage equal to her class level to all creatures she has Claimed. If she has at least 2 Vitae then she also heals 1d6 hp per creature she has Claimed.\n\n{I}Recover{/I} - At 6th level, if she has at least 4 Vitae, the Crimson Countess may spend a move action to recover one of her expended boosts or counters.\n\n{I}Sacrifice{/I} – At 10th level, if she has at least 6 Vitae, the Crimson Countess may activate this ability as an immediate action up to once per encounter when she is dealt ability damage or damage to her hit points. If she does, she chooses a creature she has Claimed; that creature suffers the damage instead of the Crimson Countess. If the target succeeds on a Fortitude save (DC 10 + ½ the Crimson Countess&apos;s class level + her Intelligence modifier) then it instead takes half damage, with the rest being inflicted to the Countess as normal.\n\n{I}Sovereignty{/I} – At 14th level, if she has at least 8 Vitae, the Crimson Countess may activate this ability as a standard action. When she does, creatures she has Claimed must succeed at a Fortitude save (DC 10 + ½ the Crimson Countess&apos;s class level + her Intelligence modifier) or be teleported to a space of the Countess&apos;s choice within 60 feet of the Countess (each must be teleported to a different space, even if they are capable of sharing spaces with one another). Spaces that are intrinsically dangerous (such as those filled with lava, or spaces in the air if the creature does not fly) may not be chosen.\n\n{I}Exsanguinate{/I} – At 20th level, if she has at least 10 Vitae, the Crimson Countess may choose a creature she has Claimed as a standard action up to once per encounter. That creature must succeed at a Fortitude save (DC 10 + ½ the Crimson Countess&apos;s class level + her Intelligence modifier) or die; success on this save indicates that the creature instead suffers 13d6 points of untyped damage. This is a death effect. If the victim of this ability dies, the Crimson Countess heals a number of hp equal to ½ its full maximum total.\n\nThis ability replaces Dark Focus." compset="ClSpecial" summary="You gain a pool of Vitae, and several abilities that use it">
    <comment>abValue stores the regular bonus; abValue2 stores the extra bonus vs Claimed targets</comment>
    <fieldval field="actName" value="Using maneuver"/>
    <fieldval field="actName2" value="Target is Claimed"/>
    <fieldval field="abValue2" value="2"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="User" tag="Activation"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="trkPW4Vit"></bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Stop now if we don't have the Vitae tracker
      perform hero.childfound[trkPW4Vit].setfocus
      doneif (state.isfocus = 0)

      ~ Max Vitae pool = class level
      focus.field[trkMax].value += field[xAllLev].value

      ~ Gain attack bonus of 1/2 Vitae on maneuvers, with +2 against Claimed creatures
      field[abValue].value = round(focus.field[trkUser].value/2,0,-1)
      doneif (field[abValue].value < 1)
      if (field[abilAct2].value = 1) then
        field[abValue].value += field[abValue2].value
      endif

      ~ Stop now if we aren't using a maneuver
      doneif (field[abilActive].value = 0)

      ~ Add morale bonus to attack and damage
      #applybonus[BonMorale,hero.child[Attack],field[abValue].value]
      #applybonus[BonMorale,hero.child[Damage],field[abValue].value]]]></eval>
    </thing>
  <thing id="trkPW4Vit" name="Vitae Pool" compset="Tracker" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Tracker"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      var finalname as string



      if (empty(finalname) = 0) then
        finalname = splice(finalname, "Pool", " ")
        field[livename].text = finalname
        endif

      if (field[trkMax].value = 0) then
        perform delete[Helper.ShowCharge]
        endif]]></eval>
    </thing>
  <thing id="cPW4GNwsCC" name="Grim News (Blood Pool Form)" description="At 9th level, the Crimson Countess may transform herself and all of her worn and carried items into a (5 ft. per class level) radius pool of blood or back to her natural form as a swift action. When the Countess reverts to her natural form from her pool form, she may appear in any space that her pool form occupied (this is not a teleportation effect; she re-forms in the chosen space). While in pool form, she gains a number of benefits and drawbacks:\n\n- Immune to bludgeoning, piercing, and slashing damage\n- 10 ft. climb speed\n- May pour herself through any opening that is not watertight\n- Creatures may share the Crimson Countess&apos;s space while she is in pool form. Neither the Countess nor these creatures gain any benefit or penalty from sharing the same space.\n- Does not threaten an area and cannot make attacks of opportunity.\n- Cannot make melee or ranged attacks (and cannot initiate maneuvers that require them).\n- Does not gain Vitae.\n\nAt 15th level, the Crimson Countess gains fast healing equal to her Intelligence modifier while in pool form.\n\nThis ability modifies Grim News." compset="ClSpecial" summary="Turn into a pool of blood, gain several abilities">
    <fieldval field="actName" value="Blood Pool Form"/>
    <fieldval field="abValue" value="10"/>
    <fieldval field="abValue2" value="5"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="abRange" tag="Feet"/>
    <tag group="LvNamePar" tag="IncRange"/>
    <tag group="User" tag="Activation"/>
    <bootstrap thing="xFastHeal">
      <containerreq phase="First" priority="1000"><![CDATA[fieldVal:abilActive <> 0]]></containerreq>
      </bootstrap>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set radius (5' per class level)
      field[abRange].value = field[xAllLev].value * field[abValue2].value

      ~ Stop now if we're not activated
      doneif (field[abilActive].value = 0)

      ~ Set climb speed
      #value[xClimb] = field[abValue].value

      if (field[xAllLev].value >= 15) then
        perform hero.childfound[xFastHeal].assignstr["Value." & #attrmod[aINT]]
      endif]]></eval>
    </thing>
  <thing id="arPWRvnlrd" name="Ravenlord" description="Everyone reacts to negativity differently, including harbingers. Ravenlords are a curious but not uncommon phenomenon amongst those grim warriors; unable to fully cope with whatever sorrows fuel their power, ravenlords splinter off a fraction of their soul into a bird-like servant that contains their sorrow for them. From then on, the two are inseparable. This bird, this Dark Messenger, serves the ravenlord and does his bidding, but the more the ravenlord pours his own misery into the Dark Messenger, the more it acts on that misery unless the ravenlord is wise or cunning enough to control it. More than one ravenlord has woken up in the morning to find his servant slathered in gore that he cannot account for." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvAnimStar" value="1"/>
    <arrayval field="cvCustTot" index="14" value="-2"/>
    <arrayval field="cvCustTot" index="8" value="-1"/>
    <usesource source="srcPOWEx"/>
    <tag group="CompList" tag="arPWRvnlrd"/>
    <tag group="AbModify" tag="cPW4DkFoc1"/>
    <tag group="AbReplace" tag="cPW4GrmNws"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbReplace" tag="cPW4IllTid"/>
    <tag group="AbReplace" tag="cPW4Masscr"/>
    <tag group="AbReplace" tag="cPW4BlkOmn"/>
    <tag group="AbReplace" tag="cPW4RmrWar"/>
    <tag group="AbReplace" tag="cPW4TenRch"/>
    <tag group="AbModify" tag="cPW4WhsAtr"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <bootstrap thing="cPW4ChnWoe">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cPWMemLoss">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cPW4DrkMgr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW4SrwShd">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cAnimClass"></bootstrap>
    <bootstrap thing="cPWUnwMssv">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW4"/>
    <eval phase="Final" priority="10000"><![CDATA[~ Modification for Dark Focus
      #appenddesc[cPW4DkFoc1,"{b}Addition from Ravenlord{/b}: At 2nd level, the Ravenlord's Dark Messenger also enjoys the benefits of his Dark Focus ability (in the disciplines he has chosen), with the exception of the bonus feat gained at 6th level."]

      ~ Modification for Whispers of Atrocity
      #appenddesc[cPW4WhsAtr,"{b}Addition from Ravenlord{/b}: Maneuvers initiated by the Ravenlord or his Dark Messenger ignore any and all immunities possessed by their victims."]]]></eval>
    </thing>
  <thing id="cPW4DrkMgr" name="Dark Messenger" description="The Ravenlord is served by a raven-like bird which obeys him, known as his Dark Messenger. The Ravenlord treats his Dark Messenger as a bird animal companion (the Ravenlord&apos;s effective druid level is equal to his class level for the purposes of advancing the Dark Messenger), with the following exceptions:\n\n- The Dark Messenger&apos;s Intelligence score is equal to its master&apos;s.\n- The Dark Messenger always acts on the same initiative count as its master.\n- The Ravenlord may communicate telepathically with his Dark Messenger, provided the two are within one mile of each other. The Dark Messenger always obeys the Ravenlord&apos;s orders to the best of its ability and will exercise its own initiative to promote the Ravenlord&apos;s interests and safety.\n- When slain, the Dark Messenger deals 1d6 points of Constitution damage to the Ravenlord, then re-forms 24 hours later, reappearing on its master&apos;s shoulder at full hit points.\n- The Dark Messenger does not gain bonus tricks or the benefits of the Share Spells ability. \n\nThis ability replaces Ill Tidings.\n\nAt 2nd level, the Ravenlord&apos;s Dark Messenger also enjoys the benefits of his Dark Focus ability (in the disciplines he has chosen), with the exception of the bonus feat gained at 6th level." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="None"/>
    <bootstrap thing="cAnimClass"></bootstrap>
    <eval phase="PreLevel" priority="10000" index="2"><![CDATA[
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      perform hero.childfound[cAnimComp].minion.child[aINT].setfocus
      doneif (state.isfocus = 0)

      ~ Copy all INT bonuses and penalties from the hero
      focus.field[Bonus].value = hero.child[aINT].field[Bonus].value
      focus.field[Penalty].value = hero.child[aINT].field[Penalty].value
      focus.field[Racial].value = hero.child[aINT].field[Racial].value
      focus.field[BonAlch].value = hero.child[aINT].field[BonAlch].value
      focus.field[ModCirc].value = hero.child[aINT].field[ModCirc].value
      focus.field[BonComp].value = hero.child[aINT].field[BonComp].value
      focus.field[PenComp].value = hero.child[aINT].field[PenComp].value
      focus.field[BonEnhance].value = hero.child[aINT].field[BonEnhance].value
      focus.field[BonInsight].value = hero.child[aINT].field[BonInsight].value
      focus.field[BonLuck].value = hero.child[aINT].field[BonLuck].value
      focus.field[PenLuck].value = hero.child[aINT].field[PenLuck].value
      focus.field[BonMorale].value = hero.child[aINT].field[BonMorale].value
      focus.field[PenMorale].value = hero.child[aINT].field[PenMorale].value
      focus.field[BonProfane].value = hero.child[aINT].field[BonProfane].value
      focus.field[PenProfane].value = hero.child[aINT].field[PenProfane].value
      focus.field[BonSacred].value = hero.child[aINT].field[BonSacred].value
      focus.field[PenSacred].value = hero.child[aINT].field[PenSacred].value
      focus.field[BonTrait].value = hero.child[aINT].field[BonTrait].value
      focus.field[PenTrait].value = hero.child[aINT].field[PenTrait].value]]></eval>
    <eval phase="First" priority="500"><![CDATA[      ~we're earlier than the normal test for whether we've reached the correct level, so we'll recreate that test here
      doneif (root.linkage[varies].field[cTotalLev].value + field[xExtraLev].value + field[xEffectLev].value < tagvalue[ClSpecWhen.?])
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Set the raven's INT score to be the same as the hero's INT score
      hero.childfound[cAnimComp].minion.childfound[anPWRaven].field[anINT].arrayvalue[0] = hero.child[aINT].field[aUser].value - 10]]></eval>
    </thing>
  <thing id="anPWRaven" name="Raven" description="The raven is an omnivorous scavenger that eats carrion, insects, food waste, berries, and even small animals." compset="AnimalComp">
    <fieldval field="rNumHands" value="0"/>
    <arrayval field="anSTR" index="0" value="-8"/>
    <arrayval field="anDEX" index="0" value="5"/>
    <arrayval field="anCON" index="0" value="-2"/>
    <arrayval field="anWIS" index="0" value="5"/>
    <arrayval field="anCHA" index="0" value="-3"/>
    <arrayval field="anSpeed" index="0" value="10"/>
    <arrayval field="anINT" index="0" value="-8"/>
    <usesource source="srcPOWEx"/>
    <tag group="RaceSize" tag="Tiny12"/>
    <tag group="SlotSet" tag="selMISAvia" name="Avian" abbrev="Avian"/>
    <tag group="Alignment" tag="NeutralGE" name="Neutral" abbrev="N"/>
    <tag group="CompList" tag="arPWRvnlrd" name="Ravenlord"/>
    <tag group="Helper" tag="NotHum" name="NotHum" abbrev="NotHum"/>
    <tag group="Alignment" tag="NeutralLC" name="Neutral" abbrev="N"/>
    <tag group="HasType" tag="tpAnimal" name="Animal" abbrev="Animal"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fWepFin">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="xFly">
      <autotag group="Maneuver" tag="Average"/>
      <autotag group="Value" tag="40"/>
      </bootstrap>
    <bootstrap thing="raLowLight"></bootstrap>
    <bootstrap thing="fToughness">
      <containerreq phase="First" priority="1000"><![CDATA[PathOfWar.DarkMessgr <> 0]]></containerreq>
      </bootstrap>
    <bootstrap thing="wBite">
      <autotag group="wMain" tag="1d3"/>
      </bootstrap>
    </thing>
  <thing id="cPW4ChnWoe" name="Channel of Woe" description="At 3rd level, the Ravenlord&apos;s Dark Messenger gains the ability to initiate counters and strikes that the Ravenlord has readied. The Dark Messenger&apos;s initiator level is equal to the Ravenlord&apos;s; its initiation modifier is Intelligence. Only either the Ravenlord or the Dark Messenger may initiate a strike in the same round (that is, if the Dark Messenger initiates a strike, the Ravenlord may not initiate a strike in the same round, and vice versa). When either the Ravenlord or his Dark Messenger initiates a strike, the other being generates a 10 ft. radius sphere known as a Gloom around themselves (the Gloom is generated after the strike is resolved); this Gloom is stationary, lasts for 1 round, and grants concealment to the creature that generated it so long as that creature is within its area.\n\nAt 3rd level, hostile creatures within the Gloom are cursed and suffer a -2 penalty on skill checks and Reflex saves.\n\nAt 9th level, hostile creatures within the Gloom also suffer a -4 penalty to AC, attack rolls, and damage rolls.\n\nAt 15th level, hostile creatures within the Gloom also suffer a -2 penalty to Fortitude and Will saves, and may not make attacks of opportunity while within the Gloom.\n\nThese are energy drain effects (which means, among other things, that undead and constructs are not subject to them).\n\nThis ability replaces Grim News." compset="ClSpecial" summary="Dark Messenger can initiate maneuvers, creating an area of Gloom">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="abAction" tag="None"/>
    </thing>
  <thing id="cPW4SrwShd" name="Sorrow&apos;s Shadow" description="At 4th level, the Dark Messenger&apos;s type changes to magical beast and it gains Toughness as a bonus feat. Do not recalculate its base attack bonus, hit points (except those granted by Toughness), saving throws, or skills. Once per turn, as a free action, the Dark Messenger may increase its size to Medium or revert to its natural size. This increases to Large at 10th level, and Huge at 16th level.\n\nThis ability replaces Massacre." compset="ClSpecial" summary="Dark Messenger gains Toughness, can become larger">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <eval phase="First" priority="500"><![CDATA[
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Change the animal companion's type to Magical Beast
      perform hero.childfound[cAnimComp].minion.delete[TypeAndAug.tpAnimal]
      perform hero.childfound[cAnimComp].minion.assign[TypeAndAug.tpMagBeast]

      ~ Add the Dark Messenger tag, which will allow the animal to bootstrap the Toughness feat
      perform hero.childfound[cAnimComp].minion.assign[PathOfWar.DarkMessgr]]]></eval>
    </thing>
  <thing id="cPWUnwMssv" name="Unwanted Missive" description="At 11th level, once per encounter as an immediate action, the Ravenlord may exchange places with its Dark Messenger, provided both are within long (400 ft. plus 40 ft. per initiator level) range of each other. If this is used in response to one or more abilities or attacks that target the Ravenlord or the Dark Messenger or include them in an area of effect, each becomes the potential target or victim of the abilities or attacks that targeted the other (for example, the Ravenlord is targeted by a charge attack. The Ravenlord activates this ability and exchanges places with his Dark Messenger. The Dark Messenger is now the target of the charge attack). This is a teleportation effect, and if either the Ravenlord or the Dark Messenger are prevented from teleporting for any reason the ability fails and its use for the encounter is expended. At 17th level, the Ravenlord may use this ability twice per encounter.\n\nThis ability replaces Black Omen and Rumors of War." compset="ClSpecial" summary="As an immediate action, trade places with your Dark Messenger">
    <fieldval field="trkMax" value="1"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Usage" tag="PWEncounte"/>
    <tag group="User" tag="Tracker"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Extra use at 17th level
      if (field[xAllLev].value >= 17) then
        field[trkMax].value += 1
      endif]]></eval>
    </thing>
  <thing id="cPWMemLoss" name="Memories of Loss" description="At 13th level, the Gloom generated by the Ravenlord&apos;s Channel of Woe ability lasts for a number of rounds equal to his Intelligence modifier. Additionally, hostile creatures within the Gloom become incapable of benefiting from insight or morale bonuses.\n\nThis ability replaces Tenebrous Reach." compset="ClSpecial" summary="Gloom lasts longer and denies insight and morale bonuses">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="arPWViglnt" name="Vigilante" description="Vigilantes are warriors who use fear and darkness to their advantage.  They rely on keen insight and inspiration to aid them where others would seek to use magic or the supernatural." compset="ClassVary" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ClassSkill" tag="skKnowDun"/>
    <tag group="ClassSkill" tag="skKnowGeog"/>
    <tag group="ClassSkill" tag="skKnowHist"/>
    <tag group="ClassSkill" tag="skKnowNobl"/>
    <tag group="ClassSkill" tag="skSleight"/>
    <tag group="AbReplace" tag="cPW2KiPool"/>
    <tag group="AbReplace" tag="cPW2KiSavF"/>
    <tag group="AbReplace" tag="cPW2KiMnRp"/>
    <tag group="AbReplace" tag="cPW2KiPerc"/>
    <tag group="AbReplace" tag="cPW2KiSavR"/>
    <tag group="AbReplace" tag="cPW2KSeeAl"/>
    <tag group="AbReplace" tag="cPW2KiSens"/>
    <tag group="AbReplace" tag="cPW2KiSavW"/>
    <tag group="AbReplace" tag="cPW2DeadSt"/>
    <tag group="AbReplace" tag="cPW2RetKi"/>
    <tag group="AbReplace" tag="cPW2ManRec"/>
    <tag group="Helper" tag="Playtest"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="7"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="13"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="17"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cRogTrapfn">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW2Inspir">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW2VgManR">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPW2InsVen">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="3"/>
      </bootstrap>
    <bootstrap thing="cSneakAtt">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW2"/>
    <eval phase="First" priority="1000"><![CDATA[
      ~ Switch initiating attribute to INT
      perform hero.childfound[mHelpPW2].delete[UseAttr.?]
      perform hero.childfound[mHelpPW2].assign[UseAttr.aINT]
      perform hero.childfound[cCfgPW2].delete[UseAttr.?]
      perform hero.childfound[cCfgPW2].assign[UseAttr.aINT]

      ~ We can pick Investigator talents
      perform hero.childfound[cHelpPW2].assign[AllowC4th.cHelpInv]
      hero.child[cHelpPW2].field[cSpec4thSi].text = "Investigator Talent"

      var sText as string

      ~ Build text string here one time
      sText = "{b}" & field[name].text & ":{/b} Changes this ability to use Intelligence."

      ~ Switch class specials to use Int
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ~ Combat Insight
      perform hero.childfound[cPW2CmbtI1].delete[UseAttr.?]
      perform hero.childfound[cPW2CmbtI1].assign[UseAttr.aINT]
      #appenddesc[cPW2CmbtI1,sText]

      ~ Dodge Bonus
      perform hero.childfound[cPW2Dodge].delete[UseAttr.?]
      perform hero.childfound[cPW2Dodge].assign[UseAttr.aINT]
      #appenddesc[cPW2Dodge,sText]

      ~ Combat Insight (Critical Focus)
      perform hero.childfound[cPW2CmbtI3].delete[UseAttr.?]
      perform hero.childfound[cPW2CmbtI3].assign[UseAttr.aINT]
      #appenddesc[cPW2CmbtI3,sText]]]></eval>
    <eval phase="Final" priority="5000" index="2"><![CDATA[
      ~ Grant access to Tempest Gale discipline
      perform hero.child[mHelpPW2].assign[Discipline.TmpGale]
      ~ Grant access to Scarlet Throne discipline
      perform hero.child[mHelpPW2].assign[Discipline.ScarletThr]

      ~ Remove access to Solar Wind discipline (unless it came from more than one source, such as multiclassing into another class that grants it)
      var SWcount as number
      SWcount = hero.tagcount[Discipline.SolarWind]
      if (SWcount < 2) then
        perform hero.child[mHelpPW2].delete[Discipline.SolarWind]
      endif

      ~ Remove access to Veiled Moon discipline (unless it came from more than one source, such as multiclassing into another class that grants it)
      var VMcount as number
      VMcount = hero.tagcount[Discipline.VeiledMoon]
      if (VMcount < 2) then
        perform hero.child[mHelpPW2].delete[Discipline.VeiledMoon]
      endif]]></eval>
    </thing>
  <thing id="cPW2VgManR" name="Vigilante Maneuver Recovery" description="Vigilantes may recover their maneuvers in one of two ways. The vigilante may either center his awareness of the combat momentarily as a standard action and recover a single expended maneuver of his choice.\n\nAlternately, he may recover his initiation modifier in expended maneuvers (min of 2) as a full round action that does not provoke attacks of opportunity, opening his mind to the flow of battle and the inherent patterns therein. When recovering his maneuvers as a full round action, he may move up to his base speed and adds a +4 insight bonus to his Armor Class as his mind opens to anticipate any incoming attack his enemies might bring to bear. The next attack or martial strike he attempts after recovering his maneuvers adds his sneak attack&apos;s damage to the attack if successful.\n\nThis alters the Stalker&apos;s Maneuvers Known, Maneuvers Readied and Stances.\n\n{b}NOTE:{/b}  When using the full-round recovery, check &quot;Full-round recovery&quot; on the In-Play tab to gain the AC bonus." compset="ClSpecial">
    <fieldval field="abValue" value="2"/>
    <fieldval field="abValue2" value="4"/>
    <fieldval field="actName" value="Full-round recovery"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="User" tag="Activation"/>
    <tag group="abAction" tag="FullRd"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ If initiating modifer is higher than 2, replace number of maneuvers recovered
      perform hero.childfound[mHelpPW2].pulltags[UseAttr.?]
      var initMod as number
      foreach pick in hero from BaseAttr where tagids[UseAttr.?]
        initMod = eachpick.field[aModBonus].value
      nexteach
      field[abValue].value = maximum(field[abValue].value, initMod)

      ~ Stop now if we're not activated
      doneif (field[abilActive].value = 0)

      ~ Add insight bonus to AC
      #applybonus[BonInsight, hero.child[ArmorClass], field[abValue2].value]]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[      this.field[actName].text &= " (" & field[abValue].value & " maneuvers)"]]></eval>
    </thing>
  <thing id="cPW2Inspir" name="Inspiration" description="The Vigilante relies on his insight to aid him in his mission, this takes the form of a pool of Inspiration which can be used to augment his skill checks and ability checks. The vigilante has an inspiration pool equal to 1/2 his class level + his Intelligence modifier (minimum 1). A Vigilante&apos;s inspiration pool refreshes each day, typically after he gets a restful night&apos;s sleep. As a free action, he can expend one use of inspiration from his pool to add 1d6 to the result of that check, including any on which he takes 10 or 20. This choice is made after the check is rolled and before the results are revealed. A vigilante can only use inspiration once per check or roll. The vigilante can use inspiration on any Knowledge, Perception, or Sense Motive skill checks without expending a use of inspiration, provided he&apos;s trained in the skill.\n\nInspiration can also be used on attack rolls and saving throws, at the cost of expending two uses of inspiration each time from the vigilante&apos;s pool. In the case of saving throws, using inspiration is an immediate action rather than a free action.\n\nInspiration replaces the Stalker&apos;s Ki Pool." compset="ClSpecial" summary="Use 1 point, +1d6 to trained skill or ability check. Use 2 points, to add to attack or save.">
    <fieldval field="abValue" value="1"/>
    <fieldval field="abValue2" value="6"/>
    <tag group="abAction" tag="Free"/>
    <tag group="abRange" tag="Personal"/>
    <tag group="LvNamePar" tag="DieCntVal"/>
    <tag group="LvNamePar" tag="AppValue3"/>
    <tag group="LvNamePar" tag="SignAppVal"/>
    <tag group="LvNamePar" tag="SignDieCnt"/>
    <tag group="LvNamePar" tag="DieSizVal2"/>
    <tag group="SbNamePar" tag="IncUses"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="ChargeCalc" tag="LevelHalf"/>
    <tag group="ChargeCalc" tag="FinalMin1"/>
    <tag group="ChargeAttr" tag="aINT"/>
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPW2InvTal" name="Investigator Talent" description="Instead of selecting a Stalker Art at the appropriate level, the vigilante can select an investigator talent instead.  He must meet the prerequisites for this Investigator Talent as normal.  The vigilante cannot select Investigator Talents which augment Alchemy, nor can he select Stalker Arts which require a Ki Pool to function.  Any investigator talent which augments Studied Strike instead affects the Vigilante&apos;s Sneak Attacks." compset="CustomSpec" summary="Gain an investigator talent" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="abCategory" tag="PWStalkArt"/>
    <tag group="SpecSource" tag="arPWViglnt"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="10000"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      linkage[table].field[cGiveSp4th].value += 1]]></eval>
    <eval phase="Final" priority="99999999" index="2"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Allow Investigator Talents (except for the ones that are also Rogue Talents or Alchemist Discoveries)
      hero.child[cHelpPW2].field[cCstS4Expr].text = "(SpecSource.cHelpInv & !SpecSource.cHelpRog & !SpecSource.cHelpAlc)"]]></eval>
    </thing>
  <thing id="cPW2InsVen" name="Inspired Vengeance" description="At 20th level, the vigilante has mastered inspiration to such an extent that he can instinctively use with every attack.  The Vigilante can use inspiration as a free action on any attack roll he makes without spending inspiration.  In addition, the vigilante can spend one point of inspiration to add the result of the inspiration roll to the DC of one maneuver he initiates this round as a free action." compset="ClSpecial" summary="Use Inspiration for free on attacks">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="Free"/>
    </thing>
  <thing id="arPWDsprdo" name="Desperado" description="Some warlords take to the way of the gun, and find that their daring personalities and devil-may-care attitude to danger is well suited to the black smoke and thunderous crack of the gun fight." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSpec5thS" value="Gunslinger Deed"/>
    <arrayval field="cvBonFtMod" index="13" value="-1"/>
    <arrayval field="cvBonFtMod" index="17" value="-1"/>
    <arrayval field="cvBonFtMod" index="0" value="-1"/>
    <arrayval field="cvBonFtMod" index="5" value="-1"/>
    <arrayval field="cvCust5Tot" index="4" value="1"/>
    <arrayval field="cvCust5Tot" index="6" value="2"/>
    <arrayval field="cvCust5Tot" index="8" value="3"/>
    <arrayval field="cvCust5Tot" index="10" value="4"/>
    <arrayval field="cvCust5Tot" index="12" value="5"/>
    <arrayval field="cvCust5Tot" index="14" value="6"/>
    <arrayval field="cvBonFtMod" index="9" value="-1"/>
    <usesource source="srcPOWEx"/>
    <tag group="ClassSkill" tag="skSleight"/>
    <tag group="Helper" tag="Playtest"/>
    <tag group="AbReplace" tag="cPW1BatPro"/>
    <tag group="AbReplace" tag="cPW1DulBoo"/>
    <tag group="AbReplace" tag="cPW1DuaPre"/>
    <tag group="AllowC5th" tag="arPalHoGun"/>
    <tag group="CSCountAdj" tag="NegLev4"/>
    <tag group="AbReplace" tag="cPW1IndPre"/>
    <tag group="AbReplace" tag="cPW1Presen"/>
    <tag group="AbReplace" tag="cPW1WarPre"/>
    <tag group="AbReplace" tag="cPW1RalPre"/>
    <tag group="AbReplace" tag="cPW1VicPre"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="PreReqCaP1" tag="GunDare"/>
    <tag group="PreReqCaP1" tag="GunDeed"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="fDisable" tag="fArmShield"/>
    <bootstrap thing="fArmBuckl"></bootstrap>
    <bootstrap thing="fExoticGun"></bootstrap>
    <bootstrap thing="cPWRapReld">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPW1BPProw">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPW1BPProw">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPW1BPProw">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPW1GunGam">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPW1GunGam">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPW1GunGam">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPW1DrGrit">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPW1Gunftr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW1"/>
    <eval phase="PostLevel" priority="10000" index="2">perform hero.childfound[trkGrit].assign[Helper.GritUseCHA]</eval>
    <eval phase="First" priority="1000"><![CDATA[
      ~ Grant access to Tempest Gale discipline
      perform hero.child[mHelpPW1].assign[Discipline.TmpGale]

      ~ Remove access to Veiled Moon discipline (unless it came from more than one source,
      ~ such as multiclassing into another class that grants it)
      var PFcount as number
      PFcount = hero.tagcount[Discipline.PrimalFury]
      if (PFcount < 2) then
        perform hero.child[mHelpPW1].delete[Discipline.PrimalFury]
      endif

      #appenddesc[cGunGrit, "{b}Addition from Desperado:{/b} Instead of using her Wisdom to determine the number of grit points she gains at the start of each day, a desperado uses Charisma."]]]></eval>
    </thing>
  <thing id="cPW1Gunftr" name="Gunfighter" description="At 1st level, the desperado gains the Amateur Gunslinger feat and Gunsmithing as bonus feats. The Amateur Gunslinger feat is modified in that it uses the character&apos;s Charisma in place of Wisdom as per the normal rules for this feat. They also gain a battered gun identical to the one gained by the Gunslinger. This replaces the bonus feat gained at 1st level." compset="ClSpecial" summary="Gain Gunsmithing and Amateur Gunslinger, use CHA for grit">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="fGunsmithi"></bootstrap>
    <bootstrap thing="fAmateuGun">
      <containerreq phase="First" priority="490"><![CDATA[!hero#Classes.Gunsling & count:hero#Classes.PWWarlord < 5]]></containerreq>
      </bootstrap>
    </thing>
  <thing id="cPWRapReld" name="Rapid Reload" description="The desperado&apos;s hands are lightning quick, gaining Rapid Reload as a bonus feat at 2nd level, even if the desperado does not meet the requirements for this feat. This replaces the tactical presence (indomitable presence) class feature." compset="ClSpecial" summary="Gain Rapid Reload as a bonus feat">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="fRapidRel">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.PWWarlord >= 2]]></containerreq>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    </thing>
  <thing id="cPW1DrGrit" name="Daring Grit" description="Starting at 5th level, at the start of each day, the desperado gains a number of grit points equal to their Charisma modifier (minimum 1). Their grit goes up or down throughout the day, but usually cannot go higher than their Charisma modifier (minimum 1), though some feats and magic items may affect this maximum (as normal, the Amateur Gunslinger feat is immediately traded for the Extra Grit feat) and gains the use of a single Gunslinger deed. She can select any deed (or dare) that a Gunslinger of their warlord level –4 could use. At 7th level, and again at 9th, 11th, 13th, and 15th level, the desperado gains another Gunslinger dare or deed that a Gunslinger of their level –4 could use. The desperado may treat his class level -4 as a his gunslinger level to determine his overall gunslinger level for feat purposes.\n\nIf the desperado already has levels in Gunslinger, they gain a bonus to the maximum amount of grit they can have each day, equal to their Charisma bonus (if any) but gains no extra grit at the start of each day. This replaces the warlord&apos;s remaining tactical presences, dual tactical presence, and warlord&apos;s presence class features." compset="ClSpecial" summary="Gain a pool of points that are spent to fuel deeds, regained on firearm crit/killing blow.">
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <tag group="HasAbility" tag="cGunGrit"/>
    <bootstrap thing="trkGrit">
      <autotag group="Helper" tag="Grit"/>
      <autotag group="Helper" tag="GritUseCHA"/>
      </bootstrap>
    <bootstrap thing="fExtraGrit"></bootstrap>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~if we're on a planned class level, then we need to undo the setting of
      ~our grit tracker as a Grit ability - that will keep it from generating
      ~a pool value, which means it's hidden until we're turned into a real
      ~level
      if (tagis[Helper.ShowSpec] = 0) then
        perform hero.child[trkGrit].delete[Helper.Grit]
        endif]]></eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[
      field[sbName].text = lowercase(field[thingname].text) & " (" & hero.childfound[trkGrit].field[trkMax].value & ")"]]></eval>
    </thing>
  <thing id="cPW1BPProw" name="Blackpowder Prowess" description="The desperado is a skilled warrior with his chosen firearms and is capable of using them with incredible proficiency. At 5th level, while in a Tempest Gale or Solar Wind stance, the character gains a +1 competence bonus to attack and damage rolls and to his CMB checks while using firearms. This bonus improves to +2 at 12th level and +3 at 19th level. This replaces the battle prowess class feature." compset="ClSpecial" summary="Bonus with firearms while in Solar Wind or Tempest Gale stance">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="SpecType" tag="Attack"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~ Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)

      ~ Stop if we're not in a Solar Wind or Tempest Gale stance
      var IsInStance as number
      var targetDisc as string
      var staTotal as number
      staTotal = 0
      targetDisc = "SolarWind"
      call PWinDSta
      staTotal += IsInStance
      targetDisc = "TmpGale"
      call PWinDSta
      staTotal += IsInStance
      doneif (staTotal < 1)

      ~ Add to-hit and damage bonus to firearms. If a firearm is equipped, add to CMB as well.
      var eqGuns as number
      eqGuns = 0
      foreach pick in hero from BaseWep where "wCategory.Firearm"
        #applybonus[BonComp,eachpick,field[abValue].value]
        eqGuns += eachpick.tagcount[Hero.MainHand]
      nexteach
      if (eqGuns > 0) then
        #applybonus[BonComp,hero.childfound[ManeuvBon],field[abValue].value]
      endif]]></eval>
    </thing>
  <thing id="cPW1GunGam" name="Gunpowder Gambits" description="At 6th level, the desperado&apos;s combination of dynamic verve and strange good fortune embody the concept that sometimes, it&apos;s better to be lucky than good. Once per day, you may spend a point of grit to reroll a gambit attempt and take the higher of two results. You may do this twice per day at 12th level, and three times per day at 18th level. This replaces the dual boost class feature." compset="ClSpecial" summary="Spend grit to reroll a gambit attempt">
    <tag group="User" tag="Tracker"/>
    <tag group="Usage" tag="Day"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & field[xIndex].value & tagnames[Usage.?]

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += field[xCount].value
      field[trkMax].value += field[abValue].value]]></eval>
    </thing>
  <thing id="arPWHidBld" name="Hidden Blade" description="Some rogues specialize in wielding weapons that their enemies will never see, striking from behind veils of shadow and illusion." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSpec3rdS" value="Gambit"/>
    <arrayval field="cvBonFtMod" index="5" value="-1"/>
    <arrayval field="cvBonFtMod" index="9" value="-1"/>
    <arrayval field="cvBonFtMod" index="13" value="-1"/>
    <arrayval field="cvBonFtMod" index="17" value="-1"/>
    <arrayval field="cvCustTot" index="3" value="-1"/>
    <arrayval field="cvCustTot" index="4" value="-1"/>
    <arrayval field="cvCustTot" index="5" value="-1"/>
    <arrayval field="cvCustTot" index="6" value="-2"/>
    <arrayval field="cvCustTot" index="7" value="-2"/>
    <arrayval field="cvCustTot" index="8" value="-2"/>
    <arrayval field="cvCustTot" index="9" value="-2"/>
    <arrayval field="cvCustTot" index="10" value="-2"/>
    <arrayval field="cvCustTot" index="11" value="-3"/>
    <arrayval field="cvCustTot" index="12" value="-3"/>
    <arrayval field="cvCustTot" index="13" value="-3"/>
    <arrayval field="cvCustTot" index="14" value="-3"/>
    <arrayval field="cvCustTot" index="15" value="-4"/>
    <arrayval field="cvCustTot" index="16" value="-4"/>
    <arrayval field="cvCustTot" index="17" value="-4"/>
    <arrayval field="cvCustTot" index="18" value="-4"/>
    <arrayval field="cvCustTot" index="19" value="-5"/>
    <arrayval field="cvBonFtMod" index="1" value="-1"/>
    <arrayval field="cvCustTTot" index="0" value="1"/>
    <arrayval field="cvCustTTot" index="3" value="2"/>
    <arrayval field="cvCustTTot" index="7" value="3"/>
    <arrayval field="cvCustTTot" index="11" value="4"/>
    <arrayval field="cvCustTTot" index="15" value="5"/>
    <arrayval field="cvCustTTot" index="19" value="6"/>
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AllowC3rd" tag="cHelpPW1"/>
    <tag group="ClassSkill" tag="skPerfDanc"/>
    <bootstrap thing="cPWHMHdSpc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWHBHdWep">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWHBPHSpc">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWHBGmbts">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cCfgPWHdBl"></bootstrap>
    <link linkage="varies" thing="cHelpRog"/>
    </thing>
  <thing id="mHelpPWHBl" name="Hidden Blade Maneuvers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="3"/>
    <arrayval field="cManKnown" index="1" value="4"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="5"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="6"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="7"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="8"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="9"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="10"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="11"/>
    <arrayval field="cManKnown" index="16" value="12"/>
    <arrayval field="cManKnown" index="17" value="12"/>
    <arrayval field="cManKnown" index="18" value="13"/>
    <arrayval field="cManKnown" index="19" value="13"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="2"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="3"/>
    <arrayval field="cStances" index="11" value="3"/>
    <arrayval field="cStances" index="12" value="3"/>
    <arrayval field="cStances" index="13" value="3"/>
    <arrayval field="cStances" index="14" value="4"/>
    <arrayval field="cStances" index="15" value="4"/>
    <arrayval field="cStances" index="16" value="4"/>
    <arrayval field="cStances" index="17" value="4"/>
    <arrayval field="cStances" index="18" value="4"/>
    <arrayval field="cStances" index="19" value="4"/>
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aINT"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <tag group="Discipline" tag="MithCurr"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <tag group="Discipline" tag="VeiledMoon"/>
    <tag group="ArchCntAs" tag="RogueUnc"/>
    <link linkage="powCfg" thing="cCfgPWHdBl"/>
    <link linkage="powClass" thing="cHelpRog"/>
    </thing>
  <thing id="cCfgPWHdBl" name="Hidden Blade Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpPWHBl"></bootstrap>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="cPWHMHdSpc" name="Hidden Specialization" description="At 1st level, the hidden blade adds an additional discipline to his list of known disciplines from the following list: Broken Blade, Shattered Mirror, or Tempest Gale.  He adds the associated skill of the discipline to his list of class skills if it is not already a class skill, and can learn and ready maneuvers from the discipline as normal." compset="ClSpecial" summary="Add Broken Blade, Shattered Mirror, or Tempest Gale">
    <fieldval field="usrCandid1" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.ShaMirror | Discipline.TmpGale)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Hide" tag="Statblock"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="First" index="2">~ Let the PWManlist component know that this class has to choose disciplines
      perform root.linkage[varies].assign[PathOfWar.selDisc]</eval>
    <eval phase="PostLevel" priority="10000">~ Add two selected discipline
      if (field[usrChosen1].ischosen = 1) then
        perform field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpPWHBl].pushtags[Discipline.?]
      endif</eval>
    </thing>
  <thing id="cPWHBHdWep" name="Hidden Weapons" description="The Hidden Blade is adept at storing and retrieving weapons from places that no one would expect to find them.  At 1st level, he gains Quick Draw as a bonus feat even if he does not meet the prerequisites and can draw hidden weapons as a free action." compset="ClSpecial" summary="Gain Quick Draw as a bonus feat, draw hidden weapons as free action">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <bootstrap thing="fQuickDraw">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="Render" priority="10000"><![CDATA[      ~ Append to the Quick Draw description
      #appenddesc[fQuickDraw, "{b}" & field[name].text & "{/b}: You can draw a hidden weapon as a free action"]]]></eval>
    </thing>
  <thing id="cPWHBPHSpc" name="Portable Hole Specialist" description="Hidden Blades are adept at smuggling and storing objects in extradimensional spaces, and can retrieve items from {i}bags of holding{/i} or {i}portable holes{/i} as a move action, regardless of how full the bag is." compset="ClSpecial" summary="Use {i}bags of holding{/i} or {i}portable holes{/i} as a move action">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWHBGmbts" name="Gambits" description="The rogue is a cunning warrior who seizes opportunities as they present themselves to put his enemies in untenable positions. At 1st level, a rogue selects two gambits as methods by which the rogue can recover expended maneuvers. Each gambit possesses three aspects a risk, a rake, and a reward.\n\nEach gambit&apos;s risk describes an action that the rogue must undertake in order to attempt to recover an expended maneuver. The rogue begins a gambit as a swift action, effectively diving recklessly into the act he is attempting. The rogue then performs the action described in the gambit, and if he is successful, he regains maneuvers (see below). If he is not, he suffers the rake of the gambit and only regains a single maneuver of his choosing. While performing a gambit, the rogue may add his Intelligence modifier to the d20 check(s) to aid in accomplishing the gambit as an insight bonus. A rogue may attempt the actions of a gambit as normal, but does not gain any benefits of the gambit unless he spends a swift action to make the action a gambit. The character may initiate a maneuver while performing a gambit (if the maneuver helps him accomplish it) but he may not recover the maneuver used to achieve the gambit as part of the reward.\n\nA gambit&apos;s rake is the penalty that the rogue suffers if he attempts his gambit and fails, such as failing a trip attempt or failing to strike an opponent with a charge attack. Each gambit possesses a unique reward that the rogue enjoys for succeeding at that gambit. All gambits possess the same rake; the rogue only regains a single expended maneuver and suffers a -2 penalty on all d20 rolls for one round. A rogue who succeeds at fulfilling his gambit immediately recovers a number of expended maneuvers equal to his Intelligence modifier (minimum 2) and enjoys the unique reward for each gambit. Allies who would receive benefits from a rogue&apos;s successful gambit must be within 60-ft. of the rogue and must be able to see him perform the action. Finally, gambits may not be initiated outside of combat due to their reliance upon the stresses of battle to bring out the best of the rogue.\n\nAt 4th level and every four levels thereafter, the rogue selects an additional gambit.\n\nThe rogue may select any gambit available to Warlords, and may also choose to learn additional gambits unique to them.  Any gambit reward that uses the rogue&apos;s charisma modifier as a bonus instead uses the rogue&apos;s initiation modifier." compset="ClSpecial" summary="Regain maneuvers by taking risky actions">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="Final" priority="99999999"><![CDATA[
      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~ Allow Warlord Gambits
      root.linkage[varies].field[cCstS3Expr].text &= " | ((SpecSource.cHelpPW1) & !Helper.Secondary & !Helper.Tertiary & !Helper.Quaternary)"]]></eval>
    </thing>
  <thing id="cPWHBStGmb" name="Stealth Gambit" description="{i}Risk{/i}: The rogue attempts to hide from an enemy, making a Stealth check to do so as normal.\n\n{i}Reward{/i}: The rogue becomes invisible, as if subject to the {i}invisibility{/i} spell, for a number of rounds equal to his initiation modifier.  The caster level for this effect is equal to the rogue&apos;s initiator level." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWHidBld"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWHBFlGmb" name="Flanker&apos;s Gambit" description="{i}Risk{/i}: The rogue successfully attacks an enemy engaged in melee with one of the rogue&apos;s allies.\n\n{i}Reward{/i}: The rogue is considered to be flanking the target until the end of their next turn, even if the rogue is not normally in a position to flank the target." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWHidBld"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWHBCwGmb" name="Coward&apos;s Gambit" description="{i}Risk{/i}: The rogue attempts to hit an enemy with a sneak attack.\n\n{i}Reward{/i}: The rogue&apos;s allies gain a bonus to damage rolls against the target equal to the rogue&apos;s initiation modifier for 1 round." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWHidBld"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="arPWBushWD" name="Bushi" description="Bushi are honorable and noble warriors who specialize in Iaijutsu, the art of the draw cut. With a single swing of his katana, a bushi can cleave through armor, bones and organs as easily as straw. Bushi follow the code of bushido and exemplify the virtues of righteousness, courage, benevolence, respect, honesty, honor and loyalty." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSpecSing" value="Bushido"/>
    <arrayval field="cvBonFtMod" index="2" value="-1"/>
    <arrayval field="cvBonFtMod" index="7" value="-2"/>
    <arrayval field="cvBonFtMod" index="12" value="-2"/>
    <arrayval field="cvBonFtMod" index="17" value="-2"/>
    <arrayval field="cvCustTot" index="2" value="1"/>
    <arrayval field="cvCustTot" index="5" value="2"/>
    <arrayval field="cvCustTot" index="7" value="3"/>
    <arrayval field="cvCustTot" index="12" value="4"/>
    <arrayval field="cvCustTot" index="14" value="5"/>
    <arrayval field="cvCustTot" index="18" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="fDisable" tag="fArmHeavy"/>
    <tag group="AbReplace" tag="cPW3BrnStl"/>
    <tag group="AbReplace" tag="cPW3StlDef"/>
    <tag group="ClassSkill" tag="skPerfDanc"/>
    <tag group="AbReplace" tag="cPW3CldStl"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="CPWIaiTran">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBSQDr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBSMXCB">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="CPWBSBus">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBSIaido">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW3"/>
    <eval phase="First">~ Grant access to Mithral Current discipline
      perform hero.child[mHelpPW3].assign[Discipline.MithCurr]</eval>
    </thing>
  <thing id="cPWBSBenB" name="Benevolence Bushido" description="The bushi’s kindness and concern for his allies takes on a supernatural quality. The bushi can spend a swift action to grant all allies within 30 feet a number of temporary hit points equal to the bushi’s initiator level. These temporary hit points do not stack with other temporary hit points, and last for one minute or until depleted." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBushWD"/>
    <tag group="SpecSource" tag="arPWBushSK"/>
    </thing>
  <thing id="cPWBSCRGB" name="Courage Bushido" description="The bushi becomes immune to nonmagical fear effects. In addition, he gains a +4 bonus on saves against fear effects, and can grant this bonus to his allies within 60 feet for a number of rounds equal to his bushi initiation modifier as a swift action." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBushWD"/>
    <tag group="SpecSource" tag="arPWBushSK"/>
    </thing>
  <thing id="cPWBSHonB" name="Honesty Bushido" description="The Universal Truth speaks to the bushi, allowing him to detect falsehood wherever it may hide. The bushi can use discern lies as a spell-like ability with a caster level equal to his initiator level. He can use this ability for a number of rounds per day equal to his initiation modifier, although these rounds need not be consecutive." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBushWD"/>
    <tag group="SpecSource" tag="arPWBushSK"/>
    </thing>
  <thing id="cPWBSHnr" name="Honor Bushido" description="The bushi knows that honorable combat is the only true test of a warrior, and that the most honorable combat is a one-on-one duel. Whenever the bushi hits a creature with an attack, he gains a +1 bonus on attack and damage rolls against that creature until the end of his next turn. This bonus increases by +1 for every four initiator levels the bushi possesses. A bushi does not get an additional benefit from attacking a creature multiple times, although he loses the bonus if he does not attack the creature for one round." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBushWD"/>
    <tag group="SpecSource" tag="arPWBushSK"/>
    </thing>
  <thing id="cPWBSLoylB" name="Loyalty Bushido" description="The bushi’s strong sense of loyalty to friends and allies allows him to instinctively know when they are in danger. As a standard action, the bushi can mark an ally, allowing him to know the relative position and general condition of the marked allies as if they were under the effects of both a deathwatch and a status spell. This mark lasts for a number of hours equal to the bushi’s initiator level, and functions as long as both the bushi and the target are on the same plane. The bushi can activate this ability a number of times per day equal to his bushi initiation modifier (minimum 1)." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBushWD"/>
    <tag group="SpecSource" tag="arPWBushSK"/>
    </thing>
  <thing id="cPWBSRspB" name="Respect Bushido" description="The bushi respects all life, and knows that the strength of his allies support his own strength. Whenever the bushi uses the aid another action, he uses his bushi initiation modifier (minimum +2) instead the normal aid another bonus granted to his allies." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBushWD"/>
    <tag group="SpecSource" tag="arPWBushSK"/>
    </thing>
  <thing id="cPWBSRHSB" name="Righteousness Bushido" description="The bushi knows right from wrong on an inherent, instinctual level. He can gains the ability to use detect chaos, detect evil, detect good, and detect law as spell-like abilities at-will, with a caster level equal to his initiator level." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBushWD"/>
    <tag group="SpecSource" tag="arPWBushSK"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    </thing>
  <thing id="CPWIaiTran" name="Iaido Training" description="At 1st level, a bushi gains Exotic Weapon Proficiency (katana) and Exotic Weapon Proficiency (wakizashi) as bonus feats, even if he does not meet their prerequisites." compset="ClSpecial" summary="Gain Proficiency with Katana&apos;s and Wakizashi&apos;s">
    <tag group="Helper" tag="SpecUp"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <bootstrap thing="fExoticWep">
      <autotag group="Target" tag="wWakizashi"/>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <bootstrap thing="fExoticWep">
      <autotag group="thing" tag="skipprereq"/>
      <autotag group="Target" tag="wKatana"/>
      </bootstrap>
    </thing>
  <thing id="cPWBSQDr" name="Quick Draw" description="At 1st level, a bushi gains Quick Draw as a bonus feat, even if he does not meet the prerequisites. In addition, the bushi may sheathe his weapon without provoking attacks of opportunity." compset="ClSpecial" summary="Gain Quick Draw as a bonus feat, sheathe weapon without provoking Attacks of opportunity">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="fQuickDraw">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="Render" priority="10000"><![CDATA[      ~ Append to the Quick Draw description
      #appenddesc[fQuickDraw, "{b}" & field[name].text & "{/b}: You can sheathe your weapon without provoking attacks of opportunity"]]]></eval>
    </thing>
  <thing id="cPWBSMXCB" name="Mixed Combat" description="At 6th level, a bushi gains Mixed Combat as a bonus feat, even if he does not meet the prerequisites. In addition, the bushi is considered to be threatening all adjacent squares even if his weapon is sheathed, and can draw his weapon when making any attack (including attacks of opportunity)." compset="ClSpecial" summary="Gain Mixed Combat as a bonus feat, Threaten all adjecent squares even if your weapon is sheathed.">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <bootstrap thing="fPUMixComb">
      <containerreq phase="First" priority="500"><![CDATA[count:Classes.PWWarder >= 6]]></containerreq>
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="Render" priority="10000"><![CDATA[      ~ Append to the Mixed Combat description
      #appenddesc[fPUMixComb, "{b}" & field[name].text & "{/b}: You can sheathe your weapon without provoking attacks of opportunity"]]]></eval>
    </thing>
  <thing id="cPWBSIaido" name="Iaido" description="In addition to his normal maneuver recovery, a bushi can recover his maneuvers by sheathing his blade and taking a brief moment of quiet contemplation. When he sheathes a weapon (normally a move action), he recovers one maneuver. He cannot recover more than one maneuver per round this way, no matter how many weapons he sheathes or how many times he sheathes an individual weapon per round, nor can he use a maneuver in the same round it is recovered in this way. A bushi cannot use this ability to recover a maneuver in the same round in which it was initiated." compset="ClSpecial" summary="Recover manuevers as a free action once per round.">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    </thing>
  <thing id="CPWBSBus" name="Bushido" description="As a bushi grows in power, he gains access to abilities through the refinement of his spirit and his weapon by adhering to the principles of bushido. A stalker bushi can choose to take a bushido in place of a stalker art at 3rd, 7th, 11th, 15th, and 19th levels. This ability does not cause the bushi class template to be incompatible with other archetypes that alter the stalker arts class feature. A warlord bushi selects a bushido to gain at 2nd, 5th, 7th, 9th, 11th, and 15th levels. A warder bushi selects a bushido to gain at 3rd, 6th, 8th, 13th, 15th, and 19th levels." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="arPWBushSK" name="Bushi" description="Bushi are honorable and noble warriors who specialize in Iaijutsu, the art of the draw cut. With a single swing of his katana, a bushi can cleave through armor, bones and organs as easily as straw. Bushi follow the code of bushido and exemplify the virtues of righteousness, courage, benevolence, respect, honesty, honor and loyalty." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSpecSing" value="Stalker Art or Bushido"/>
    <fieldval field="cvSpecName" value="Stalker Arts or Bushido&apos;s"/>
    <arrayval field="cvCustTot" index="0" value="-1"/>
    <arrayval field="cvCustTot" index="2" value="-1"/>
    <arrayval field="cvCustTot" index="6" value="-1"/>
    <arrayval field="cvCustTot" index="11" value="-1"/>
    <arrayval field="cvCustTot" index="14" value="-1"/>
    <arrayval field="cvCustTot" index="18" value="-1"/>
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbReplace" tag="cPW2Blend"/>
    <tag group="AbReplace" tag="cPW2ImBlnd"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="fDisable" tag="fArmHeavy"/>
    <tag group="ClassSkill" tag="skPerfDanc"/>
    <bootstrap thing="CPWBSBus">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="CPWIaiTran">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBSQDr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBSMXCB">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWBSIaido">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW2"/>
    <eval phase="First">~ Grant access to Mithral Current discipline
      perform hero.child[mHelpPW2].assign[Discipline.MithCurr]</eval>
    </thing>
  <thing id="arPWBushWL" name="Bushi" description="Bushi are honorable and noble warriors who specialize in Iaijutsu, the art of the draw cut. With a single swing of his katana, a bushi can cleave through armor, bones and organs as easily as straw. Bushi follow the code of bushido and exemplify the virtues of righteousness, courage, benevolence, respect, honesty, honor and loyalty.s" compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSpec2ndS" value="Bushido"/>
    <arrayval field="cvBonFtMod" index="0" value="-1"/>
    <arrayval field="cvBonFtMod" index="5" value="-2"/>
    <arrayval field="cvBonFtMod" index="9" value="-2"/>
    <arrayval field="cvBonFtMod" index="13" value="-2"/>
    <arrayval field="cvBonFtMod" index="17" value="-2"/>
    <arrayval field="cvCustSTot" index="1" value="1"/>
    <arrayval field="cvCustSTot" index="4" value="2"/>
    <arrayval field="cvCustSTot" index="6" value="3"/>
    <arrayval field="cvCustSTot" index="8" value="4"/>
    <arrayval field="cvCustSTot" index="10" value="5"/>
    <arrayval field="cvCustSTot" index="14" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="ClassSkill" tag="skPerfDanc"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cPW1DuaPre"/>
    <tag group="AbReplace" tag="cPW1WarPre"/>
    <tag group="AbReplace" tag="cPW1Presen"/>
    <tag group="AbReplace" tag="cPW1VicPre"/>
    <bootstrap thing="cPWBSQDr">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="CPWIaiTran">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBSMXCB">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="CPWBSBus">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBSIaido">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW1"/>
    <eval phase="First">~ Grant access to Mithral Current discipline
      perform hero.child[mHelpPW1].assign[Discipline.MithCurr]</eval>
    </thing>
  <thing id="cPWBSBenWL" name="Benevolence Bushido" description="The bushi’s kindness and concern for his allies takes on a supernatural quality. The bushi can spend a swift action to grant all allies within 30 feet a number of temporary hit points equal to the bushi’s initiator level. These temporary hit points do not stack with other temporary hit points, and last for one minute or until depleted." compset="CustomSpec" uniqueness="unique">
    <comment><![CDATA[Bushido for the Warlord had to be added differently due to the fact Gambit's take the same slots.]]></comment>
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWBSCRGWL" name="Courage Bushido" description="The bushi becomes immune to nonmagical fear effects. In addition, he gains a +4 bonus on saves against fear effects, and can grant this bonus to his allies within 60 feet for a number of rounds equal to his bushi initiation modifier as a swift action." compset="CustomSpec" uniqueness="unique">
    <comment><![CDATA[Bushido for the Warlord had to be added differently due to the fact Gambit's take the same slots.]]></comment>
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWBSHonWL" name="Honesty Bushido" description="The Universal Truth speaks to the bushi, allowing him to detect falsehood wherever it may hide. The bushi can use discern lies as a spell-like ability with a caster level equal to his initiator level. He can use this ability for a number of rounds per day equal to his initiation modifier, although these rounds need not be consecutive." compset="CustomSpec" uniqueness="unique">
    <comment><![CDATA[Bushido for the Warlord had to be added differently due to the fact Gambit's take the same slots.]]></comment>
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWHnrWL" name="Honor Bushido" description="The bushi knows that honorable combat is the only true test of a warrior, and that the most honorable combat is a one-on-one duel. Whenever the bushi hits a creature with an attack, he gains a +1 bonus on attack and damage rolls against that creature until the end of his next turn. This bonus increases by +1 for every four initiator levels the bushi possesses. A bushi does not get an additional benefit from attacking a creature multiple times, although he loses the bonus if he does not attack the creature for one round." compset="CustomSpec" uniqueness="unique">
    <comment><![CDATA[Bushido for the Warlord had to be added differently due to the fact Gambit's take the same slots.]]></comment>
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWBSLoyWL" name="Loyalty Bushido" description="The bushi’s strong sense of loyalty to friends and allies allows him to instinctively know when they are in danger. As a standard action, the bushi can mark an ally, allowing him to know the relative position and general condition of the marked allies as if they were under the effects of both a deathwatch and a status spell. This mark lasts for a number of hours equal to the bushi’s initiator level, and functions as long as both the bushi and the target are on the same plane. The bushi can activate this ability a number of times per day equal to his bushi initiation modifier (minimum 1)." compset="CustomSpec" uniqueness="unique">
    <comment><![CDATA[Bushido for the Warlord had to be added differently due to the fact Gambit's take the same slots.]]></comment>
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWBSRspWL" name="Respect Bushido" description="The bushi respects all life, and knows that the strength of his allies support his own strength. Whenever the bushi uses the aid another action, he uses his bushi initiation modifier (minimum +2) instead the normal aid another bonus granted to his allies." compset="CustomSpec" uniqueness="unique">
    <comment><![CDATA[Bushido for the Warlord had to be added differently due to the fact Gambit's take the same slots.]]></comment>
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWRHSWL" name="Righteousness Bushido" description="The bushi knows right from wrong on an inherent, instinctual level. He can gains the ability to use detect chaos, detect evil, detect good, and detect law as spell-like abilities at-will, with a caster level equal to his initiator level." compset="CustomSpec" uniqueness="unique">
    <comment><![CDATA[Bushido for the Warlord had to be added differently due to the fact Gambit's take the same slots.]]></comment>
    <usesource source="srcPOWEx"/>
    <tag group="SpecSource" tag="arPWBushWL"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWWarPat1" name="Disciplines" description="A War Path Follower can select up to 3 Disciplines that share his Diety&apos;s favored weapon." compset="ClSpecial">
    <fieldval field="usrCandid1" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.GoldenLion | Discipline.IronTort | Discipline.MithCurr | Discipline.PrcThun | Discipline.PrimalFury | Discipline.ScarletThr | Discipline.TmpGale | Discipline.ThrashDrag | Discipline.EternGuard | Discipline.ElemFlux | Discipline.ShaMirror | Discipline.CurseRazor | Discipline.RivnHglass | Discipline.SlpGoddess | Discipline.BlackSerph | Discipline.SilvrCrane | Discipline.SteelSerp | Discipline.VeiledMoon)"/>
    <fieldval field="usrCandid2" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.GoldenLion | Discipline.IronTort | Discipline.MithCurr | Discipline.PrcThun | Discipline.PrimalFury | Discipline.ScarletThr | Discipline.TmpGale | Discipline.ThrashDrag | Discipline.EternGuard | Discipline.ElemFlux | Discipline.ShaMirror | Discipline.CurseRazor | Discipline.RivnHglass | Discipline.SlpGoddess | Discipline.BlackSerph | Discipline.SilvrCrane | Discipline.SteelSerp | Discipline.VeiledMoon)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Hide" tag="Statblock"/>
    <eval phase="PostLevel" priority="10000">~ Add two selected disciplines
      if (field[usrChosen1].ischosen = 1) then
        perform field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpWarpt].pushtags[Discipline.?]
      endif
      if (field[usrChosen2].ischosen = 1) then
        perform field[usrChosen2].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpWarpt].pushtags[Discipline.?]
      endif</eval>
    <eval phase="First" index="2">~ Let the PWManlist component know that this class has to choose disciplines
      perform root.linkage[varies].assign[PathOfWar.selDisc]</eval>
    </thing>
  <thing id="cPWWarPat2" name="Disciplines" description="A War Path Follower can select up to 3 Disciplines that share his Diety&apos;s favored weapon." compset="ClSpecial">
    <fieldval field="usrCandid1" value="PathOfWar.selDisc &amp; (Discipline.BrokenBlad | Discipline.GoldenLion | Discipline.IronTort | Discipline.MithCurr | Discipline.PrcThun | Discipline.PrimalFury | Discipline.ScarletThr | Discipline.TmpGale | Discipline.ThrashDrag | Discipline.EternGuard | Discipline.ElemFlux | Discipline.ShaMirror | Discipline.CurseRazor | Discipline.RivnHglass | Discipline.SlpGoddess | Discipline.BlackSerph | Discipline.SilvrCrane | Discipline.SteelSerp | Discipline.VeiledMoon)"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="SpecUp"/>
    <tag group="Hide" tag="Statblock"/>
    <eval phase="PostLevel" priority="10000">~ Add two selected disciplines
      if (field[usrChosen1].ischosen = 1) then
        perform field[usrChosen1].chosen.pulltags[Discipline.?]
        perform hero.childfound[mHelpWarpt].pushtags[Discipline.?]
      endif</eval>
    </thing>
  <thing id="mHelpWarpt" name="Warpath Maneuvers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="3"/>
    <arrayval field="cManKnown" index="1" value="4"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="6"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="6"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="7"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="8"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="9"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="11"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="12"/>
    <arrayval field="cManKnown" index="16" value="13"/>
    <arrayval field="cManKnown" index="17" value="14"/>
    <arrayval field="cManKnown" index="18" value="14"/>
    <arrayval field="cManKnown" index="19" value="15"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="3"/>
    <arrayval field="cStances" index="7" value="3"/>
    <arrayval field="cStances" index="8" value="3"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="4"/>
    <arrayval field="cStances" index="11" value="4"/>
    <arrayval field="cStances" index="12" value="5"/>
    <arrayval field="cStances" index="13" value="5"/>
    <arrayval field="cStances" index="14" value="5"/>
    <arrayval field="cStances" index="15" value="5"/>
    <arrayval field="cStances" index="16" value="5"/>
    <arrayval field="cStances" index="17" value="5"/>
    <arrayval field="cStances" index="18" value="5"/>
    <arrayval field="cStances" index="19" value="5"/>
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <link linkage="powClass" thing="cHelpInq"/>
    <link linkage="powCfg" thing="cCfgWarPa"/>
    </thing>
  <thing id="cCfgWarPa" name="WarPath Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpWarpt"></bootstrap>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="arPWWarPat" name="War Path" description="The followers of a Warpath can be found among the servants of any and all gods, although they are certainly more common among the followers of warlike gods. Those who follow a warpath give up some of their spellcasting proficiency in order fight for the causes of their god with greater effectiveness." compset="ClassVary" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="Helper" tag="DiminSpell"/>
    <tag group="AbReplace" tag="cInqJHeali"/>
    <tag group="AbReplace" tag="cInqJJusti"/>
    <tag group="AbReplace" tag="cInqJProte"/>
    <tag group="AbReplace" tag="cInqJPierc"/>
    <tag group="AbReplace" tag="cInqJPurit"/>
    <tag group="AbReplace" tag="cInqJResil"/>
    <tag group="AbReplace" tag="cInqJResis"/>
    <tag group="AbReplace" tag="cInqJSmiti"/>
    <tag group="AbReplace" tag="cInqJudgem"/>
    <tag group="AbReplace" tag="cInqJDestr"/>
    <tag group="AbReplace" tag="cInqTrueJu"/>
    <bootstrap thing="cCfgWarPa"></bootstrap>
    <bootstrap thing="cPWWarPat1">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWWarPat2">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWWPDFW">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpInq"/>
    </thing>
  <thing id="cPWWPDFW" name="Divine Weapon Focus" description="At 1st level, a warpath follower is given insight into combat by his deity, granting him knowledge of how to use weapons more effectively. He gains Weapon Focus with his favored weapon, even if he does not meet the prerequisites. In addition, if the warpath follower can cast divine spells, he may use his favored weapon as a divine focus." compset="ClSpecial" summary="Gain Weapon Focus with diety favored weapon">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    <bootstrap thing="fWepFoc">
      <autotag group="thing" tag="skipprereq"/>
      </bootstrap>
    <eval phase="Render" priority="10000"><![CDATA[      ~ Append to the Quick Draw description
      #appenddesc[fQuickDraw, "{b}" & field[name].text & "{/b}: You can sheathe your weapon without provoking attacks of opportunity"]]]></eval>
    </thing>
  <thing id="cPWWPCI" name="Controlled Insight" description="In addition to his normal maneuver recovery, a bushi can recover his maneuvers by sheathing his blade and taking a brief moment of quiet contemplation. When he sheathes a weapon (normally a move action), he recovers one maneuver. He cannot recover more than one maneuver per round this way, no matter how many weapons he sheathes or how many times he sheathes an individual weapon per round, nor can he use a maneuver in the same round it is recovered in this way. A bushi cannot use this ability to recover a maneuver in the same round in which it was initiated." compset="ClSpecial" summary="Choose two granted maneuvers rather than one when refreshing manuevers">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    </thing>
  <thing id="cPWWPWPR" name="War Path Recovery" description="When a War Path follower is granted all of there maneuvers their pool is refreshed causing them to loose all granted manuevers and go back to their original pool of manuevers as if it was there first round of combat. Also all manuevers are unexpended." compset="ClSpecial" summary="Recover manuevers when manuever pool is completly granted to you">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="Helper" tag="SpecUp"/>
    </thing>
  <thing id="cCfgKniDis" name="Knight Disciple Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpKniDis"></bootstrap>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="arPWKniDis" name="Knight Disciple" description="Knight Disciples are holy protectors who defend the innocent for the predations of evil creatures. Blessed with the martial might of heaven, they boldly charge into battle to defend their allies." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSkillPts" value="4"/>
    <fieldval field="cvSpecSing" value="Merciful Shield"/>
    <fieldval field="cvSpecName" value="Merciful Shields"/>
    <fieldval field="cvSpec2ndS" value="Crusader Training"/>
    <arrayval field="cvCustTot" index="2" value="1"/>
    <arrayval field="cvCustTot" index="5" value="2"/>
    <arrayval field="cvCustTot" index="8" value="3"/>
    <arrayval field="cvCustTot" index="11" value="4"/>
    <arrayval field="cvCustTot" index="14" value="5"/>
    <arrayval field="cvCustTot" index="17" value="6"/>
    <arrayval field="cvCustSTot" index="0" value="1"/>
    <arrayval field="cvCustSTot" index="3" value="2"/>
    <arrayval field="cvCustSTot" index="6" value="3"/>
    <arrayval field="cvCustSTot" index="9" value="4"/>
    <arrayval field="cvCustSTot" index="12" value="5"/>
    <arrayval field="cvCustSTot" index="14" value="6"/>
    <arrayval field="cvCustSTot" index="17" value="7"/>
    <usesource source="srcPathOfW"/>
    <tag group="ClassSkill" tag="skPercep"/>
    <tag group="AbReplace" tag="raMercies"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="Helper" tag="RemoveQuat"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="OverCustS1"/>
    <tag group="Helper" tag="OverCustS2"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="Helper" tag="RemoveCast"/>
    <tag group="AbReplace" tag="cPalSmite"/>
    <tag group="AbReplace" tag="cPalAuJust"/>
    <tag group="AbReplace" tag="cPalChan"/>
    <tag group="AbReplace" tag="cPalHolyCh"/>
    <tag group="AbReplace" tag="cPalLayHnd"/>
    <bootstrap thing="cPWKniCT">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWKniMnRC">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cCfgKniDis"></bootstrap>
    <bootstrap thing="cPWKniMoC">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPwKniEmHe">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWKniGuAu">
      <autotag group="ClSpecWhen" tag="11"/>
      </bootstrap>
    <bootstrap thing="cPWKniGS">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWKniHolDis">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPWKniSpFL">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPal"/>
    </thing>
  <thing id="mHelpKniDis" name="Knight Disciple Maneuvers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="3"/>
    <arrayval field="cManKnown" index="1" value="4"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="5"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="6"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="7"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="8"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="9"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="10"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="11"/>
    <arrayval field="cManKnown" index="16" value="12"/>
    <arrayval field="cManKnown" index="17" value="12"/>
    <arrayval field="cManKnown" index="18" value="13"/>
    <arrayval field="cManKnown" index="19" value="13"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="2"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="3"/>
    <arrayval field="cStances" index="11" value="3"/>
    <arrayval field="cStances" index="12" value="3"/>
    <arrayval field="cStances" index="13" value="3"/>
    <arrayval field="cStances" index="14" value="4"/>
    <arrayval field="cStances" index="15" value="4"/>
    <arrayval field="cStances" index="16" value="4"/>
    <arrayval field="cStances" index="17" value="4"/>
    <arrayval field="cStances" index="18" value="4"/>
    <arrayval field="cStances" index="19" value="4"/>
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aCHA"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <tag group="Discipline" tag="IronTort"/>
    <tag group="Discipline" tag="SilvrCrane"/>
    <link linkage="powClass" thing="cHelpPal"/>
    <link linkage="powCfg" thing="cCfgKniDis"/>
    </thing>
  <thing id="cPWKniCT" name="Crusader&apos;s Training" description="At 1st level, a knight disciple begins to express her divine power through her initiating and with effects similar to the spells of other paladins. She selects one of the following abilities to learn at 1st level, and gains another ability at 4th level and every three levels thereafter.\nThis ability replaces divine bond." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWKDDA" name="Detect Alignment" description="The knight disciple gains the ability to use detect chaos, detect good, and detect law as spell-like abilities at-will, with a caster level equal to her class level." compset="CustomSpec" summary="Detect aligments at will as per the respective spells" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDDU" name="Detect Undead" description="The knight disciple can use detect undead as a spell-like ability at-will. If she wishes, she can activate and concentrate on this ability at the same time as her detect evil ability." compset="CustomSpec" summary="Detect undead at well as per the spell-like ability" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDFB" name="Fiendbane" description="The knight disciple can expend one use of her guardian’s shield ability as a swift action to enchant her weapon with holy light that banishes evil outsiders. The next time the knight disciple hits with that weapon, if the target is an outsider with the evil and extraplanar subtypes, that creature must succeed at a Will save (DC 10 + 1/2 the knight disciple’s class level + the knight disciple’s initiation modifier) or be banished back to its home plane. A knight disciple can keep a weapon charged with this ability indefinitely, although she may only have one such weapon charged at any one time." compset="CustomSpec" summary="Empower your weapon with holy light banishing evil" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDDI" name="Divine Interception" description="Once per encounter, the knight disciple can move up to her speed as an immediate action, provided she ends her movement in a square adjacent to another ally." compset="CustomSpec" summary="One per encounter move next to an ally" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDGH" name="Ghost Hunter" description="The knight disciple’s weapons and armor gain the effects of the ghost touch weapon special ability in addition to their other properties for as long as she wields or wears them." compset="CustomSpec" summary="Empower your weapon and armor with ghost touch" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDIG" name="Improved Guardian’s Shield" description="Allies under the effects of the knight disciple’s guardian’s shield ability also gain the benefits of a protection from evil spell for the duration of the shield." compset="CustomSpec" summary="Allies effected by guardian shield also gain the benefits of a protection from spell." uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDKT" name="Know Thine Enemy" description="The knight disciple can make untrained Knowledge checks to identify creatures with no limit to the DC, and gains a bonus on Knowledge checks to identify chaotic and/or evil creatures equal to 1/2 her class level." compset="CustomSpec" summary="Allies effected by guardian shield also gain the benefits of a protection from spell." uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWKDRS" name="Righteous Sanctuary" description="Once per encounter as an immediate action, the knight disciple can allow a willing ally to move up to their speed. This movement does not provoke attacks of opportunity, and the ally must end their movement adjacent to the knight disciple. If the ally would not be able to reach the knight disciple, they cannot be allowed to move with this ability." compset="CustomSpec" summary="Allow allies to move next to you" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDTs" name="Truthseeker" description="The knight disciple can use discern lies as a spell-like ability with a caster level equal to her initiator level. She can use this ability for a number of rounds per day equal to her class level, although these rounds need not be consecutive." compset="CustomSpec" summary="Discern lies as per the spell like the ability" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="Helper" tag="Secondary"/>
    </thing>
  <thing id="cPWKDSha" name="Merciful Shield: Shaken" compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    </thing>
  <thing id="cPWKDSic" name="Merciful Shield: Sickened" compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    </thing>
  <thing id="cPWKDFat" name="Merciful Shield: Fatigued" compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    </thing>
  <thing id="cPWKDDaz" name="Merciful Shield: Dazed" compset="CustomSpec" uniqueness="unique">
    <fieldval field="reqLevPal" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKDStu" name="Merciful Shield: Stunned" compset="CustomSpec" uniqueness="unique">
    <fieldval field="reqLevPal" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKDDis" name="Merciful Shield: Diseased" description="The knight disciple’s guardian’s shield ability also acts as a remove disease spell, using the knight disciple’s level as the caster level." compset="CustomSpec" summary="The knight disciple’s guardian’s shield ability also acts as a remove disease spell, using the knight disciple’s level as the caster level." uniqueness="unique">
    <fieldval field="reqLevPal" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKDSta" name="Merciful Shield: Staggered" description="The target is no longer staggered, unless the target is at exactly 0 hit points." compset="CustomSpec" summary="The target is no longer staggered, unless the target is at exactly 0 hit points." uniqueness="unique">
    <fieldval field="reqLevPal" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKDCur" name="Merciful Shield: Cursed" description="The knight disciple’s guardian’s shield ability also acts as a remove curse spell, using the paladin’s level as the caster level." compset="CustomSpec" summary="The knight disciple’s guardian’s shield ability also acts as a remove curse spell, using the paladin’s level as the caster level." uniqueness="unique">
    <fieldval field="reqLevPal" value="9"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKDExa" name="Merciful Shield: Exhausted" description="The knight disciple must have the fatigue condition before selecting this condition." compset="CustomSpec" summary="The knight disciple must have the fatigue condition before selecting this condition." uniqueness="unique">
    <fieldval field="reqLevPal" value="9"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="Merciful Shield Fatigued required"><![CDATA[hero.tagis[Ability.cPWKDFat] <> 0]]></exprreq>
    </thing>
  <thing id="cPWKDFri" name="Merciful Shield: Frightened" description="The knight disciple must have the shaken condition before selecting this condition." compset="CustomSpec" summary="The knight disciple must have the shaken condition before selecting this condition." uniqueness="unique">
    <fieldval field="reqLevPal" value="9"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="Merciful Shield Staken required"><![CDATA[hero.tagis[Ability.cPWKDSha] <> 0]]></exprreq>
    </thing>
  <thing id="cPWKDNau" name="Merciful Shield: Nauseated" description="The knight disciple must have the sickened condition before selecting this condition." compset="CustomSpec" summary="The knight disciple must have the sickened condition before selecting this condition." uniqueness="unique">
    <fieldval field="reqLevPal" value="9"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <exprreq message="Merciful Shield Staken required"><![CDATA[hero.tagis[Ability.cPWKDSic] <> 0]]></exprreq>
    </thing>
  <thing id="cPWKDPoi" name="Merciful Shield: Poisoned" description="The knight disciple’s guardian’s shield ability also acts as a neutralize poison spell, using the knight disciple’s level as the caster level." compset="CustomSpec" summary="The knight disciple’s guardian’s shield ability also acts as a neutralize poison spell, using the knight disciple’s level as the caster level." uniqueness="unique">
    <fieldval field="reqLevPal" value="9"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKD" name="Merciful Shield: Blinded" compset="CustomSpec" uniqueness="unique">
    <fieldval field="reqLevPal" value="12"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKDDea" name="Merciful Shield: Deafened" compset="CustomSpec" uniqueness="unique">
    <fieldval field="reqLevPal" value="12"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKDPar" name="Merciful Shield: Paralyzed" compset="CustomSpec" uniqueness="unique">
    <fieldval field="reqLevPal" value="12"/>
    <usesource source="srcPOWEx"/>
    <tag group="AbilType" tag="Super"/>
    <tag group="SpecSource" tag="arPWKniDis"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWKniGS" name="Guardian’s Shield" description="At 1st level, a knight disciple learns to surround her allies in a field of holy protective energy. Whenever she initiates a strike, the knight disciple can apply a guardian’s shield to one ally (other than herself) within 60 feet as a free action. This shield lasts for a number of rounds equal to the knight disciple’s initiation modifier.\n\nA guardian’s shield grants the affected ally a number of temporary hit points equal to twice the knight disciple’s initiator level. These temporary hit points do not stack with other temporary hit points, and vanish when the shield’s duration expires. The knight disciple can use her guardian’s shield ability a number of times per day equal to 1/2 her class level (minimum 1) + her knight disciple initiation modifier. This ability counts as the lay on hands class feature for the purposes of the Extra Lay on Hands feat.\n\nThis ability replaces lay on hands." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWKniMnRC" name="Knight Disciple Maneuver Recovery" description="In order for the knight disciple to recover maneuvers, she must project her power, protecting her allies from harm as a full-round action. When she does so, she recovers a number of expended maneuvers equal to her knight disciple initiation modifier (minimum 2) and each ally within 30 feet gains a sacred bonus equal to the knight disciple’s initiation modifier (minimum 1) to their AC and on saving throws for one round. Alternately, the knight disciple may focus inward and recover a single maneuver as a standard action." compset="ClSpecial">
    <fieldval field="abValue" value="2"/>
    <fieldval field="actName" value="Full-round recovery"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="User" tag="Activation"/>
    <eval phase="Render" priority="10000" index="2"><![CDATA[      this.field[actName].text &= " (" & field[abValue].value & " maneuvers)"]]></eval>
    </thing>
  <thing id="cPWKniSpFL" name="Spell Familiarity" description="Starting at 1st level, a knight disciple can use spell completion and spell triggers items (such as scrolls and wands) as if she possessed the ability to cast paladin spells, using her initiator level as her effective caster level." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWKniMoC" name="Mark of Censure" description="At 1st level, a knight disciple gains the ability to censure the actions of evil creatures, protecting her allies from the harm they cause. Once per day as a swift action, the knight disciple can apply a mark of censure to any evil creature she can see. The mark lasts for 24 hours or until the creature is slain. While the mark of censure is in effect, the knight disciple’s allies (other than herself) gain damage reduction/– equal to her knight disciple initiation modifier against attacks made by the marked creature. At 11th level, this damage reduction increases to equal twice her knight disciple initiation modifier. At 4th level and every three levels thereafter, the knight disciple can use this ability an additional time per day.\n\nThis ability replaces smite evil." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPwKniEmHe" name="Empowered Healing" description="At 4th level, a the knight disciple healing maneuvers become more potent. Any maneuver she initiates that heals hit point damage (to herself or others) heals an additional 50% points of damage (rounded down).\n\nThis ability replaces channel positive energy." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWKniGuAu" name="Guardian&apos;s Aura" description="At 11th level, a knight disciple’s protective nature allows her to use her counters for the benefit of her allies instead of just herself. Whenever she initiates a counter, she can choose to have that counter affect an ally within 10 feet instead of herself. When determining if the counter can be initiated (for example, if the counter is initiated in response to an attack), she treats that ally as if they were herself. The counter still uses the knight disciple’s modifiers to determine its success or failure, and she still makes any rolls or checks for the counter.\n\nThis ability replaces aura of justice." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWKniHolDis" name="Holy Disciple" description="At 20th level, a knight disciple becomes a paragon of divine martial justice. She gains damage reduction 10/evil, and whenever a creature under the effect of her mark of censure deals damage to one of her allies (not including herself), that creature takes 1/2 the damage it dealt. This damage is the same type as the damage that was dealt to the knight disciple’s ally. In addition, the temporary hit points granted by the knight disciple’s guardian’s shield ability increase by 50% (rounded down)." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="arPWPrimDis" name="Primal Disciple" description="Primal Disciples draw on the strength and wisdom of their ancestors to grant them the insight to use powerful martial techniques during their furious rages." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvBonFtNm" value="Ancestral Style"/>
    <arrayval field="cvBonFtMod" index="0" value="1"/>
    <arrayval field="cvBonFtMod" index="1" value="1"/>
    <arrayval field="cvBonFtMod" index="2" value="1"/>
    <arrayval field="cvBonFtMod" index="3" value="1"/>
    <arrayval field="cvBonFtMod" index="4" value="1"/>
    <arrayval field="cvBonFtMod" index="5" value="2"/>
    <arrayval field="cvBonFtMod" index="6" value="2"/>
    <arrayval field="cvBonFtMod" index="7" value="2"/>
    <arrayval field="cvBonFtMod" index="8" value="2"/>
    <arrayval field="cvBonFtMod" index="9" value="2"/>
    <arrayval field="cvBonFtMod" index="10" value="2"/>
    <arrayval field="cvBonFtMod" index="11" value="2"/>
    <arrayval field="cvBonFtMod" index="12" value="2"/>
    <arrayval field="cvBonFtMod" index="13" value="2"/>
    <arrayval field="cvBonFtMod" index="14" value="2"/>
    <arrayval field="cvBonFtMod" index="15" value="2"/>
    <arrayval field="cvBonFtMod" index="16" value="2"/>
    <arrayval field="cvBonFtMod" index="17" value="2"/>
    <arrayval field="cvBonFtMod" index="18" value="2"/>
    <arrayval field="cvBonFtMod" index="19" value="2"/>
    <arrayval field="cvCustTot" index="1" value="1"/>
    <arrayval field="cvCustTot" index="2" value="1"/>
    <arrayval field="cvCustTot" index="3" value="1"/>
    <arrayval field="cvCustTot" index="4" value="1"/>
    <arrayval field="cvCustTot" index="5" value="1"/>
    <arrayval field="cvCustTot" index="6" value="1"/>
    <arrayval field="cvCustTot" index="7" value="1"/>
    <arrayval field="cvCustTot" index="8" value="1"/>
    <arrayval field="cvCustTot" index="9" value="1"/>
    <arrayval field="cvCustTot" index="10" value="1"/>
    <arrayval field="cvCustTot" index="11" value="1"/>
    <arrayval field="cvCustTot" index="12" value="1"/>
    <arrayval field="cvCustTot" index="13" value="1"/>
    <arrayval field="cvCustTot" index="14" value="1"/>
    <arrayval field="cvCustTot" index="15" value="1"/>
    <arrayval field="cvCustTot" index="16" value="1"/>
    <arrayval field="cvCustTot" index="17" value="1"/>
    <arrayval field="cvCustTot" index="18" value="1"/>
    <arrayval field="cvCustTot" index="19" value="1"/>
    <tag group="ClassSkill" tag="skDiplo"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cBbnFast"/>
    <tag group="AbReplace" tag="cTrapSense"/>
    <tag group="fInclude" tag="fPWEndProt"/>
    <tag group="fInclude" tag="fPWMrtChrg"/>
    <tag group="fInclude" tag="fPWMartPow"/>
    <tag group="fInclude" tag="fPWProdTWF"/>
    <tag group="fInclude" tag="fPWSeizeOp"/>
    <tag group="fInclude" tag="fPWVicRec"/>
    <tag group="AbReplace" tag="cBlrP6RPwr"/>
    <bootstrap thing="cCfgPriDis"></bootstrap>
    <bootstrap thing="cPWPriAnSt">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWPriAnSt">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWPriStance">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpBbn"/>
    </thing>
  <thing id="cCfgPriDis" name="Primal Disciple Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpPriDis"></bootstrap>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="mHelpPriDis" name="Primal Disciple Maneuvers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="3"/>
    <arrayval field="cManKnown" index="1" value="4"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="5"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="6"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="7"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="8"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="9"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="10"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="11"/>
    <arrayval field="cManKnown" index="16" value="12"/>
    <arrayval field="cManKnown" index="17" value="12"/>
    <arrayval field="cManKnown" index="18" value="13"/>
    <arrayval field="cManKnown" index="19" value="13"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="2"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="3"/>
    <arrayval field="cStances" index="11" value="3"/>
    <arrayval field="cStances" index="12" value="3"/>
    <arrayval field="cStances" index="13" value="3"/>
    <arrayval field="cStances" index="14" value="4"/>
    <arrayval field="cStances" index="15" value="4"/>
    <arrayval field="cStances" index="16" value="4"/>
    <arrayval field="cStances" index="17" value="4"/>
    <arrayval field="cStances" index="18" value="4"/>
    <arrayval field="cStances" index="19" value="4"/>
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <tag group="Discipline" tag="PrcThun"/>
    <tag group="Discipline" tag="PrimalFury"/>
    <tag group="Discipline" tag="ThrashDrag"/>
    <tag group="ArchCntAs" tag="BarbariUnc"/>
    <link linkage="powClass" thing="cHelpBbn"/>
    <link linkage="powCfg" thing="cCfgPriDis"/>
    </thing>
  <thing id="cPWPriMnRC" name="Primal Disciple Maneuver Recovery" description="In order for the primal disciple to recover maneuvers, she must draw on the strength of her ancestors as a full-round action. When she does so, she recovers a number of expended maneuvers equal to her primal disciple initiation modifier (minimum 2), regains one round of rage, and if she is fatigued as a result of her rage class feature, she can make a Fortitude save (DC 10 + the number of rounds the fatigue would last) to not become fatigued. Alternately, the primal disciple may focus inward and recover a single maneuver as a standard action." compset="ClSpecial">
    <fieldval field="abValue" value="2"/>
    <fieldval field="actName" value="Full-round recovery"/>
    <tag group="abAction" tag="FullRd"/>
    <tag group="abAction" tag="Standard"/>
    <tag group="User" tag="Activation"/>
    <eval phase="Render" priority="10000" index="2"><![CDATA[      this.field[actName].text &= " (" & field[abValue].value & " maneuvers)"]]></eval>
    </thing>
  <thing id="cPWPriStance" name="Primal Disciple Stances" description="A primal disciple begins play with knowledge of one stance from any discipline open to primal disciples. At 4th, 7th, 11th, and 13th levels, she can select an additional stance to learn. The maximum level of stances gained through primal disciple levels is limited by those listed in Table: Archetype Maneuver Progression. Unlike maneuvers, stances are not expended and the primal disciple does not have to ready them. All the stances she knows are available to her at all times, and she can change the stance she is currently maintaining as a swift action. A stance is an extraordinary ability unless otherwise stated in the stance or discipline description.\n\nUnlike with maneuvers, a primal disciple cannot learn a new stance at higher levels in place of one she already knows.\n\nThis ability replaces the rage powers gained at 4th, 6th, 8th, 10th, 12th, 14th, 16th, 18th, and 20th levels." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWPriAnSt" name="Ancestral Style" description="Primal disciples draw their skill and strength from longstanding traditions of combat and skill in their tribes. At 1st level and again at 6th level, a primal disciple gains one of the following feats as a bonus feat: Enduring Protector, Martial Charge, Martial Power, Prodigious Two-Weapon Fighting, Seize the Opportunity, or Victorious Recovery. She must meet the prerequisites for these feats as normal..\n\nThis ability replaces fast movement and trap sense." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cCfgMnkSF" name="Monk of the Silver Fist Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpMnkSF"></bootstrap>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="mHelpMnkSF" name="Monk of the Silver Fist Maneuvers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="3"/>
    <arrayval field="cManKnown" index="1" value="4"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="5"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="6"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="7"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="8"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="9"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="10"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="11"/>
    <arrayval field="cManKnown" index="16" value="12"/>
    <arrayval field="cManKnown" index="17" value="12"/>
    <arrayval field="cManKnown" index="18" value="13"/>
    <arrayval field="cManKnown" index="19" value="13"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="2"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="3"/>
    <arrayval field="cStances" index="11" value="3"/>
    <arrayval field="cStances" index="12" value="3"/>
    <arrayval field="cStances" index="13" value="3"/>
    <arrayval field="cStances" index="14" value="4"/>
    <arrayval field="cStances" index="15" value="4"/>
    <arrayval field="cStances" index="16" value="4"/>
    <arrayval field="cStances" index="17" value="4"/>
    <arrayval field="cStances" index="18" value="4"/>
    <arrayval field="cStances" index="19" value="4"/>
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <tag group="ArchCntAs" tag="MonkUnc"/>
    <tag group="Discipline" tag="EternGuard"/>
    <tag group="Discipline" tag="IronTort"/>
    <tag group="Discipline" tag="MithCurr"/>
    <link linkage="powClass" thing="cHelpMnk"/>
    <link linkage="powCfg" thing="cCfgMnkSF"/>
    </thing>
  <thing id="arPWMnkSF" name="Monk of the Silver Fist" description="The Monks of the Silver Fist are an order of martial artists that have perfected the way of the bodyguard. Their unique use of gauntlets and greaves protects their hands and adds weight to the attacks they make in defense of their charges." compset="ClassVary" uniqueness="unique">
    <tag group="ClVaryName" tag="Replace"/>
    <tag group="ClassSkill" tag="Perform"/>
    <tag group="ClassSkill" tag="skBluff"/>
    <tag group="AbReplace" tag="cMnkStunFi"/>
    <tag group="AbReplace" tag="cMnkStun7"/>
    <tag group="AbReplace" tag="cMnkStun5"/>
    <tag group="AbReplace" tag="cMnkStun2"/>
    <tag group="AbReplace" tag="cMnkStun6"/>
    <tag group="AbReplace" tag="cMnkStun3"/>
    <tag group="AbReplace" tag="cMnkStun4"/>
    <tag group="AbReplace" tag="cMnkStun1"/>
    <tag group="AbReplace" tag="cMnkFlurUn"/>
    <tag group="AbReplace" tag="cMnkUnarm"/>
    <tag group="AbReplace" tag="cMnkFlurr"/>
    <tag group="AbReplace" tag="cMnkAbund"/>
    <tag group="AbReplace" tag="cMnkQuiver"/>
    <tag group="WepProf" tag="wGauntlet"/>
    <bootstrap thing="cPWMnKGS">
      <autotag group="ClSpecWhen" tag="5"/>
      </bootstrap>
    <bootstrap thing="cPWMnKGS">
      <autotag group="ClSpecWhen" tag="10"/>
      </bootstrap>
    <bootstrap thing="cPWMnKGS">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPWMnKGS">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cCfgMnkSF"></bootstrap>
    <bootstrap thing="fArmBuckl"></bootstrap>
    <bootstrap thing="cPWMnKGS">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMnkShiFi">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWMnkInFist">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPWMnkMoftSF">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWMnkRoftSF">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpMnk"/>
    <eval phase="PostLevel" priority="11050"><![CDATA[
      ~ Make sure we are linked to class before
      ~ proceeding.
      doneif (islinkage[varies] = 0)

      ~ Remove the bonus feats

      ~ Bonus feats at level 1
      perform linkage[varies].assign[fInclude.fImpShBash]
      perform linkage[varies].assign[fInclude.fPWBuckBsh]
      perform linkage[varies].assign[fInclude.fPWMCStyle]
      ~ Bonus feats at level 6
      If (linkage[varies].field[cTotalLev].value >= 6) Then
        perform linkage[varies].assign[fInclude.fBodyguard]
        perform linkage[varies].assign[fInclude.fPWDefExp]
      Endif
      ~ Bonus feats at level 10
      If (linkage[varies].field[cTotalLev].value >= 10) Then
        perform linkage[varies].assign[fInclude.fPWDiscMst]
        perform linkage[varies].assign[fInclude.fInHarmWay]
      Endif]]></eval>
    </thing>
  <thing id="cPWMnkSF" name="Monk of the Silver Fist Stances" description="A monk of the silver fist begins his career with knowledge of one stance from any discipline open to monks of the silver fist. At 4th, 7th, 11th, and 13th levels, he can select an additional stance to learn. The maximum level of stances gained through monk of the silver fist levels is limited by those listed in Table: Archetype Maneuver Progression. Unlike maneuvers, stances are not expended and the monk of the silver fist does not have to ready them. All the stances he knows are available to him at all times, and he can change the stance he is currently maintaining as a swift action. A stance is an extraordinary ability unless otherwise stated in the stance or discipline description.\n\nUnlike with maneuvers, a monk of the silver fist cannot learn a new stance at higher levels in place of one he already knows.\n\nThis ability replaces flurry of blows and stunning fist." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWMnKGS" name="Gauntlet Strike" description="At 1st level, the monk of the silver fist becomes an expert in wielding gauntlets. He gains Improved Unarmed Strike and Weapon Focus (gauntlet) as bonus feats, even if he does not meet their prerequisites. A monk of the silver fist deals more damage with his gauntlet attacks than a normal person would, as shown below. For the purposes of the monk of the silver fist’s abilities and feats, a gauntlet is any weapon worn over the hands or fingers to aid in punching, including brass knuckles, normal gauntlets, rope gauntlets, and spiked gauntlets.\n\n{b}Level — Small — Medium — Large{/b}\n1st–4th — 1d4 — 1d6 — 1d8\n5th–9th — 1d6 — 1d8 — 2d6\n10th–14th — 1d8 — 1d10 — 2d8\n15th–19th — 1d10 — 2d6 — 3d6 \n20th — 2d6 — 2d8 — 3d8\n\nThis ability replaces unarmed strike." compset="ClSpecial" summary="Extra damage to Gauntlets and similar weapons">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="Hide" tag="Statblock" name="Statblock" abbrev="Statblock"/>
    <tag group="LvNamePar" tag="AppText" name="Append &quot;field[abText].text&quot;" abbrev="Append &quot;field[abText].text&quot;"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <eval phase="PostLevel" priority="5000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      foreach pick in hero from BaseWep where "IsWeapon.wGauntlet|IsWeapon.wGauntSpik|IsWeapon.wBrKnuckle|IsWeapon.wPFGauntRo"

       ~ Remove the damage tag as we need to take control over the dmg
       perform eachpick.delete[wMain.?]

      ~ 1-4   = 1d6
      ~ 5-9  = 1d8
      ~ 10-14 = 1d10
      ~ 15-19   = 2d6
      ~ 20+   = 2d8
       if (field[xCount].value >= 5) then
         perform eachpick.assign[wMain.2d8]
         field[abText].text = " 2d8"
       elseif (field[xCount].value >= 4) then
         perform eachpick.assign[wMain.2d6]
         field[abText].text = " 2d6"
       elseif (field[xCount].value >= 3) then
         perform eachpick.assign[wMain.1d10]
         field[abText].text = " 1d10"
       elseif (field[xCount].value >= 2) then
         perform eachpick.assign[wMain.1d8]
         field[abText].text = " 1d8"
       elseif (field[xCount].value >= 1) then
         perform eachpick.assign[wMain.1d6]
         field[abText].text = " 1d6"
       endif

      ~ Set live name
       field[livename].text = field[name].text & field[abText].text
      nexteach]]></eval>
    </thing>
  <thing id="cPWMnkShiFi" name="Shielding Fist" description="At 1st level, so long as the monk of the silver fist is wearing gauntlets, he gains a +1 shield bonus to his AC, and treats his gauntlets as bucklers in addition to their normal effects. If is gauntlets are enchanted, he applies their enhancement bonus on attack and damage rolls and to this shield bonus as well. In addition, a monk of the silver fist can wear gauntlets and use them as a shield without interfering losing the benefit of his AC bonus class feature." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PreAttr" priority="10000"><![CDATA[      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, do nothing
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      foreach pick in hero from BaseWep where "IsWeapon.wGauntlet|IsWeapon.wGauntSpik|IsWeapon.wBrKnuckle|IsWeapon.wPFGauntRo"
       ~ Remove the damage tag as we need to take control over the dmg
       if (eachpick.field[gIsEquip].value <> 0) then
        field[abValue].value += eachpick.field[BonEnhance].value
        hero.child[ArmorClass].field[tACShield].value += field[abValue].value
       endif
      nexteach]]></eval>
    </thing>
  <thing id="arPWBruSlay" name="Brutal Slayer" description="Where other stalkers use grace and finesse, the brutal slayer relies on strength and fury. Wielding heavy, two handed weapons with blinding speed, the brutal slayer is a terrifying predator of the night." compset="ClassVary" uniqueness="unique">
    <usesource source="srcPathOfW"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="Helper" tag="RemoveQuat"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="Helper" tag="OverCustS2"/>
    <tag group="Helper" tag="RemoveCast"/>
    <tag group="ClassSkill" tag="skIntim"/>
    <tag group="ClassSkill" tag="skSurvival"/>
    <tag group="NotClassSk" tag="skP7Acroba"/>
    <tag group="AbReplace" tag="cPW2DeadSt"/>
    <tag group="AbReplace" tag="cPW2Dodge"/>
    <bootstrap thing="cPWBSSAoS">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWBSSAoS">
      <autotag group="ClSpecWhen" tag="12"/>
      </bootstrap>
    <bootstrap thing="cPWBSSAoS">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <bootstrap thing="cPWBSSAoS">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPWBSSAoS">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWBSSMusMem">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPWBSSMusMem">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cPWBBSSBruStri">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWBBSSBruStri">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWBBSSBruStri">
      <autotag group="ClSpecWhen" tag="16"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpPW2"/>
    <eval phase="First" priority="4000"><![CDATA[
      ~ Grant access to Thrashing Dragon discipline
      perform hero.child[mHelpPW2].assign[Discipline.PrimalFury]
      perform hero.child[mHelpPW2].assign[Discipline.BlackSerph]
      ~ 11/23/2016 - Changed the timing to First/4000 to be before
      ~ the adjustments/Feats that can add a disipline to a class.
      ~ In addition I removed the whole "counting" check first and
      ~ simply removed the Iron Tortoise disciplines.
      perform hero.child[mHelpPW2].delete[Discipline.ThrashDrag]]]></eval>
    </thing>
  <thing id="cPWBSSBruAm" name="Brutal Ambush" description="Whenever the brutal slayer attacks a flat-footed opponent, he increases his Strength while making that attack as if he had activated his brutal strikes ability. This benefit ends after his attack resolves." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBruSlay"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWBSSBruAs" name="Brutal Assault" description="As a swift action, the brutal slayer can spend a point of ki and target a single creature he can see. He gains the benefit of his brutal strikes ability when making attacks against that creature for a number of rounds equal to his initiation modifier." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBruSlay"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWBSSBBruFS" name="Furious Strikes" description="The Strength bonus granted by the brutal slayer’s brutal strikes ability increases by +2. In addition, he treats his class level as his base attack bonus for the purposes of qualifying for critical feats. If the brutal slayer possesses fighter levels, he also adds his brutal slayer level to his fighter level for the purposes of qualifying for critical feats. (Not implemented)" compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBruSlay"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="abAction" tag="None"/>
    <tag group="Helper" tag="SpecUp"/>
    <eval phase="PostLevel" priority="9000"><![CDATA[      ~ If we've been Disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      ~Increase Brutal Strike Strike dice by one
      #value[cPWBBSSBruStri] += 2]]></eval>
    </thing>
  <thing id="cPWBSSBruCS" name="Cruel Strike" description="When the brutal slayer hits with a melee attack while under the effect of his brutal strikes ability, he can reduce the damage he deals by 1/4 (rounded down) to sicken the target for a number of rounds equal to his brutal slayer initiation modifier." compset="CustomSpec" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="SpecSource" tag="arPWBruSlay"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWBSSSA" name="Stalker Arts" description="Whenever a brutal slayer gains a new stalker art, he may choose from the following list in addition to the standard stalker’s stalker arts:\n\nBrutal Ambush (Ex): Whenever the brutal slayer attacks a flat-footed opponent, he increases his Strength while making that attack as if he had activated his brutal strikes ability. This benefit ends after his attack resolves.\n\nBrutal Assault (Ex): As a swift action, the brutal slayer can spend a point of ki and target a single creature he can see. He gains the benefit of his brutal strikes ability when making attacks against that creature for a number of rounds equal to his initiation modifier.\n\nFurious Strikes (Ex): The Strength bonus granted by the brutal slayer’s brutal strikes ability increases by +2. In addition, he treats his class level as his base attack bonus for the purposes of qualifying for critical feats. If the brutal slayer possesses fighter levels, he also adds his brutal slayer level to his fighter level for the purposes of qualifying for critical feats.\n\nCruel Strike (Ex): When the brutal slayer hits with a melee attack while under the effect of his brutal strikes ability, he can reduce the damage he deals by 1/4 (rounded down) to sicken the target for a number of rounds equal to his brutal slayer initiation modifier.\n\nThis ability alters stalker arts, but does not cause the brutal slayer archetype to be incompatible with other archetypes that alter the stalker arts class feature.\n\nThis ability replaces fast movement and trap sense." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWBBSSBruStri" name="Brutal Strikes" description="Starting at 1st level, whenever a brutal slayer confirms a critical hit against a creature, he gains a +4 profane bonus Strength for a number of rounds equal to his brutal slayer initiation modifier. This bonus increases to +6 at 8th level and to +8 at 16th level.\n\nThis ability replaces deadly strikes." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <tag group="User" tag="Activation"/>
    <tag group="abDuration" tag="Round"/>
    <tag group="abAction" tag="None"/>
    <tag group="Helper" tag="UseOwnLev"/>
    <eval phase="PostLevel" priority="10000"><![CDATA[      ~ Set the list name
      var listbonus as number
      listbonus = (2 * field[xIndex].value) + 2
      field[listname].text = field[thingname].text & " " & signed(listbonus)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)
      ~ if we've been disabled, get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      field[abValue].value += (2 * field[xCount].value) + 2
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)

      ~ The following should only happen once on the first copy
      doneif (tagis[Helper.FirstCopy] = 0)
      ~if we're not active, just get out now
      doneif (field[abilActive].value = 0)

      ~ Give profane bonus to Str
      #applybonus[BonProfane,hero.childfound[aSTR],field[abValue].value]]]></eval>
    </thing>
  <thing id="cPWBSSAoS" name="Armor of Scars" description="The brutal slayer takes as well as he gives, becoming protected by the scars of wounds he has already survived. At 1st level, a brutal slayer gains a +1 bonus to his natural armor bonus to AC (this stacks with his existing natural armor bonus, if any). At 4th level and every four levels thereafter, this bonus increases by +1. In addition, the brutal slayer’s instincts enable him to better dodge incoming blows; whenever he spends a full-round action to recover maneuvers, he gains a dodge bonus to AC equal to his brutal slayer initiation modifier.\n\nThis ability replaces dodge bonus." compset="ClSpecial" summary="Natural Armor bonus to your Armor Class.">
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev=" (Ex)"/>
    <tag group="Helper" tag="UseOwnLev" name="UseOwnLev" abbrev="UseOwnLev"/>
    <tag group="SpecType" tag="Defense" name="Defense" abbrev="Defense"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <eval phase="PostAttr" priority="20000"><![CDATA[
      ~Set the list name
      field[listname].text = field[thingname].text & " " & signed(field[xIndex].value)

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] <> 1)
      ~if we've been replaced, get out now
      doneif (tagis[Helper.SpcReplace] <> 0)
      ~only perform the calculations for the first copy
      doneif (tagis[Helper.FirstCopy] = 0)

      field[abValue].value += field[xCount].value
      field[livename].text = field[thingname].text & " " & signed(field[abValue].value)
      field[abSumm].text = "+" & field[abValue].value  & " Natural Armor bonus to your AC."

      ~ Give Natural Armor bonus to AC
      hero.child[ArmorClass].field[tACNatural].value += field[abValue].value]]></eval>
    </thing>
  <thing id="cPWBSSMusMem" name="Muscle Memory" description="The muscles of a brutal slayer are honed to deadly efficiency, just like his blades. Starting at 2nd level, a brutal slayer may add 1/2 his Strength modifier to his AC and to Reflex saves instead of his Dexterity modifier. At 6th level, the brutal slayer may add his full Strength modifier instead of his Dexterity modifier, rather than 1/2. The brutal slayer’s Strength bonus to his AC is still limited by his armor’s maximum Dexterity bonus." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    <eval phase="PostAttr" priority="3100"><![CDATA[      field[abValue2].value += field[xCount].value     
      if (field[abValue2].value = 1) then
         field[abValue].value += round(minimum(#attrmod[aSTR],herofield[tMaxDex].value)/2,0,-1)
        else
         field[abValue].value += minimum(#attrmod[aSTR],herofield[tMaxDex].value)
      endif

      ~ If we're not shown, just get out now
      doneif (tagis[Helper.ShowSpec] = 0)

      ~ If we're disabled, just get out now
      doneif (tagis[Helper.SpcDisable] <> 0)

      if (hero.child[aDEX].field[aStartMod].value < hero.child[aSTR].field[aStartMod].value) then
        hero.child[ArmorClass].field[tACDexMod].value = maximum(hero.child[ArmorClass].field[tACDexMod].value, field[abValue].value)

      else
        perform assign[Helper.SpcDisable]
        endif]]>
      <after name="Apply Dex to AC"/>
      </eval>
    </thing>
  <thing id="arPWRubato" name="Rubato" description="A rubato (plural rubati) is a bard who taps into the Primal Song and channels it in both life and war. Theories abound about the Primal Song, though most accept that it is an echo, a shard, of something even more ancient and fundamental, but its power fuels these war singers and propels them to acts of incredible valor." compset="ClassVary" uniqueness="unique">
    <usesource source="srcPOWEx"/>
    <tag group="AbReplace" tag="cBrdPCount"/>
    <tag group="AbReplace" tag="cBrdPDead"/>
    <tag group="AbReplace" tag="cBrdPDoom"/>
    <tag group="AbReplace" tag="cBrdPDistr"/>
    <tag group="AbReplace" tag="cBrdPFas"/>
    <tag group="AbReplace" tag="cBrdPFrigh"/>
    <tag group="AbReplace" tag="cBrdPInsC"/>
    <tag group="AbReplace" tag="cBrdPInsGr"/>
    <tag group="AbReplace" tag="cBrdPInsHe"/>
    <tag group="AbReplace" tag="cBrdPSugg"/>
    <tag group="AbModify" tag="raBrdPerfo"/>
    <tag group="Helper" tag="RemoveCast"/>
    <tag group="Helper" tag="RemovePrim"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <bootstrap thing="cPWRBAccel">
      <autotag group="ClSpecWhen" tag="9"/>
      </bootstrap>
    <bootstrap thing="cPWRBCan">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWRBConMo">
      <autotag group="ClSpecWhen" tag="18"/>
      </bootstrap>
    <bootstrap thing="cPWRBCouPoi">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWRBCres">
      <autotag group="ClSpecWhen" tag="14"/>
      </bootstrap>
    <bootstrap thing="cPWRBDiss">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWRBFug">
      <autotag group="ClSpecWhen" tag="20"/>
      </bootstrap>
    <bootstrap thing="cPWRBHarm">
      <autotag group="ClSpecWhen" tag="15"/>
      </bootstrap>
    <bootstrap thing="cPWRBMetro">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWRBMarPer">
      <autotag group="ClSpecWhen" tag="2"/>
      </bootstrap>
    <bootstrap thing="cPWRBRMR">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWRBTemp">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWRBFort">
      <autotag group="ClSpecWhen" tag="6"/>
      </bootstrap>
    <bootstrap thing="cCfgRubato"></bootstrap>
    <bootstrap thing="cPWRBBarPer">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <link linkage="varies" thing="cHelpBrd"/>
    </thing>
  <thing id="cPWRBTemp" name="Tempo" description="As the rubato fights and draws on the Primal Song, he builds a supernatural energy known as tempo. Outside combat, a rubato has no tempo to spend. When a rubato enters combat, he gains a tempo pool equal to 1/2 his class level (minimum 1) + his rubato initiation modifier at the start of his first turn, and adds one point of tempo to his tempo pool at the start of each of his turns thereafter. His tempo pool persists for one minute after the last enemy combatant is defeated or the encounter otherwise ends. The rubato may not gain tempo out of combat, even if another ability would normally permit him to. A rubato can spend tempo as if it were animus when augmenting maneuvers or using feats such as Animus Healing.\n\nThis ability replaces cantrips." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBCouPoi" name="Bardic Performance: Counterpoint" description="At 1st level, a rubato learns how to lead his allies in a defensive rhythm. An ally must be able to perceive the rubato’s performance to be affected. Affected allies gain a bonus equal to 1/2 the rubato’s class level (minimum one) on all non-damage rolls made as part of initiating counters. This ability replaces countersong." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBMetro" name="Bardic Performance: Metronome" description=" At 1st level, a rubato learns how to create a stronger, faster connection to the Primal Song. While maintaining this performance, he adds one point of tempo to his tempo pool at the beginning of each of his turns. At 5th level and every five levels thereafter, the amount of tempo gained by this ability increases by 1. This ability replaces distraction." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBDiss" name="Bardic Performance: Dissonance" description="At 1st level, a rubato learns how to create a subtly hypnotic, discordant performance that jars his enemies and disturbs their patterns. Enemies within 30 feet that can perceive the rubato’s performance must succeed at a Will save (DC 10 + 1/2 the rubato’s class level + his rubato initiation modifier) or take a –1 penalty on all non-damage rolls made as part of their attacks or strikes while the rubato maintains this performance. A creature that successfully saves cannot be affected by the same rubato’s dissonance performance until the end of the encounter. This penalty increases by –1 at 5th level and every five levels thereafter. This ability replaces fascinate." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBFort" name="Bardic Performance: Fortissimo" description="At 6th level, a rubato learns to empower his maneuvers with tempo. Unlike other bardic performances, he may activate this performance while maintaining another performance. When the rubato initiates a strike with an initiation action of 1 standard action, he can expend 3 rounds of bardic performance and 2 points of tempo to increase the damage (including ability damage, if appropriate) dealt by that strike by 50%. He can activate this performance after rolling his attack roll and determining if it hit or missed, but must activate it before damage is rolled. The rubato must wait 3 rounds after performing a fortissimo before he may perform it again. This ability replaces suggestion." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBCan" name="Bardic Performance: Canon" description="At 8th level, a rubato learns to lead his allies in a martial rhythm. An ally must be able to perceive the rubato’s performance to be affected. Whenever an affected ally initiates a maneuver, they can recover an expended maneuver of different type (for example, an ally that initiates a strike may recover a boost or a counter). Each affected ally may only recover up to one maneuver per round in this fashion. This ability replaces dirge of doom." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBAccel" name="Bardic Performance: Accelerando" description="At 9th level, a rubato learns to charge his allies with his tempo, infusing them with the Primal Song. An ally must be able to perceive the rubato’s performance to be affected. Affected allies gain the benefits of the haste spell. Starting and maintaining this performance costs two performance rounds for each round the rubato performs, rather than one. This ability replaces inspire greatness." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBCres" name="Bardic Performance: Crescendo" description="At 14th level, a rubato can maximize his strikes with tempo, smiting his enemies with the triumphant rise of the Primal Song. Unlike other bardic performances, he may activate this performance while maintaining another performance. When the rubato initiates a strike with an initiation action of 1 standard action, he can expend 4 rounds of bardic performance and 4 points of tempo to maximize the damage (including ability damage, if appropriate) dealt by that strike. Treat all damage dice rolled as part of the strike as though they had achieved the maximum result. This does not affect any other part of the strike, such as attack rolls or rolls to determine the duration of its effects. This ability replaces frightening tune." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBHarm" name="Bardic Performance: Harmonize" description="At 15th level, a rubato learns to harmonize his allies’ movements with the rhythm of the Primal Song. Unlike other bardic performances, this performance costs 2 tempo per round to maintain rather than costing bardic performance rounds. An ally must be able to perceive the rubato’s performance to be affected. Affected allies gain an insight bonus equal to the rubato’s initiation modifier to their AC, on saving throws, and on skill checks made as part of initiating maneuvers. This bonus increases by +2 during any round in which the rubato recovers one or more maneuvers. This ability replaces inspire heroics." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBConMo" name="Bardic Performance: Con Moto" description="At 18th level, a rubato gains the ability to enhance the maneuvers of his allies with his tempo. An ally must be able to perceive the rubato’s performance to be affected. Whenever an affected ally initiates a maneuver, the rubato can spend 2 tempo as a free action, even if it isn’t his turn. If he does, that ally may move up to 15 feet as part of the maneuver (resolve this movement either immediately before, or immediately after initiating the maneuver) or if the maneuver already involves movement, they may increase the distance moved by 15 feet. This movement provokes attacks of opportunity as normal, unless another ability would prevent such attacks. In addition, the save DC of that ally’s maneuver (if any) increases by 2. This ability replaces mass suggestion." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBFug" name="Bardic Performance: Fugue" description="At 20th level, the rubato learns to maintain two bardic performances at the same time. He can activate two bardic performances with the same action, paying any associated costs for each separately. Performances noted as being able to be used while maintaining other performances (such as fortissimo) do not count against this limit. This ability replaces deadly performance." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBMarPer" name="Martial Performer" description="Starting at 2nd level, a rubato can make Perform checks in place of checks with his disciplines’ associated skills. He may only substitute Perform checks for skills associated with disciplines he has access to from his rubato levels (including disciplines acquired through traits or martial traditions).\n\nThis ability replaces versatile performance." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBBarPer" name="Rubato: Bardic Performance" description="Like all bards, the rubato can use his performances to create magical effects on those around his. Once per round as a free action, a rubato can expend one round of his bardic performance to add 2 points of tempo to his tempo pool. Alternatively, he can spend 2 points of tempo to regain one round of his bardic performance. He may only use one of these abilities in a given round. In addition, a rubato can start a bardic performance in the same action as initiating a strike by spending one additional round of his bardic performance ability.\n\nRubati learn different performances than most bards. A rubato still learns inspire courage, inspire competence, and soothing performance, but otherwise learns performances from the list below. A rubato’s performances may all use either audible or visual components, even if they would otherwise only use one or the other.\nThis ability alters bardic performance." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWRBRMR" name="Rubato: Maneuver Recovery" description="In order for the rubato to recover maneuvers, he must expend tempo. A rubato can recover a single expended maneuver as a swift action by spending 2 points of tempo, or as a free action by spending 3 points of tempo. A rubato may not recover a maneuver by spending tempo in the same round that he initiated it, though he might be able to recover it in another way." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="mHelpRubato" name="Rubato Disciple Maneuvers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="3"/>
    <arrayval field="cManKnown" index="1" value="4"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="5"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="6"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="7"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="8"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="9"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="10"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="11"/>
    <arrayval field="cManKnown" index="16" value="12"/>
    <arrayval field="cManKnown" index="17" value="12"/>
    <arrayval field="cManKnown" index="18" value="13"/>
    <arrayval field="cManKnown" index="19" value="13"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="2"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="3"/>
    <arrayval field="cStances" index="11" value="3"/>
    <arrayval field="cStances" index="12" value="3"/>
    <arrayval field="cStances" index="13" value="3"/>
    <arrayval field="cStances" index="14" value="4"/>
    <arrayval field="cStances" index="15" value="4"/>
    <arrayval field="cStances" index="16" value="4"/>
    <arrayval field="cStances" index="17" value="4"/>
    <arrayval field="cStances" index="18" value="4"/>
    <arrayval field="cStances" index="19" value="4"/>
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aCHA"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <tag group="Discipline" tag="ElemFlux"/>
    <tag group="Discipline" tag="MithCurr"/>
    <link linkage="powClass" thing="cHelpBrd"/>
    <link linkage="powCfg" thing="cCfgRubato"/>
    </thing>
  <thing id="cCfgRubato" name="Rubato  Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpRubato"></bootstrap>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="cPWMnkMoftSF" name="Mark of the Silver Fist" description="Starting at 4th level, a monk of the silver fist is able to focus his protection on one ally to better guard them. The monk of the silver fist can spend 1 ki point as a swift action to apply a special mark to one ally (other than himself) within 30 feet. For a number of rounds equal to 1 + the monk of the silver fist’s initiation modifier, the marked ally gains a +4 circumstance bonus to their AC, and any enemy that attacks the marked ally provokes an attack of opportunity from the monk of the silver fist. A monk of the silver fist can only have one mark of the silver fist active at a time. At 12th level and again at 16th level, the number of allies a monk of the silver fist can have marked at a time increases by one." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWMnkInFist" name="Intercepting Fist" description="At 12th level, a monk of the silver fist gains the ability to swiftly cross the battlefield in the defense of his allies. Whenever an ally is targeted by an attack, the monk of the silver fist can spend 1 ki point as an immediate action to move up to his speed towards that ally. If his movement ends adjacent to the targeted ally, the monk of the silver fist becomes the target of that attack, rather than his ally.\n\nThis ability replaces abundant step." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWMnkRoftSF" name="Reach of the Silver Fist" description="At 15th level, whenever the monk initiates a strike with a range of melee attack and a target of one creature, he can spend 1 ki point as a free action to also initiate the strike against a second target within close range (25 feet + 5 feet per 2 monk of the silver fist levels). This additional strike is treated as a melee attack, and uses the monk of the silver fist’s gauntlet damage as its base damage. A monk of the silver fist can only activate this ability once per strike.\n\nThis ability replaces quivering palm." compset="ClSpecial">
    <tag group="AbilType" tag="Super"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="arPWAmbHun" name="Ambush Hunter" description="Stalkers in the wilderness who specialize in sudden, vicious strikes from hidden vantage points, the Ambush Hunters and their animal companions are masters of stealth and of overwhelming assault." compset="ClassVary" uniqueness="unique">
    <fieldval field="cvSpec3rdS" value="Martial Style"/>
    <fieldval field="cvSpecSing" value="Combat Style"/>
    <fieldval field="cvSpec4thS" value="Martial Companion"/>
    <arrayval field="cvCustTot" index="0" value="1"/>
    <arrayval field="cvCustTot" index="3" value="-1"/>
    <arrayval field="cvCustTTot" index="1" value="1"/>
    <arrayval field="cvCustQTot" index="3" value="1"/>
    <tag group="Helper" tag="RemFavEnem"/>
    <tag group="Helper" tag="RemoveSec"/>
    <tag group="Helper" tag="RemoveCast"/>
    <tag group="ClVaryName" tag="AppParen"/>
    <tag group="AbReplace" tag="cRgrBond"/>
    <tag group="AbReplace" tag="cRgrQuarry"/>
    <tag group="Helper" tag="OverCustS1"/>
    <tag group="AbReplace" tag="cFavEnemy"/>
    <bootstrap thing="cPWABABT">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cPWABPS">
      <autotag group="ClSpecWhen" tag="19"/>
      </bootstrap>
    <bootstrap thing="cPWABPaSa">
      <autotag group="ClSpecWhen" tag="8"/>
      </bootstrap>
    <bootstrap thing="cPWABMartSt">
      <autotag group="ClSpecWhen" tag="1"/>
      </bootstrap>
    <bootstrap thing="cPWABMartComp">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cCfgAmbHun"></bootstrap>
    <link linkage="varies" thing="cHelpRgr"/>
    </thing>
  <thing id="cPWABCSA" name="Ambush Hunter: Combat Style (Archery)" description="Allows the ranger to pick from a variety of archery-related combat style bonus feats." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="archery"/>
    <fieldval field="shortname" value="Archery"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~ at level 6, we add more bonus feats available (we add them to ourself,
      ~ and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[BonusFor.RgrArch6]
        endif

      ~ at level 10, we add more bonus feats available (we add them to ourself,
      ~ and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[BonusFor.RgrArch10]
        endif]]></eval>
    <exprreq message="Tempest Gale or Solar Wind Martial Styles Required"><![CDATA[#hasability[cPWABMSSW] + #hasability[cPWABMSTG] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABCSC" name="Ambush Hunter: Combat Style (Crossbow)" description="If the ranger selects crossbow style, he can choose from the following list whenever he gains a combat style feat: Deadly Aim, Focused Shot, Precise Shot, and Rapid Reload. At 6th level, he adds Crossbow Mastery and Improved Precise Shot to the list. At 10th level, he adds Pinpoint Targeting and Shot on the Run to the list." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="crossbow"/>
    <fieldval field="shortname" value="Crossbow"/>
    <usesource source="APG" parent="APGHeader" name="Advanced Player&apos;s Guide"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="fInclude" tag="fDeadAim" name="Deadly Aim" abbrev="Deadly Aim"/>
    <tag group="fInclude" tag="fFocShot" name="Focused Shot" abbrev="Focused Shot"/>
    <tag group="fInclude" tag="fPrecShot" name="Precise Shot" abbrev="Precise Shot"/>
    <tag group="fInclude" tag="fRapidRel" name="Rapid Reload" abbrev="Rapid Reload"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~at level 6, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[fInclude.fPFCrossbo]
        perform assign[fInclude.fImpPrec]
        endif

      ~at level 10, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[fInclude.fPinTarget]
        perform assign[fInclude.fShotRun]
        endif]]></eval>
    <exprreq message="Tempest Gale or Solar Wind Martail Styles Required"><![CDATA[#hasability[cPWABMSSW] + #hasability[cPWABMSTG] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABCST" name="Ambush Hunter: Combat Style (Thrown Weapon)" description="If the character selects thrown weapon, he can choose from the following list whenever he gains a combat style feat: Distance Thrower, Precise Shot, Quick Draw, Two-Weapon Fighting. At 6th level, he adds Close-Quarters Thrower and False Opening to the list. At 10th level, he adds Pinpoint Targeting and Shot on the Run to the list." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="thrown"/>
    <fieldval field="shortname" value="Thrown Weapon"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="fInclude" tag="fDistaThro" name="Distance Thrower" abbrev="Distance Thrower"/>
    <tag group="fInclude" tag="fPrecShot" name="Precise Shot" abbrev="Precise Shot"/>
    <tag group="fInclude" tag="fQuickDraw" name="Quick Draw" abbrev="Quick Draw"/>
    <tag group="fInclude" tag="fTwoWep" name="Two-Weapon Fighting" abbrev="Two-Weapon Fighting"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~ at level 6, we add more bonus feats available (we add them to ourself,
      ~ and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[fInclude.fCloseThro]
        perform assign[fInclude.fFalseOpen]
        endif

      ~ at level 10, we add more bonus feats available (we add them to ourself,
      ~ and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[fInclude.fPinTarget]
        perform assign[fInclude.fShotRun]
        endif]]></eval>
    <exprreq message="Iron Tortoise, Solar Wind, Tempest Gale, or Thrashing Dragon Martial Styles Required"><![CDATA[#hasability[cPWABMSIT] + #hasability[cPWABMSTG] + #hasability[cPWABMSSW] + #hasability[cPWABMSTD] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABCSN" name="Ambush Hunter: Combat Style (Natural Weapon)" description="If the ranger selects natural weapon style, he can choose from the following list whenever he gains a combat style feat: Aspect of the Beast, Improved Natural Weapon, Rending Claws, and Weapon Focus. At 6th level, he adds Eldritch Fangs and Vital Strike to the list. At 10th level, he adds Multiattack and Improved Vital Strike to the list." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="natural weapon"/>
    <fieldval field="shortname" value="Natural Weapon"/>
    <usesource source="APG" parent="APGHeader" name="Advanced Player&apos;s Guide"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="fInclude" tag="fAspBeaCla" name="Aspect of the Beast (Claws of the Beast)" abbrev="Aspect of the Beast (Claws of the Beast)"/>
    <tag group="fInclude" tag="fAspBeaDPl" name="Aspect of the Beast (Night Senses - Darkvision +30&apos;)" abbrev="Aspect of the Beast (Night Senses - Darkvision +30&apos;)"/>
    <tag group="fInclude" tag="fAspBeaD30" name="Aspect of the Beast (Night Senses - Darkvision 30&apos;)" abbrev="Aspect of the Beast (Night Senses - Darkvision 30&apos;)"/>
    <tag group="fInclude" tag="fAspBeaIns" name="Aspect of the Beast (Wild Instinct)" abbrev="Aspect of the Beast (Wild Instinct)"/>
    <tag group="fInclude" tag="fAspBeaLea" name="Aspect of the Beast (Predator&apos;s Leap)" abbrev="Aspect of the Beast (Predator&apos;s Leap)"/>
    <tag group="fInclude" tag="fAspBeaLow" name="Aspect of the Beast (Night Senses - Low-Light Vision)" abbrev="Aspect of the Beast (Night Senses - Low-Light Vision)"/>
    <tag group="fInclude" tag="fImpNatAtt" name="Improved Natural Attack" abbrev="Improved Natural Attack"/>
    <tag group="fInclude" tag="fRendClaw" name="Rending Claws" abbrev="Rending Claws"/>
    <tag group="fInclude" tag="fWepFoc" name="Weapon Focus" abbrev="Weapon Focus"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~at level 6, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[fInclude.fEldClaw]
        perform assign[fInclude.fVitStr]
        endif

      ~at level 10, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[fInclude.fMultiAtt]
        perform assign[fInclude.fImpVitStr]
        endif]]></eval>
    <exprreq message="Broken Blade Martial Style Required"><![CDATA[#hasability[cPWABMSBB] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABCSTW" name="Ambush Hunter: Combat Style (Two-Weapon Combat)" description="Allows the ranger to pick from a variety of two-weapon-related combat style bonus feats." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="two-weapon combat"/>
    <fieldval field="shortname" value="Two-Weapon Combat"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrTwoW1" name="Ranger Two-Weapon Style Level 1" abbrev="Ranger Two-Weapon Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~ at level 6, we add more bonus feats available (we add them to ourself,
      ~ and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[BonusFor.RgrTwoW6]
        endif

      ~ at level 10, we add more bonus feats available (we add them to ourself,
      ~ and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[BonusFor.RgrTwoW10]
        endif]]></eval>
    <exprreq message="Thrashing Dragon or Broken Blade Martial Styles Required"><![CDATA[#hasability[cPWABMSTD] + #hasability[cPWABMSBB] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABCWS" name="Ambush Hunter: Combat Style (Weapon and Shield)" description="If the ranger selects weapon and shield style, he can choose from the following list whenever he gains a combat style feat: Improved Shield Bash, Shield Focus, Shield Slam, and Two-Weapon Fighting. At 6th level, he adds Saving Shield and Shield Master to the list.{br}{br}At 10th level, he adds Bashing Finish and Greater Shield Focus to the list." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="weapon and shield"/>
    <fieldval field="shortname" value="Weapon and Shield"/>
    <usesource source="APG" parent="APGHeader" name="Advanced Player&apos;s Guide"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="fInclude" tag="fImpShBash" name="Improved Shield Bash" abbrev="Improved Shield Bash"/>
    <tag group="fInclude" tag="fShieldFoc" name="Shield Focus" abbrev="Shield Focus"/>
    <tag group="fInclude" tag="fShldSlam" name="Shield Slam" abbrev="Shield Slam"/>
    <tag group="fInclude" tag="fTwoWep" name="Two-Weapon Fighting" abbrev="Two-Weapon Fighting"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~at level 6, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[fInclude.fSavShield]
        perform assign[fInclude.fShieldMas]
        endif

      ~at level 10, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[fInclude.fBashFin]
        perform assign[fInclude.fGrtShldF]
        endif]]></eval>
    <exprreq message="Iron Tortoise Martial Style Required"><![CDATA[#hasability[cPWABMSIT] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABCSTH" name="Ambush Hunter: Combat Style (Two-Handed Weapon)" description="If the ranger selects two-handed weapon style, he can choose from the following list whenever he gains a combat style feat: Cleave, Power Attack, Pushing Assault, and Shield of Swings. At 6th level, he adds Furious Focus and Great Cleave to the list. At 10th level, he adds Dreadful Carnage and Improved Sunder to the list." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="two-handed weapon"/>
    <fieldval field="shortname" value="Two-Handed Weapon"/>
    <usesource source="APG" parent="APGHeader" name="Advanced Player&apos;s Guide"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="fInclude" tag="fCleave" name="Cleave" abbrev="Cleave"/>
    <tag group="fInclude" tag="fPowerAtt" name="Power Attack" abbrev="Power Attack"/>
    <tag group="fInclude" tag="fPushAssau" name="Pushing Assault" abbrev="Pushing Assault"/>
    <tag group="fInclude" tag="fShldSwing" name="Shield of Swings" abbrev="Shield of Swings"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~at level 6, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[fInclude.fFuriousFo]
        perform assign[fInclude.fGreatClv]
        endif

      ~at level 10, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[fInclude.fDreadCarn]
        perform assign[fInclude.fImpSunder]
        endif]]></eval>
    <exprreq message="Piercing Thunder or Scarlet Throne Martial Styles Required"><![CDATA[#hasability[cPWABMSPT] + #hasability[cPWABMSST] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABCSM" name="Ambush Hunter: Combat Style (Mounted)" description="If the ranger selects mounted combat, he can choose from the following list whenever he gains a combat style feat: Mounted Combat, Mounted Archery, Ride- By Attack, and Trick Riding. At 6th level, he adds Mounted Shield and Spirited Charge to the list. At 10th level, he adds Mounted Skirmisher and Unseat to the list." compset="CustomSpec" uniqueness="unique">
    <fieldval field="sbName" value="mounted"/>
    <fieldval field="shortname" value="Mounted"/>
    <usesource source="APG" parent="APGHeader" name="Advanced Player&apos;s Guide"/>
    <tag group="abCategory" tag="RgrComStyl" name="Ranger Combat Style" abbrev="Ranger Combat Style"/>
    <tag group="fInclude" tag="fMountArc" name="Mounted Archery" abbrev="Mounted Archery"/>
    <tag group="fInclude" tag="fMountCom" name="Mounted Combat" abbrev="Mounted Combat"/>
    <tag group="fInclude" tag="fRideBy" name="Ride-By Attack" abbrev="Ride-By Attack"/>
    <tag group="fInclude" tag="fTrickRide" name="Trick Riding" abbrev="Trick Riding"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="Helper" tag="Tertiary"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="1000"><![CDATA[
      var classcheck as string
      var levels as number

      classcheck = "Ranger"

      call LevPreReqs

      ~at level 6, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 6) then
        perform assign[fInclude.fMountShld]
        perform assign[fInclude.fSpirChar]
        endif

      ~at level 10, we add more bonus feats available (we add them to ourself, and then at First/1500, all fInclude tags are forwarded to the class)
      if (levels >= 10) then
        perform assign[fInclude.fMountSkir]
        perform assign[fInclude.fUnseat]
        endif]]></eval>
    <exprreq message="Scarlet Throne or Piercing Thunder Martial Styles Required"><![CDATA[#hasability[cPWABMSST] + #hasability[cPWABMSPT] <> 0]]></exprreq>
    </thing>
  <thing id="cPWABMSBB" name="Ambush Hunter Discipline: Broken Blade (Acrobatics)" description="Adds the Broken Blade Discipline and makes Acrobatics a Class skill" compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="4000">      perform hero.child[mHelpAmbHun].assign[Discipline.BrokenBlad]
      #makeclassskill[skAcrobat]</eval>
    </thing>
  <thing id="cPWABMSIT" name="Ambush Hunter Discipline: Iron Tortoise (Bluff)" description="Adds the Iron Tortoise Disciplines and makes Bluff a Class skill" compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="4000">      perform hero.child[mHelpAmbHun].assign[Discipline.IronTort]
      #makeclassskill[skBluff]</eval>
    </thing>
  <thing id="cPWABMSPT" name="Ambush Hunter Discipline: Piercing Thunder (Acrobatics)" description="Adds the Piercing Thunder Discipline and makes Acrobatics a Class skill" compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="4000">      perform hero.child[mHelpAmbHun].assign[Discipline.PrcThun]
      #makeclassskill[skAcrobat]</eval>
    </thing>
  <thing id="cPWABMSST" name="Ambush Hunter Discipline: Scarlet Throne (Sense Motive)" description="Adds the Scarlet Throne Discipline and makes Acrobatics a Class skill" compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="4000">      perform hero.child[mHelpAmbHun].assign[Discipline.ScarletThr]
      #makeclassskill[skSenseMot]</eval>
    </thing>
  <thing id="cPWABMSSW" name="Ambush Hunter Discipline: Solar Wind (Perception)" description="Adds the Solar Wind Discipline and makes Perception a Class skill" compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="4000">      perform hero.child[mHelpAmbHun].assign[Discipline.SolarWind]</eval>
    </thing>
  <thing id="cPWABMSTG" name="Ambush Hunter Discipline: Tempest Gale (Sleight of Hand)" description="Adds the Tempest Gale and makes Sleight of Hand a Class skill" compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="4000">      perform hero.child[mHelpAmbHun].assign[Discipline.TmpGale]
      #makeclassskill[skSleight]</eval>
    </thing>
  <thing id="cPWABMSTD" name="Ambush Hunter Discipline: Thrashing Dragon (Acrobatics)" description="Adds the Thrashing Dragon and makes Acrobatics a Class skill" compset="CustomSpec" uniqueness="unique">
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="BonusFor" tag="RgrArch1" name="Ranger Archery Style Level 1" abbrev="Ranger Archery Style Level 1"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <eval phase="First" priority="4000">      perform hero.child[mHelpAmbHun].assign[Discipline.ThrashDrag]
      #makeclassskill[skAcrobat]</eval>
    </thing>
  <thing id="cPWABABT" name="Ambush Tactics" description="The ambush hunter is adept at maneuvering with his animal companion to take advantage of any weakness his enemies present. Starting at 4th level, whenever an ambush hunter or his animal companion attack a flat-footed creature or are both flanking the same creature, they both add the ambush hunter’s initiation modifier as a bonus on damage rolls made with strikes against that flat-footed or flanked creature. Whenever the ranger and the animal companion successfully attack the same creature in a single round, the ambush hunter recovers one expended maneuver.\n\nThis ability replaces favored enemy." compset="ClSpecial">
    <tag group="AbilType" tag="Extra"/>
    <tag group="ProductId" tag="HLCommunit"/>
    </thing>
  <thing id="cPWABPS" name="Unbreakable Bond" description="At 19th level, the ambush hunter’s bond with his animal companion is so strong that it transcends time, space, life, and death. The ambush hunter always knows the exact location of his animal companion, regardless of distance (even if the animal companion is on another plane) and can view his animal companion’s location as if by a scrying spell for a number of minutes per day equal to his ambush hunter initiation modifier. The caster level for this effect is equal to the ambush hunter’s initiator level. In addition, if the ambush hunter’s animal companion dies, it reincarnates 24 hours later in a random location within 1 mile of the ambush hunter." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Super"/>
    </thing>
  <thing id="cPWABMartSt" name="Martial Style" description="At 1st level, the ambush hunter selects an additional martial discipline to gain access to. This choice also determines which combat styles he can choose from when he gains the combat style class feature. If the ambush hunter does not have the discipline’s associated skill as a class skill, he gains it as a class skill." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cCfgAmbHun" name="Ambush Hunter Maneuvers" compset="Configure" uniqueness="unique">
    <tag group="PathOfWar" tag="Config"/>
    <tag group="ProductId" tag="HLCommunit"/>
    <bootstrap thing="mHelpAmbHun"></bootstrap>
    <prereq message="You have activated more stances than allowed">
      <validate>var ValidStaOn as number
        Call ValidStaOn
        @valid = ValidStaOn</validate>
      </prereq>
    <prereq message="You have too many maneuvers readied">
      <validate>var ValidManOn as number
        Call ValidManOn
        @valid = ValidManOn</validate>
      </prereq>
    </thing>
  <thing id="mHelpAmbHun" name="Ambush Hunter Maneuvers" compset="PWManList">
    <arrayval field="cManKnown" index="0" value="3"/>
    <arrayval field="cManKnown" index="1" value="4"/>
    <arrayval field="cManKnown" index="2" value="5"/>
    <arrayval field="cManKnown" index="3" value="5"/>
    <arrayval field="cManKnown" index="4" value="6"/>
    <arrayval field="cManKnown" index="5" value="6"/>
    <arrayval field="cManKnown" index="6" value="7"/>
    <arrayval field="cManKnown" index="7" value="7"/>
    <arrayval field="cManKnown" index="8" value="8"/>
    <arrayval field="cManKnown" index="9" value="8"/>
    <arrayval field="cManKnown" index="10" value="9"/>
    <arrayval field="cManKnown" index="11" value="9"/>
    <arrayval field="cManKnown" index="12" value="10"/>
    <arrayval field="cManKnown" index="13" value="10"/>
    <arrayval field="cManKnown" index="14" value="11"/>
    <arrayval field="cManKnown" index="15" value="11"/>
    <arrayval field="cManKnown" index="16" value="12"/>
    <arrayval field="cManKnown" index="17" value="12"/>
    <arrayval field="cManKnown" index="18" value="13"/>
    <arrayval field="cManKnown" index="19" value="13"/>
    <arrayval field="cManReady" index="0" value="3"/>
    <arrayval field="cManReady" index="1" value="3"/>
    <arrayval field="cManReady" index="2" value="3"/>
    <arrayval field="cManReady" index="3" value="4"/>
    <arrayval field="cManReady" index="4" value="4"/>
    <arrayval field="cManReady" index="5" value="4"/>
    <arrayval field="cManReady" index="6" value="4"/>
    <arrayval field="cManReady" index="7" value="4"/>
    <arrayval field="cManReady" index="8" value="4"/>
    <arrayval field="cManReady" index="9" value="5"/>
    <arrayval field="cManReady" index="10" value="5"/>
    <arrayval field="cManReady" index="11" value="5"/>
    <arrayval field="cManReady" index="12" value="5"/>
    <arrayval field="cManReady" index="13" value="5"/>
    <arrayval field="cManReady" index="14" value="6"/>
    <arrayval field="cManReady" index="15" value="6"/>
    <arrayval field="cManReady" index="16" value="6"/>
    <arrayval field="cManReady" index="17" value="6"/>
    <arrayval field="cManReady" index="18" value="6"/>
    <arrayval field="cManReady" index="19" value="7"/>
    <arrayval field="cStances" index="0" value="1"/>
    <arrayval field="cStances" index="1" value="1"/>
    <arrayval field="cStances" index="2" value="1"/>
    <arrayval field="cStances" index="3" value="2"/>
    <arrayval field="cStances" index="4" value="2"/>
    <arrayval field="cStances" index="5" value="2"/>
    <arrayval field="cStances" index="6" value="2"/>
    <arrayval field="cStances" index="7" value="2"/>
    <arrayval field="cStances" index="8" value="2"/>
    <arrayval field="cStances" index="9" value="3"/>
    <arrayval field="cStances" index="10" value="3"/>
    <arrayval field="cStances" index="11" value="3"/>
    <arrayval field="cStances" index="12" value="3"/>
    <arrayval field="cStances" index="13" value="3"/>
    <arrayval field="cStances" index="14" value="4"/>
    <arrayval field="cStances" index="15" value="4"/>
    <arrayval field="cStances" index="16" value="4"/>
    <arrayval field="cStances" index="17" value="4"/>
    <arrayval field="cStances" index="18" value="4"/>
    <arrayval field="cStances" index="19" value="4"/>
    <arrayval field="cMaxManLvl" index="0" value="1"/>
    <arrayval field="cMaxManLvl" index="1" value="1"/>
    <arrayval field="cMaxManLvl" index="2" value="1"/>
    <arrayval field="cMaxManLvl" index="3" value="2"/>
    <arrayval field="cMaxManLvl" index="4" value="2"/>
    <arrayval field="cMaxManLvl" index="5" value="2"/>
    <arrayval field="cMaxManLvl" index="6" value="3"/>
    <arrayval field="cMaxManLvl" index="7" value="3"/>
    <arrayval field="cMaxManLvl" index="8" value="4"/>
    <arrayval field="cMaxManLvl" index="9" value="4"/>
    <arrayval field="cMaxManLvl" index="10" value="5"/>
    <arrayval field="cMaxManLvl" index="11" value="5"/>
    <arrayval field="cMaxManLvl" index="12" value="6"/>
    <arrayval field="cMaxManLvl" index="13" value="6"/>
    <arrayval field="cMaxManLvl" index="14" value="6"/>
    <arrayval field="cMaxManLvl" index="15" value="6"/>
    <arrayval field="cMaxManLvl" index="16" value="6"/>
    <arrayval field="cMaxManLvl" index="17" value="6"/>
    <arrayval field="cMaxManLvl" index="18" value="6"/>
    <arrayval field="cMaxManLvl" index="19" value="6"/>
    <usesource source="srcPOWEx"/>
    <tag group="UseAttr" tag="aWIS"/>
    <tag group="PathOfWar" tag="CstManProg"/>
    <tag group="Discipline" tag="GoldenLion"/>
    <tag group="Discipline" tag="PrimalFury"/>
    <link linkage="powClass" thing="cHelpRgr"/>
    <link linkage="powCfg" thing="cCfgAmbHun"/>
    </thing>
  <thing id="cPWABPaSa" name="Pack Savagery" description="Starting at 8th level, whenever the ambush hunter or his animal companion initiates a boost from the Primal Fury or Golden Lion disciplines, both the ambush hunter and his animal companion gain the benefits of the boost. The ambush hunter and the animal companion can only benefit from one such boost per round, even if they use this ability.\n\nThis ability replaces quarry." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  <thing id="cPWABMartComp1" name="Martial Companion" description="At 4th level, an ambush hunter gains the companionship of a loyal animal companion. This functions as the ranger’s hunter’s bond class feature except for the following. The ambush hunter’s animal companion gains a list of maneuvers and stances known equal to 1/2 the number of maneuvers or stances known by the ambush hunter (rounded down). The animal companion can only learn maneuvers from the Primal Fury discipline, and treats its natural attacks as Primal Fury discipline weapons. For example, a 4th level ambush hunter knows 5 maneuvers and 2 stances; his animal companion would learn 2 maneuvers and 1 stance from the Primal Fury discipline.\n\nThe animal companion does not ready its maneuvers; it has access to each of its known maneuvers at all times. When the animal companion initiates a maneuver, the ambush hunter expends one of his readied maneuvers of his choice. If the ambush hunter has no unexpended maneuvers, the animal companion cannot initiate its maneuvers. The animal companion’s initiation modifier is Wisdom, and its initiator level is equal to the ambush hunter’s initiator level.\n\nThis ability replaces hunter’s bond.\nThis ability functions like the druid animal companion ability (which is part of the Nature Bond class feature), except that the ranger&apos;s effective druid level is equal to his ranger level - 3." compset="CustomSpec" uniqueness="unique">
    <fieldval field="shortname" value="Animal Companion"/>
    <tag group="Helper" tag="SpecUp" name="SpecUp" abbrev="SpecUp"/>
    <tag group="abAction" tag="None" name="No action" abbrev="None"/>
    <tag group="abDuration" tag="Constant" name="Constant" abbrev="cons"/>
    <tag group="abRange" tag="Personal" name="Personal" abbrev="pers"/>
    <tag group="AbilType" tag="Extra" name="Extraordinary Ability" abbrev="Ex"/>
    <tag group="SpecSource" tag="arPWAmbHun"/>
    <tag group="Helper" tag="Quaternary"/>
    <bootstrap thing="cAnimShare">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <bootstrap thing="cAnimClass">
      <assignval field="CompClAdj" value="-3"/>
      </bootstrap>
    <bootstrap thing="cAnimLink">
      <autotag group="ClSpecWhen" tag="4"/>
      </bootstrap>
    <eval phase="First" priority="375">linkage[table].field[cAnimStart].value = 4</eval>
    <eval phase="Render" priority="10000" index="2"><![CDATA[
      if (hero.childlives[cAnimComp] = 0) then
        field[sbName].text = "animal companion"
        done
        endif

      var abilname as string
      abilname = "Martial Companion"
      call AnimCompNm

      if (field[sbName].isempty <> 0) then
        field[sbName].text = "animal companion"
        endif]]></eval>
    </thing>
  <thing id="cPWABMartComp" name="Martial Companion" description="At 4th level, an ambush hunter gains the companionship of a loyal animal companion. This functions as the ranger’s hunter’s bond class feature except for the following. The ambush hunter’s animal companion gains a list of maneuvers and stances known equal to 1/2 the number of maneuvers or stances known by the ambush hunter (rounded down). The animal companion can only learn maneuvers from the Primal Fury discipline, and treats its natural attacks as Primal Fury discipline weapons. For example, a 4th level ambush hunter knows 5 maneuvers and 2 stances; his animal companion would learn 2 maneuvers and 1 stance from the Primal Fury discipline.\n\nThe animal companion does not ready its maneuvers; it has access to each of its known maneuvers at all times. When the animal companion initiates a maneuver, the ambush hunter expends one of his readied maneuvers of his choice. If the ambush hunter has no unexpended maneuvers, the animal companion cannot initiate its maneuvers. The animal companion’s initiation modifier is Wisdom, and its initiator level is equal to the ambush hunter’s initiator level.\n\nThis ability replaces hunter’s bond." compset="ClSpecial">
    <tag group="ProductId" tag="HLCommunit"/>
    <tag group="AbilType" tag="Extra"/>
    </thing>
  </document>
